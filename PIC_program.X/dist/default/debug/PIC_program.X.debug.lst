

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Nov 22 14:49:04 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.44
    15                           ; Generated 14/09/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F1823 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  010C                     	;# 
    91  010E                     	;# 
    92  0111                     	;# 
    93  0112                     	;# 
    94  0113                     	;# 
    95  0114                     	;# 
    96  0115                     	;# 
    97  0116                     	;# 
    98  0117                     	;# 
    99  0118                     	;# 
   100  0119                     	;# 
   101  011A                     	;# 
   102  011B                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  018E                     	;# 
   107  0191                     	;# 
   108  0191                     	;# 
   109  0192                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0194                     	;# 
   114  0195                     	;# 
   115  0196                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019E                     	;# 
   126  019F                     	;# 
   127  020C                     	;# 
   128  020E                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  0212                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0214                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0291                     	;# 
   145  0291                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0294                     	;# 
   149  0295                     	;# 
   150  0295                     	;# 
   151  0296                     	;# 
   152  0391                     	;# 
   153  0392                     	;# 
   154  0393                     	;# 
   155  039A                     	;# 
   156  039C                     	;# 
   157  039D                     	;# 
   158  039E                     	;# 
   159  039F                     	;# 
   160  0FE4                     	;# 
   161  0FE5                     	;# 
   162  0FE6                     	;# 
   163  0FE7                     	;# 
   164  0FE8                     	;# 
   165  0FE9                     	;# 
   166  0FEA                     	;# 
   167  0FEB                     	;# 
   168  0FED                     	;# 
   169  0FEE                     	;# 
   170  0FEF                     	;# 
   171  000B                     _INTCON	set	11
   172  000E                     _PORTC	set	14
   173  000C                     _PORTA	set	12
   174  005F                     _GIE	set	95
   175  0099                     _OSCCON	set	153
   176  009B                     _ADRESL	set	155
   177  009C                     _ADRESH	set	156
   178  009E                     _ADCON1bits	set	158
   179  009D                     _ADCON0bits	set	157
   180  008E                     _TRISC	set	142
   181  008C                     _TRISA	set	140
   182  0095                     _OPTION_REG	set	149
   183  04D4                     _HFIOFR	set	1236
   184  04E9                     _GO_nDONE	set	1257
   185  04E8                     _ADON	set	1256
   186  048E                     _ADIE	set	1166
   187  04F7                     _ADFM	set	1271
   188  010E                     _LATC	set	270
   189  010C                     _LATA	set	268
   190  018E                     _ANSELC	set	398
   191  018C                     _ANSELA	set	396
   192                           
   193                           ; #config settings
   194  0000                     
   195                           	psect	cinit
   196  07FC                     start_initialization:	
   197  07FC                     __initialization:	
   198                           
   199                           ; Clear objects allocated to COMMON
   200  07FC  01FB               	clrf	__pbssCOMMON& (0+127)
   201  07FD  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   202  07FE                     end_of_initialization:	
   203                           ;End of C runtime variable initialization code
   204                           
   205  07FE                     __end_of__initialization:	
   206  07FE  0020               	movlb	0
   207  07FF  2FAB               	ljmp	_main	;jump to C main() function
   208                           
   209                           	psect	bssCOMMON
   210  007B                     __pbssCOMMON:	
   211  007B                     _portC:	
   212  007B                     	ds	1
   213  007C                     _portA:	
   214  007C                     	ds	1
   215                           
   216                           	psect	cstackCOMMON
   217  0070                     __pcstackCOMMON:	
   218  0070                     ?_InitialisePorts:	
   219  0070                     ??_InitialisePorts:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_PIN6:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ??_PIN6:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_InitialiseADC:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ??_InitialiseADC:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_ReadADC:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_main:	
   238                           ; 2 bytes @ 0x0
   239                           
   240                           
   241                           ; 2 bytes @ 0x0
   242  0070                     	ds	1
   243  0071                     PIN6@OnOff:	
   244                           
   245                           ; 1 bytes @ 0x1
   246  0071                     	ds	1
   247  0072                     ??_ReadADC:	
   248                           
   249                           ; 1 bytes @ 0x2
   250  0072                     	ds	2
   251  0074                     ReadADC@adcData:	
   252                           
   253                           ; 2 bytes @ 0x4
   254  0074                     	ds	2
   255  0076                     ??_main:	
   256                           
   257                           ; 1 bytes @ 0x6
   258  0076                     	ds	1
   259  0077                     main@temp:	
   260                           
   261                           ; 1 bytes @ 0x7
   262  0077                     	ds	1
   263  0078                     main@Vread:	
   264                           
   265                           ; 2 bytes @ 0x8
   266  0078                     	ds	2
   267  007A                     main@chDelay:	
   268                           
   269                           ; 1 bytes @ 0xA
   270  007A                     	ds	1
   271                           
   272                           	psect	maintext
   273  07AB                     __pmaintext:	
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 18 in file "newmain.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;  temp            1    7[COMMON] unsigned char 
   284 ;;  Vread           2    8[COMMON] unsigned short 
   285 ;;  chDelay         1   10[COMMON] unsigned char 
   286 ;; Return value:  Size  Location     Type
   287 ;;                  2   70[None  ] int 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B1F/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1
   295 ;;      Params:         0       0       0
   296 ;;      Locals:         4       0       0
   297 ;;      Temps:          1       0       0
   298 ;;      Totals:         5       0       0
   299 ;;Total ram usage:        5 bytes
   300 ;; Hardware stack levels required when called:    1
   301 ;; This function calls:
   302 ;;		_InitialiseADC
   303 ;;		_InitialisePorts
   304 ;;		_PIN6
   305 ;;		_ReadADC
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _main
   313  07AB                     _main:	
   314                           
   315                           ;newmain.c: 21: OSCCON = 0b01011000;
   316                           
   317                           ;incstack = 0
   318                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   319  07AB  3058               	movlw	88
   320  07AC  0021               	movlb	1	; select bank1
   321  07AD  0099               	movwf	25	;volatile
   322  07AE                     l71:	
   323                           ;newmain.c: 32: while(HFIOFR==0){
   324                           
   325  07AE  1E1A               	btfss	26,4	;volatile
   326  07AF  2FAE               	goto	l71
   327                           
   328                           ;newmain.c: 33: }
   329                           ;newmain.c: 36: INTCON = 0b00000000;
   330  07B0  018B               	clrf	11	;volatile
   331                           
   332                           ;newmain.c: 37: GIE = 0;
   333  07B1  138B               	bcf	11,7	;volatile
   334                           
   335                           ;newmain.c: 39: InitialisePorts();
   336  07B2  2776               	fcall	_InitialisePorts
   337                           
   338                           ;newmain.c: 40: InitialiseADC();
   339  07B3  2766               	fcall	_InitialiseADC
   340                           
   341                           ;newmain.c: 41: ADON=1;
   342  07B4  0021               	movlb	1	; select bank1
   343  07B5  141D               	bsf	29,0	;volatile
   344                           
   345                           ;newmain.c: 42: unsigned short Vread;
   346                           ;newmain.c: 43: char chDelay=500;
   347  07B6  30F4               	movlw	244
   348  07B7  00F6               	movwf	??_main
   349  07B8  0876               	movf	??_main,w
   350  07B9  00FA               	movwf	main@chDelay
   351  07BA                     l681:	
   352                           ;newmain.c: 44: while(1){
   353                           
   354                           
   355                           ;newmain.c: 46: char temp = PORTA;
   356  07BA  0020               	movlb	0	; select bank0
   357  07BB  080C               	movf	12,w	;volatile
   358  07BC  00F6               	movwf	??_main
   359  07BD  0876               	movf	??_main,w
   360  07BE  00F7               	movwf	main@temp
   361                           
   362                           ;newmain.c: 50: if((PORTA & 0x10) != 0) {
   363  07BF  1E0C               	btfss	12,4	;volatile
   364  07C0  2FBA               	goto	l681
   365                           
   366                           ;newmain.c: 52: Vread = ReadADC();
   367  07C1  278B               	fcall	_ReadADC
   368  07C2  0871               	movf	?_ReadADC+1,w
   369  07C3  00F9               	movwf	main@Vread+1
   370  07C4  0870               	movf	?_ReadADC,w
   371  07C5  00F8               	movwf	main@Vread
   372                           
   373                           ;newmain.c: 54: chDelay = 0;
   374  07C6  01FA               	clrf	main@chDelay
   375                           
   376                           ;newmain.c: 55: if (Vread>500){
   377  07C7  3001               	movlw	1
   378  07C8  0279               	subwf	main@Vread+1,w
   379  07C9  30F5               	movlw	245
   380  07CA  1903               	skipnz
   381  07CB  0278               	subwf	main@Vread,w
   382  07CC  1C03               	skipc
   383  07CD  2FD0               	goto	l76
   384                           
   385                           ;newmain.c: 56: chDelay = 1;
   386  07CE  01FA               	clrf	main@chDelay
   387  07CF  0AFA               	incf	main@chDelay,f
   388  07D0                     l76:	
   389                           
   390                           ;newmain.c: 57: }
   391                           ;newmain.c: 61: _delay((unsigned long)((10)*(1000000/4000000.0)));
   392  07D0  3200               	nop2	;2 cycle nop
   393                           
   394                           ;newmain.c: 63: PIN6(1);
   395  07D1  3001               	movlw	1
   396  07D2  2758               	fcall	_PIN6
   397                           
   398                           ;newmain.c: 66: if (chDelay==0) {
   399  07D3  087A               	movf	main@chDelay,w
   400  07D4  1D03               	btfss	3,2
   401  07D5  2FDE               	goto	l699
   402                           
   403                           ;newmain.c: 67: _delay((unsigned long)((250)*(1000000/4000.0)));
   404  07D6  3052               	movlw	82
   405  07D7  00F6               	movwf	??_main
   406  07D8  302A               	movlw	42
   407  07D9                     u157:	
   408  07D9  0B89               	decfsz	9,f
   409  07DA  2FD9               	goto	u157
   410  07DB  0BF6               	decfsz	??_main,f
   411  07DC  2FD9               	goto	u157
   412                           
   413                           ;newmain.c: 69: }
   414  07DD  2FE6               	goto	l701
   415  07DE                     l699:	
   416                           
   417                           ;newmain.c: 70: else {
   418                           ;newmain.c: 71: _delay((unsigned long)((500)*(1000000/4000.0)));
   419  07DE  30A3               	movlw	163
   420  07DF  00F6               	movwf	??_main
   421  07E0  3055               	movlw	85
   422  07E1                     u167:	
   423  07E1  0B89               	decfsz	9,f
   424  07E2  2FE1               	goto	u167
   425  07E3  0BF6               	decfsz	??_main,f
   426  07E4  2FE1               	goto	u167
   427  07E5  0000               	nop
   428  07E6                     l701:	
   429                           
   430                           ;newmain.c: 72: }
   431                           ;newmain.c: 73: PIN6(0);
   432  07E6  3000               	movlw	0
   433  07E7  2758               	fcall	_PIN6
   434                           
   435                           ;newmain.c: 76: if (chDelay==0) {
   436  07E8  087A               	movf	main@chDelay,w
   437  07E9  1D03               	btfss	3,2
   438  07EA  2FF3               	goto	l707
   439                           
   440                           ;newmain.c: 77: _delay((unsigned long)((250)*(1000000/4000.0)));
   441  07EB  3052               	movlw	82
   442  07EC  00F6               	movwf	??_main
   443  07ED  302A               	movlw	42
   444  07EE                     u177:	
   445  07EE  0B89               	decfsz	9,f
   446  07EF  2FEE               	goto	u177
   447  07F0  0BF6               	decfsz	??_main,f
   448  07F1  2FEE               	goto	u177
   449                           
   450                           ;newmain.c: 79: }
   451  07F2  2FBA               	goto	l681
   452  07F3                     l707:	
   453                           
   454                           ;newmain.c: 80: else {
   455                           ;newmain.c: 81: _delay((unsigned long)((500)*(1000000/4000.0)));
   456  07F3  30A3               	movlw	163
   457  07F4  00F6               	movwf	??_main
   458  07F5  3055               	movlw	85
   459  07F6                     u187:	
   460  07F6  0B89               	decfsz	9,f
   461  07F7  2FF6               	goto	u187
   462  07F8  0BF6               	decfsz	??_main,f
   463  07F9  2FF6               	goto	u187
   464  07FA  0000               	nop
   465  07FB  2FBA               	goto	l681
   466  07FC                     __end_of_main:	
   467                           ;newmain.c: 82: }
   468                           ;newmain.c: 83: }
   469                           ;newmain.c: 86: }
   470                           ;newmain.c: 89: return (0);
   471                           ;	Return value of _main is never used
   472                           
   473                           
   474                           	psect	text1
   475  078B                     __ptext1:	
   476 ;; *************** function _ReadADC *****************
   477 ;; Defined at:
   478 ;;		line 29 in file "ADC.h"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  adcData         2    4[COMMON] unsigned short 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  2    0[COMMON] unsigned short 
   485 ;; Registers used:
   486 ;;		wreg, status,2
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1
   492 ;;      Params:         2       0       0
   493 ;;      Locals:         2       0       0
   494 ;;      Temps:          2       0       0
   495 ;;      Totals:         6       0       0
   496 ;;Total ram usage:        6 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _ReadADC
   507  078B                     _ReadADC:	
   508                           
   509                           ;ADC.h: 31: unsigned short adcData = 0;
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in _ReadADC: [wreg+status,2]
   513  078B  01F4               	clrf	ReadADC@adcData
   514  078C  01F5               	clrf	ReadADC@adcData+1
   515                           
   516                           ;ADC.h: 33: GO_nDONE = 1;
   517  078D  0021               	movlb	1	; select bank1
   518  078E  149D               	bsf	29,1	;volatile
   519  078F                     l63:	
   520                           ;ADC.h: 34: while (GO_nDONE){
   521                           
   522  078F  189D               	btfsc	29,1	;volatile
   523  0790  2F8F               	goto	l63
   524                           
   525                           ;ADC.h: 35: }
   526                           ;ADC.h: 38: adcData = (ADRESH & 0x03);
   527  0791  081C               	movf	28,w	;volatile
   528  0792  3903               	andlw	3
   529  0793  00F2               	movwf	??_ReadADC
   530  0794  01F3               	clrf	??_ReadADC+1
   531  0795  0872               	movf	??_ReadADC,w
   532  0796  00F4               	movwf	ReadADC@adcData
   533  0797  0873               	movf	??_ReadADC+1,w
   534  0798  00F5               	movwf	ReadADC@adcData+1
   535                           
   536                           ;ADC.h: 39: adcData<<=8;
   537  0799  3008               	movlw	8
   538  079A                     u95:	
   539  079A  35F4               	lslf	ReadADC@adcData,f
   540  079B  0DF5               	rlf	ReadADC@adcData+1,f
   541  079C  0B89               	decfsz	9,f
   542  079D  2F9A               	goto	u95
   543                           
   544                           ;ADC.h: 40: adcData+=ADRESL;
   545  079E  081B               	movf	27,w	;volatile
   546  079F  00F2               	movwf	??_ReadADC
   547  07A0  01F3               	clrf	??_ReadADC+1
   548  07A1  0872               	movf	??_ReadADC,w
   549  07A2  07F4               	addwf	ReadADC@adcData,f
   550  07A3  0873               	movf	??_ReadADC+1,w
   551  07A4  3DF5               	addwfc	ReadADC@adcData+1,f
   552                           
   553                           ;ADC.h: 42: GO_nDONE = 0;
   554  07A5  109D               	bcf	29,1	;volatile
   555                           
   556                           ;ADC.h: 45: return adcData;
   557  07A6  0875               	movf	ReadADC@adcData+1,w
   558  07A7  00F1               	movwf	?_ReadADC+1
   559  07A8  0874               	movf	ReadADC@adcData,w
   560  07A9  00F0               	movwf	?_ReadADC
   561  07AA  0008               	return
   562  07AB                     __end_of_ReadADC:	
   563                           
   564                           	psect	text2
   565  0758                     __ptext2:	
   566 ;; *************** function _PIN6 *****************
   567 ;; Defined at:
   568 ;;		line 109 in file "IO_Controls.h"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  OnOff           1    wreg     unsigned char 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  OnOff           1    1[COMMON] unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1
   582 ;;      Params:         0       0       0
   583 ;;      Locals:         1       0       0
   584 ;;      Temps:          1       0       0
   585 ;;      Totals:         2       0       0
   586 ;;Total ram usage:        2 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _PIN6
   597  0758                     _PIN6:	
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _PIN6: [wreg+status,2]
   601                           ;PIN6@OnOff stored from wreg
   602  0758  00F1               	movwf	PIN6@OnOff
   603                           
   604                           ;IO_Controls.h: 111: portC.portCByte = PORTC;
   605  0759  0020               	movlb	0	; select bank0
   606  075A  080E               	movf	14,w	;volatile
   607  075B  00F0               	movwf	??_PIN6
   608  075C  0870               	movf	??_PIN6,w
   609  075D  00FB               	movwf	_portC
   610                           
   611                           ;IO_Controls.h: 112: portC.bits.Pin6 = OnOff;
   612  075E  0871               	movf	PIN6@OnOff,w
   613  075F  3901               	andlw	1
   614  0760  127B               	bcf	_portC,4
   615  0761  1D03               	skipz
   616  0762  167B               	bsf	_portC,4
   617                           
   618                           ;IO_Controls.h: 113: PORTC=portC.portCByte;
   619  0763  087B               	movf	_portC,w
   620  0764  008E               	movwf	14	;volatile
   621  0765  0008               	return
   622  0766                     __end_of_PIN6:	
   623                           ;IO_Controls.h: 114: return;
   624                           
   625                           
   626                           	psect	text3
   627  0776                     __ptext3:	
   628 ;; *************** function _InitialisePorts *****************
   629 ;; Defined at:
   630 ;;		line 51 in file "IO_Controls.h"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1
   644 ;;      Params:         0       0       0
   645 ;;      Locals:         0       0       0
   646 ;;      Temps:          0       0       0
   647 ;;      Totals:         0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _InitialisePorts
   659  0776                     _InitialisePorts:	
   660                           
   661                           ;IO_Controls.h: 53: OPTION_REG = 0b10000000;
   662                           
   663                           ;incstack = 0
   664                           ; Regs used in _InitialisePorts: [wreg+status,2]
   665  0776  3080               	movlw	128
   666  0777  0021               	movlb	1	; select bank1
   667  0778  0095               	movwf	21	;volatile
   668                           
   669                           ;IO_Controls.h: 70: portA.portAByte = 0;
   670  0779  01FC               	clrf	_portA
   671                           
   672                           ;IO_Controls.h: 71: LATA = 0;
   673  077A  0022               	movlb	2	; select bank2
   674  077B  018C               	clrf	12	;volatile
   675                           
   676                           ;IO_Controls.h: 72: ANSELA = 0b00000000;
   677  077C  0023               	movlb	3	; select bank3
   678  077D  018C               	clrf	12	;volatile
   679                           
   680                           ;IO_Controls.h: 74: TRISA = 0b00011000;
   681  077E  3018               	movlw	24
   682  077F  0021               	movlb	1	; select bank1
   683  0780  008C               	movwf	12	;volatile
   684                           
   685                           ;IO_Controls.h: 88: portC.portCByte = 0;
   686  0781  01FB               	clrf	_portC
   687                           
   688                           ;IO_Controls.h: 89: LATC = 0;
   689  0782  0022               	movlb	2	; select bank2
   690  0783  018E               	clrf	14	;volatile
   691                           
   692                           ;IO_Controls.h: 90: ANSELC = 0b00001000;
   693  0784  3008               	movlw	8
   694  0785  0023               	movlb	3	; select bank3
   695  0786  008E               	movwf	14	;volatile
   696                           
   697                           ;IO_Controls.h: 93: TRISC = 0b00001000;
   698  0787  3008               	movlw	8
   699  0788  0021               	movlb	1	; select bank1
   700  0789  008E               	movwf	14	;volatile
   701  078A  0008               	return
   702  078B                     __end_of_InitialisePorts:	
   703                           ;IO_Controls.h: 96: return;
   704                           
   705                           
   706                           	psect	text4
   707  0766                     __ptext4:	
   708 ;; *************** function _InitialiseADC *****************
   709 ;; Defined at:
   710 ;;		line 14 in file "ADC.h"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1
   724 ;;      Params:         0       0       0
   725 ;;      Locals:         0       0       0
   726 ;;      Temps:          0       0       0
   727 ;;      Totals:         0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _InitialiseADC
   739  0766                     _InitialiseADC:	
   740                           
   741                           ;ADC.h: 16: ADCON0bits.CHS = 0b0111;
   742                           
   743                           ;incstack = 0
   744                           ; Regs used in _InitialiseADC: [wreg+status,2+status,0]
   745  0766  0021               	movlb	1	; select bank1
   746  0767  081D               	movf	29,w	;volatile
   747  0768  3983               	andlw	-125
   748  0769  381C               	iorlw	28
   749  076A  009D               	movwf	29	;volatile
   750                           
   751                           ;ADC.h: 17: ADFM = 1;
   752  076B  179E               	bsf	30,7	;volatile
   753                           
   754                           ;ADC.h: 18: ADCON1bits.ADCS = 0b000;
   755  076C  308F               	movlw	-113
   756  076D  059E               	andwf	30,f	;volatile
   757                           
   758                           ;ADC.h: 20: ADCON1bits.ADPREF = 0b000;
   759  076E  30FC               	movlw	-4
   760  076F  059E               	andwf	30,f	;volatile
   761                           
   762                           ;ADC.h: 22: _delay((unsigned long)((10)*(1000000/4000000.0)));
   763  0770  3200               	nop2	;2 cycle nop
   764                           
   765                           ;ADC.h: 23: ADIE=0;
   766  0771  0021               	movlb	1	; select bank1
   767  0772  1311               	bcf	17,6	;volatile
   768                           
   769                           ;ADC.h: 24: ADON=0;
   770  0773  101D               	bcf	29,0	;volatile
   771                           
   772                           ;ADC.h: 25: GO_nDONE=0;
   773  0774  109D               	bcf	29,1	;volatile
   774  0775  0008               	return
   775  0776                     __end_of_InitialiseADC:	
   776                           ;ADC.h: 26: return;
   777                           
   778  007E                     btemp	set	126	;btemp
   779  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0       0
    BANK1            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ReadADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     112
                                              6 COMMON     5     5      0
                      _InitialiseADC
                    _InitialisePorts
                               _PIN6
                            _ReadADC
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2      26
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _PIN6                                                 2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitialisePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitialiseADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitialiseADC
   _InitialisePorts
   _PIN6
   _ReadADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       D       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Nov 22 14:49:04 2017

             __CFG_CP$OFF 0000                        l63 078F                        l71 07AE  
                      l76 07D0                        u95 079A                       l701 07E6  
                     l707 07F3                       l681 07BA                       l699 07DE  
                     _GIE 005F                       u157 07D9                       u167 07E1  
                     u177 07EE              __CFG_CPD$OFF 0000                       u187 07F6  
             main@chDelay 007A              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      _ADIE 048E                      _ADFM 04F7  
                    _ADON 04E8                      _LATA 010C                      _LATC 010E  
                    _PIN6 0758              __CFG_WRT$OFF 0000                      _main 07AB  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 0002  
           __CFG_IESO$OFF 0000    __size_of_InitialiseADC 0010           __end_of_ReadADC 07AB  
                   ?_PIN6 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PORTA 000C                     _PORTC 000E                     _TRISA 008C  
                   _TRISC 008E             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   _portA 007C                     _portC 007B                     status 0003  
                   wtemp0 007E              __end_of_PIN6 0766            __CFG_MCLRE$OFF 0000  
         __initialization 07FC              __end_of_main 07FC            ReadADC@adcData 0074  
                  ??_PIN6 0070                    ??_main 0076            __CFG_PLLEN$OFF 0000  
           _InitialiseADC 0766                    _ADRESH 009C                    _ADRESL 009B  
                  _ANSELA 018C                    _ANSELC 018E                    _HFIOFR 04D4  
                  _INTCON 000B                    _OSCCON 0099                 ??_ReadADC 0072  
          __CFG_STVREN$ON 0000            ?_InitialiseADC 0070   __end_of__initialization 07FE  
          __pcstackCOMMON 0070  __size_of_InitialisePorts 0015                 PIN6@OnOff 0071  
              __pmaintext 07AB           ??_InitialiseADC 0070                   _ReadADC 078B  
                 __ptext1 078B                   __ptext2 0758                   __ptext3 0776  
                 __ptext4 0766         ??_InitialisePorts 0070      end_of_initialization 07FE  
        __CFG_FOSC$INTOSC 0000       start_initialization 07FC               __pbssCOMMON 007B  
               ___latbits 0000                  ?_ReadADC 0070           _InitialisePorts 0776  
   __end_of_InitialiseADC 0776                  _GO_nDONE 04E9                _ADCON0bits 009D  
              _ADCON1bits 009E                 main@Vread 0078   __end_of_InitialisePorts 078B  
        __size_of_ReadADC 0020             __size_of_PIN6 000E             __size_of_main 0051  
                main@temp 0077          ?_InitialisePorts 0070         __CFG_CLKOUTEN$OFF 0000  
              _OPTION_REG 0095  
