

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Apr 11 12:14:40 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 1.44
    32                           ; Generated 14/09/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1823 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  018C                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000E                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  008C                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  010C                     	;# 
   231  010E                     	;# 
   232  0111                     	;# 
   233  0112                     	;# 
   234  0113                     	;# 
   235  0114                     	;# 
   236  0115                     	;# 
   237  0116                     	;# 
   238  0117                     	;# 
   239  0118                     	;# 
   240  0119                     	;# 
   241  011A                     	;# 
   242  011B                     	;# 
   243  011D                     	;# 
   244  011D                     	;# 
   245  018C                     	;# 
   246  018E                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0193                     	;# 
   253  0194                     	;# 
   254  0195                     	;# 
   255  0196                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019C                     	;# 
   263  019C                     	;# 
   264  019D                     	;# 
   265  019E                     	;# 
   266  019F                     	;# 
   267  020C                     	;# 
   268  020E                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0213                     	;# 
   275  0214                     	;# 
   276  0214                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0294                     	;# 
   289  0295                     	;# 
   290  0295                     	;# 
   291  0296                     	;# 
   292  0391                     	;# 
   293  0392                     	;# 
   294  0393                     	;# 
   295  039A                     	;# 
   296  039C                     	;# 
   297  039D                     	;# 
   298  039E                     	;# 
   299  039F                     	;# 
   300  0FE4                     	;# 
   301  0FE5                     	;# 
   302  0FE6                     	;# 
   303  0FE7                     	;# 
   304  0FE8                     	;# 
   305  0FE9                     	;# 
   306  0FEA                     	;# 
   307  0FEB                     	;# 
   308  0FED                     	;# 
   309  0FEE                     	;# 
   310  0FEF                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000E                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  008C                     	;# 
   339  008E                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  010C                     	;# 
   354  010E                     	;# 
   355  0111                     	;# 
   356  0112                     	;# 
   357  0113                     	;# 
   358  0114                     	;# 
   359  0115                     	;# 
   360  0116                     	;# 
   361  0117                     	;# 
   362  0118                     	;# 
   363  0119                     	;# 
   364  011A                     	;# 
   365  011B                     	;# 
   366  011D                     	;# 
   367  011D                     	;# 
   368  018C                     	;# 
   369  018E                     	;# 
   370  0191                     	;# 
   371  0191                     	;# 
   372  0192                     	;# 
   373  0193                     	;# 
   374  0193                     	;# 
   375  0193                     	;# 
   376  0194                     	;# 
   377  0195                     	;# 
   378  0196                     	;# 
   379  0199                     	;# 
   380  019A                     	;# 
   381  019B                     	;# 
   382  019B                     	;# 
   383  019B                     	;# 
   384  019B                     	;# 
   385  019C                     	;# 
   386  019C                     	;# 
   387  019D                     	;# 
   388  019E                     	;# 
   389  019F                     	;# 
   390  020C                     	;# 
   391  020E                     	;# 
   392  0211                     	;# 
   393  0211                     	;# 
   394  0212                     	;# 
   395  0212                     	;# 
   396  0213                     	;# 
   397  0213                     	;# 
   398  0214                     	;# 
   399  0214                     	;# 
   400  0215                     	;# 
   401  0215                     	;# 
   402  0215                     	;# 
   403  0216                     	;# 
   404  0216                     	;# 
   405  0217                     	;# 
   406  0217                     	;# 
   407  0291                     	;# 
   408  0291                     	;# 
   409  0292                     	;# 
   410  0293                     	;# 
   411  0294                     	;# 
   412  0295                     	;# 
   413  0295                     	;# 
   414  0296                     	;# 
   415  0391                     	;# 
   416  0392                     	;# 
   417  0393                     	;# 
   418  039A                     	;# 
   419  039C                     	;# 
   420  039D                     	;# 
   421  039E                     	;# 
   422  039F                     	;# 
   423  0FE4                     	;# 
   424  0FE5                     	;# 
   425  0FE6                     	;# 
   426  0FE7                     	;# 
   427  0FE8                     	;# 
   428  0FE9                     	;# 
   429  0FEA                     	;# 
   430  0FEB                     	;# 
   431  0FED                     	;# 
   432  0FEE                     	;# 
   433  0FEF                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000E                     	;# 
   448  0011                     	;# 
   449  0012                     	;# 
   450  0015                     	;# 
   451  0016                     	;# 
   452  0016                     	;# 
   453  0017                     	;# 
   454  0018                     	;# 
   455  0019                     	;# 
   456  001A                     	;# 
   457  001B                     	;# 
   458  001C                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  008C                     	;# 
   462  008E                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  010C                     	;# 
   477  010E                     	;# 
   478  0111                     	;# 
   479  0112                     	;# 
   480  0113                     	;# 
   481  0114                     	;# 
   482  0115                     	;# 
   483  0116                     	;# 
   484  0117                     	;# 
   485  0118                     	;# 
   486  0119                     	;# 
   487  011A                     	;# 
   488  011B                     	;# 
   489  011D                     	;# 
   490  011D                     	;# 
   491  018C                     	;# 
   492  018E                     	;# 
   493  0191                     	;# 
   494  0191                     	;# 
   495  0192                     	;# 
   496  0193                     	;# 
   497  0193                     	;# 
   498  0193                     	;# 
   499  0194                     	;# 
   500  0195                     	;# 
   501  0196                     	;# 
   502  0199                     	;# 
   503  019A                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019D                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  020C                     	;# 
   514  020E                     	;# 
   515  0211                     	;# 
   516  0211                     	;# 
   517  0212                     	;# 
   518  0212                     	;# 
   519  0213                     	;# 
   520  0213                     	;# 
   521  0214                     	;# 
   522  0214                     	;# 
   523  0215                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0216                     	;# 
   527  0216                     	;# 
   528  0217                     	;# 
   529  0217                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0294                     	;# 
   535  0295                     	;# 
   536  0295                     	;# 
   537  0296                     	;# 
   538  0391                     	;# 
   539  0392                     	;# 
   540  0393                     	;# 
   541  039A                     	;# 
   542  039C                     	;# 
   543  039D                     	;# 
   544  039E                     	;# 
   545  039F                     	;# 
   546  0FE4                     	;# 
   547  0FE5                     	;# 
   548  0FE6                     	;# 
   549  0FE7                     	;# 
   550  0FE8                     	;# 
   551  0FE9                     	;# 
   552  0FEA                     	;# 
   553  0FEB                     	;# 
   554  0FED                     	;# 
   555  0FEE                     	;# 
   556  0FEF                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  000E                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0015                     	;# 
   574  0016                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001C                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  008C                     	;# 
   585  008E                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0095                     	;# 
   589  0096                     	;# 
   590  0097                     	;# 
   591  0098                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  010C                     	;# 
   600  010E                     	;# 
   601  0111                     	;# 
   602  0112                     	;# 
   603  0113                     	;# 
   604  0114                     	;# 
   605  0115                     	;# 
   606  0116                     	;# 
   607  0117                     	;# 
   608  0118                     	;# 
   609  0119                     	;# 
   610  011A                     	;# 
   611  011B                     	;# 
   612  011D                     	;# 
   613  011D                     	;# 
   614  018C                     	;# 
   615  018E                     	;# 
   616  0191                     	;# 
   617  0191                     	;# 
   618  0192                     	;# 
   619  0193                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0194                     	;# 
   623  0195                     	;# 
   624  0196                     	;# 
   625  0199                     	;# 
   626  019A                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019D                     	;# 
   634  019E                     	;# 
   635  019F                     	;# 
   636  020C                     	;# 
   637  020E                     	;# 
   638  0211                     	;# 
   639  0211                     	;# 
   640  0212                     	;# 
   641  0212                     	;# 
   642  0213                     	;# 
   643  0213                     	;# 
   644  0214                     	;# 
   645  0214                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0216                     	;# 
   650  0216                     	;# 
   651  0217                     	;# 
   652  0217                     	;# 
   653  0291                     	;# 
   654  0291                     	;# 
   655  0292                     	;# 
   656  0293                     	;# 
   657  0294                     	;# 
   658  0295                     	;# 
   659  0295                     	;# 
   660  0296                     	;# 
   661  0391                     	;# 
   662  0392                     	;# 
   663  0393                     	;# 
   664  039A                     	;# 
   665  039C                     	;# 
   666  039D                     	;# 
   667  039E                     	;# 
   668  039F                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680                           
   681                           	psect	idataBANK0
   682  01C0                     __pidataBANK0:	
   683                           
   684                           ;initializer for _posFlag
   685  01C0  3401               	retlw	1
   686  01C1  3400               	retlw	0
   687  0016                     _TMR1L	set	22
   688  0017                     _TMR1H	set	23
   689  0019                     _T1GCON	set	25
   690  0018                     _T1CON	set	24
   691  000E                     _PORTC	set	14
   692  000C                     _PORTA	set	12
   693  0011                     _PIR1bits	set	17
   694  000C                     _PORTAbits	set	12
   695  0018                     _T1CONbits	set	24
   696  000B                     _INTCONbits	set	11
   697  000B                     _INTCON	set	11
   698  008D                     _RCIF	set	141
   699  008C                     _TXIF	set	140
   700  008E                     _TRISC	set	142
   701  008C                     _TRISA	set	140
   702  0095                     _OPTION_REG	set	149
   703  008C                     _TRISAbits	set	140
   704  009B                     _ADRESL	set	155
   705  009C                     _ADRESH	set	156
   706  009E                     _ADCON1bits	set	158
   707  009D                     _ADCON0bits	set	157
   708  0091                     _PIE1bits	set	145
   709  0099                     _OSCCON	set	153
   710  04E9                     _GO_nDONE	set	1257
   711  048E                     _ADIE	set	1166
   712  04F7                     _ADFM	set	1271
   713  04E8                     _ADON	set	1256
   714  04D4                     _HFIOFR	set	1236
   715  010E                     _LATC	set	270
   716  010C                     _LATA	set	268
   717  011D                     _APFCONbits	set	285
   718  0117                     _FVRCON	set	279
   719  018E                     _ANSELC	set	398
   720  018C                     _ANSELA	set	396
   721  019A                     _TXREG	set	410
   722  018C                     _ANSELAbits	set	396
   723  019B                     _SPBRG	set	411
   724  019F                     _BAUDCONbits	set	415
   725  019E                     _TXSTAbits	set	414
   726  0199                     _RCREG	set	409
   727  019D                     _RCSTAbits	set	413
   728  0CF1                     _TRMT	set	3313
   729  0391                     _IOCAPbits	set	913
   730  0393                     _IOCAFbits	set	915
   731                           
   732                           	psect	stringtext1
   733  01BC                     __pstringtext1:	
   734  01BC                     STR_1:	
   735  01BC  3425               	retlw	37	;'%'
   736  01BD  3463               	retlw	99	;'c'
   737  01BE  3400               	retlw	0
   738  01BF  3400               	retlw	0
   739                           
   740                           	psect	stringtext2
   741  0000                     __pstringtext2:	
   742                           
   743                           ; #config settings
   744  0000                     
   745                           	psect	cinit
   746  0061                     start_initialization:	
   747  0061                     __initialization:	
   748                           
   749                           ; Initialize objects allocated to BANK0
   750  0061  21C0               	fcall	__pidataBANK0	;fetch initializer
   751  0062  00C9               	movwf	__pdataBANK0& (0+127)
   752  0063  21C1               	fcall	__pidataBANK0+1	;fetch initializer
   753  0064  00CA               	movwf	(__pdataBANK0+1)& (0+127)
   754                           
   755                           ; Clear objects allocated to BANK0
   756  0065  3020               	movlw	low __pbssBANK0
   757  0066  0084               	movwf	4
   758  0067  3000               	movlw	high __pbssBANK0
   759  0068  0085               	movwf	5
   760  0069  3023               	movlw	35
   761  006A  21B0               	fcall	clear_ram0
   762  006B                     end_of_initialization:	
   763                           ;End of C runtime variable initialization code
   764                           
   765  006B                     __end_of__initialization:	
   766  006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   767  006C  0020               	movlb	0
   768  006D  28B1               	ljmp	_main	;jump to C main() function
   769                           
   770                           	psect	bssBANK0
   771  0020                     __pbssBANK0:	
   772  0020                     _aveTmr1Val:	
   773  0020                     	ds	4
   774  0024                     _time:	
   775  0024                     	ds	2
   776  0026                     _temp_time:	
   777  0026                     	ds	2
   778  0028                     _tmr1Count:	
   779  0028                     	ds	2
   780  002A                     _printCount:	
   781  002A                     	ds	2
   782  002C                     _zeroCount:	
   783  002C                     	ds	2
   784  002E                     _negFlag:	
   785  002E                     	ds	2
   786  0030                     _startFlag:	
   787  0030                     	ds	2
   788  0032                     _count:	
   789  0032                     	ds	2
   790  0034                     _sampleVal:	
   791  0034                     	ds	2
   792  0036                     _tmr1Val:	
   793  0036                     	ds	2
   794  0038                     _intData:	
   795  0038                     	ds	2
   796  003A                     _previousADCsample:	
   797  003A                     	ds	2
   798  003C                     _adcSample:	
   799  003C                     	ds	2
   800  003E                     _adcData:	
   801  003E                     	ds	2
   802  0040                     _charData:	
   803  0040                     	ds	1
   804  0041                     _portC:	
   805  0041                     	ds	1
   806  0042                     _portA:	
   807  0042                     	ds	1
   808                           
   809                           	psect	dataBANK0
   810  0049                     __pdataBANK0:	
   811  0049                     _posFlag:	
   812  0049                     	ds	2
   813                           
   814                           	psect	clrtext
   815  01B0                     clear_ram0:	
   816                           ;	Called with FSR0 containing the base address, and
   817                           ;	WREG with the size to clear
   818                           
   819  01B0  0064               	clrwdt	;clear the watchdog before getting into this loop
   820  01B1                     clrloop0:	
   821  01B1  0180               	clrf	0	;clear RAM location pointed to by FSR
   822  01B2  3101               	addfsr 0,1
   823  01B3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   824  01B4  29B1               	goto	clrloop0	;have we reached the end yet?
   825  01B5  3400               	retlw	0	;all done for this memory range, return
   826                           
   827                           	psect	cstackCOMMON
   828  0070                     __pcstackCOMMON:	
   829  0070                     ?_initPIC:	
   830  0070                     ?_TogglePIN6:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_pi3Connect:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_InitialisePorts:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_Init_TMR1:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_InitialiseADC:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_InitUSART:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_PIN5:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ??_PIN5:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_PIN6:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ??_PIN6:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_TogglePIN5:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ??_TogglePIN5:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_getch:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ??_getch:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_ISR:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_putch:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ??_putch:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_Timer1:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_main:	
   885                           ; 2 bytes @ 0x0
   886                           
   887  0070                     putch@c:	
   888                           ; 2 bytes @ 0x0
   889                           
   890                           
   891                           ; 1 bytes @ 0x0
   892  0070                     	ds	1
   893  0071                     ?_printf:	
   894  0071                     PIN5@OnOff:	
   895                           ; 2 bytes @ 0x1
   896                           
   897  0071                     PIN6@OnOff:	
   898                           ; 1 bytes @ 0x1
   899                           
   900  0071                     printf@f:	
   901                           ; 1 bytes @ 0x1
   902                           
   903                           
   904                           ; 2 bytes @ 0x1
   905  0071                     	ds	1
   906  0072                     ??_Timer1:	
   907                           
   908                           ; 1 bytes @ 0x2
   909  0072                     	ds	3
   910  0075                     ??_printf:	
   911                           
   912                           ; 1 bytes @ 0x5
   913  0075                     	ds	3
   914  0078                     printf@flag:	
   915                           
   916                           ; 1 bytes @ 0x8
   917  0078                     	ds	1
   918  0079                     printf@ap:	
   919                           
   920                           ; 1 bytes @ 0x9
   921  0079                     	ds	1
   922  007A                     printf@c:	
   923                           
   924                           ; 1 bytes @ 0xA
   925  007A                     	ds	1
   926  007B                     ??_ISR:	
   927                           
   928                           ; 1 bytes @ 0xB
   929  007B                     	ds	3
   930                           
   931                           	psect	cstackBANK0
   932  0043                     __pcstackBANK0:	
   933  0043                     ??_initPIC:	
   934  0043                     ??_TogglePIN6:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0043                     ??_pi3Connect:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0043                     ??_InitialisePorts:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0043                     ??_Init_TMR1:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0043                     ??_InitialiseADC:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0043                     ??_InitUSART:	
   950                           ; 1 bytes @ 0x0
   951                           
   952                           
   953                           ; 1 bytes @ 0x0
   954  0043                     	ds	2
   955  0045                     ??_main:	
   956                           
   957                           ; 1 bytes @ 0x2
   958  0045                     	ds	2
   959  0047                     main@i:	
   960                           
   961                           ; 2 bytes @ 0x4
   962  0047                     	ds	2
   963                           
   964                           	psect	maintext
   965  00B1                     __pmaintext:	
   966 ;;
   967 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   968 ;;
   969 ;; *************** function _main *****************
   970 ;; Defined at:
   971 ;;		line 33 in file "newmain.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  i               2    4[BANK0 ] int 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  2   94[None  ] int 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : B1F/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1
   985 ;;      Params:         0       0       0
   986 ;;      Locals:         0       2       0
   987 ;;      Temps:          0       2       0
   988 ;;      Totals:         0       4       0
   989 ;;Total ram usage:        4 bytes
   990 ;; Hardware stack levels required when called:    5
   991 ;; This function calls:
   992 ;;		_TogglePIN6
   993 ;;		_initPIC
   994 ;;		_pi3Connect
   995 ;; This function is called by:
   996 ;;		Startup code after reset
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _main
  1002  00B1                     _main:	
  1003                           
  1004                           ;newmain.c: 36: initPIC();
  1005                           
  1006                           ;incstack = 0
  1007                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1008  00B1  20FC               	fcall	_initPIC
  1009                           
  1010                           ;newmain.c: 38: for(int i = 0; i < 6; i++){
  1011  00B2  0020               	movlb	0	; select bank0
  1012  00B3  01C7               	clrf	main@i
  1013  00B4  01C8               	clrf	main@i+1
  1014  00B5  0848               	movf	main@i+1,w
  1015  00B6  3A80               	xorlw	128
  1016  00B7  00C5               	movwf	??_main
  1017  00B8  3080               	movlw	128
  1018  00B9  0245               	subwf	??_main,w
  1019  00BA  1D03               	skipz
  1020  00BB  28BE               	goto	u505
  1021  00BC  3006               	movlw	6
  1022  00BD  0247               	subwf	main@i,w
  1023  00BE                     u505:	
  1024  00BE  1803               	btfsc	3,0
  1025  00BF  28DE               	goto	l1351
  1026  00C0                     l1343:	
  1027                           
  1028                           ;newmain.c: 40: TogglePIN6();
  1029  00C0  2187               	fcall	_TogglePIN6
  1030                           
  1031                           ;newmain.c: 41: _delay((unsigned long)((250)*(4000000/4000.0)));
  1032  00C1  3002               	movlw	2
  1033  00C2  0020               	movlb	0	; select bank0
  1034  00C3  00C6               	movwf	??_main+1
  1035  00C4  3045               	movlw	69
  1036  00C5  00C5               	movwf	??_main
  1037  00C6  30A9               	movlw	169
  1038  00C7                     u947:	
  1039  00C7  0B89               	decfsz	9,f
  1040  00C8  28C7               	goto	u947
  1041  00C9  0BC5               	decfsz	??_main,f
  1042  00CA  28C7               	goto	u947
  1043  00CB  0BC6               	decfsz	??_main+1,f
  1044  00CC  28C7               	goto	u947
  1045  00CD  3200               	nop2
  1046  00CE  3001               	movlw	1
  1047  00CF  0020               	movlb	0	; select bank0
  1048  00D0  07C7               	addwf	main@i,f
  1049  00D1  3000               	movlw	0
  1050  00D2  3DC8               	addwfc	main@i+1,f
  1051  00D3  0848               	movf	main@i+1,w
  1052  00D4  3A80               	xorlw	128
  1053  00D5  00C5               	movwf	??_main
  1054  00D6  3080               	movlw	128
  1055  00D7  0245               	subwf	??_main,w
  1056  00D8  1D03               	skipz
  1057  00D9  28DC               	goto	u515
  1058  00DA  3006               	movlw	6
  1059  00DB  0247               	subwf	main@i,w
  1060  00DC                     u515:	
  1061  00DC  1C03               	skipc
  1062  00DD  28C0               	goto	l1343
  1063  00DE                     l1351:	
  1064                           ;newmain.c: 42: }
  1065                           ;newmain.c: 44: while(1)
  1066                           
  1067                           
  1068                           ;newmain.c: 45: {
  1069                           ;newmain.c: 48: pi3Connect();
  1070  00DE  21A1               	fcall	_pi3Connect
  1071  00DF  28DE               	goto	l1351
  1072  00E0                     __end_of_main:	
  1073                           ;newmain.c: 50: }
  1074                           ;newmain.c: 52: return (0);
  1075                           ;	Return value of _main is never used
  1076                           
  1077                           
  1078                           	psect	text1
  1079  01A1                     __ptext1:	
  1080 ;; *************** function _pi3Connect *****************
  1081 ;; Defined at:
  1082 ;;		line 90 in file "newmain.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		None
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1
  1096 ;;      Params:         0       0       0
  1097 ;;      Locals:         0       0       0
  1098 ;;      Temps:          0       0       0
  1099 ;;      Totals:         0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    3
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _pi3Connect
  1112  01A1                     _pi3Connect:	
  1113                           
  1114                           ;newmain.c: 92: PIE1bits.RCIE = 1;
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _pi3Connect: []
  1118  01A1  0021               	movlb	1	; select bank1
  1119  01A2  1691               	bsf	17,5	;volatile
  1120                           
  1121                           ;newmain.c: 93: INTCONbits.PEIE = 1;
  1122  01A3  170B               	bsf	11,6	;volatile
  1123                           
  1124                           ;newmain.c: 95: RCSTAbits.SPEN = 1;
  1125  01A4  0023               	movlb	3	; select bank3
  1126  01A5  179D               	bsf	29,7	;volatile
  1127                           
  1128                           ;newmain.c: 96: RCSTAbits.CREN = 0; RCSTAbits.CREN = 1;
  1129  01A6  121D               	bcf	29,4	;volatile
  1130  01A7  161D               	bsf	29,4	;volatile
  1131  01A8                     l109:	
  1132                           ;newmain.c: 98: while(1){
  1133                           
  1134  01A8  29A8               	goto	l109
  1135  01A9                     __end_of_pi3Connect:	
  1136                           ;newmain.c: 103: }
  1137                           ;newmain.c: 105: return;
  1138                           
  1139                           
  1140                           	psect	text2
  1141  00FC                     __ptext2:	
  1142 ;; *************** function _initPIC *****************
  1143 ;; Defined at:
  1144 ;;		line 55 in file "newmain.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1
  1158 ;;      Params:         0       0       0
  1159 ;;      Locals:         0       0       0
  1160 ;;      Temps:          0       2       0
  1161 ;;      Totals:         0       2       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    4
  1165 ;; This function calls:
  1166 ;;		_InitUSART
  1167 ;;		_Init_TMR1
  1168 ;;		_InitialiseADC
  1169 ;;		_InitialisePorts
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _initPIC
  1177  00FC                     _initPIC:	
  1178                           
  1179                           ;newmain.c: 59: OSCCON = 0b01101000;
  1180                           
  1181                           ;incstack = 0
  1182                           ; Regs used in _initPIC: [wreg+status,2+status,0+pclath+cstack]
  1183  00FC  3068               	movlw	104
  1184  00FD  0021               	movlb	1	; select bank1
  1185  00FE  0099               	movwf	25	;volatile
  1186  00FF                     l103:	
  1187                           ;newmain.c: 70: while(HFIOFR==0){
  1188                           
  1189  00FF  1E1A               	btfss	26,4	;volatile
  1190  0100  28FF               	goto	l103
  1191                           
  1192                           ;newmain.c: 71: }
  1193                           ;newmain.c: 74: INTCON = 0b00000000;
  1194  0101  018B               	clrf	11	;volatile
  1195                           
  1196                           ;newmain.c: 75: INTCONbits.GIE = 0;
  1197  0102  138B               	bcf	11,7	;volatile
  1198                           
  1199                           ;newmain.c: 77: InitialisePorts();
  1200  0103  2116               	fcall	_InitialisePorts
  1201                           
  1202                           ;newmain.c: 78: Init_TMR1();
  1203  0104  217A               	fcall	_Init_TMR1
  1204                           
  1205                           ;newmain.c: 79: InitialiseADC();
  1206  0105  2148               	fcall	_InitialiseADC
  1207                           
  1208                           ;newmain.c: 80: InitUSART();
  1209  0106  212F               	fcall	_InitUSART
  1210                           
  1211                           ;newmain.c: 82: INTCONbits.GIE = 1;
  1212  0107  178B               	bsf	11,7	;volatile
  1213                           
  1214                           ;newmain.c: 84: _delay((unsigned long)((500)*(4000000/4000.0)));
  1215  0108  3003               	movlw	3
  1216  0109  0020               	movlb	0	; select bank0
  1217  010A  00C4               	movwf	??_initPIC+1
  1218  010B  308A               	movlw	138
  1219  010C  00C3               	movwf	??_initPIC
  1220  010D  3055               	movlw	85
  1221  010E                     u957:	
  1222  010E  0B89               	decfsz	9,f
  1223  010F  290E               	goto	u957
  1224  0110  0BC3               	decfsz	??_initPIC,f
  1225  0111  290E               	goto	u957
  1226  0112  0BC4               	decfsz	??_initPIC+1,f
  1227  0113  290E               	goto	u957
  1228  0114  3200               	nop2
  1229  0115  0008               	return
  1230  0116                     __end_of_initPIC:	
  1231                           ;newmain.c: 86: return;
  1232                           
  1233                           
  1234                           	psect	text3
  1235  0116                     __ptext3:	
  1236 ;; *************** function _InitialisePorts *****************
  1237 ;; Defined at:
  1238 ;;		line 13 in file "IO_Controls.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1
  1252 ;;      Params:         0       0       0
  1253 ;;      Locals:         0       0       0
  1254 ;;      Temps:          0       0       0
  1255 ;;      Totals:         0       0       0
  1256 ;;Total ram usage:        0 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    3
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_initPIC
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _InitialisePorts
  1268  0116                     _InitialisePorts:	
  1269                           
  1270                           ;IO_Controls.c: 15: OPTION_REG = 0b11000000;
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _InitialisePorts: [wreg+status,2]
  1274  0116  30C0               	movlw	192
  1275  0117  0021               	movlb	1	; select bank1
  1276  0118  0095               	movwf	21	;volatile
  1277                           
  1278                           ;IO_Controls.c: 33: portA.portAByte = 0;
  1279  0119  0020               	movlb	0	; select bank0
  1280  011A  01C2               	clrf	_portA
  1281                           
  1282                           ;IO_Controls.c: 34: LATA = 0;
  1283  011B  0022               	movlb	2	; select bank2
  1284  011C  018C               	clrf	12	;volatile
  1285                           
  1286                           ;IO_Controls.c: 36: TRISA = 0b00111110;
  1287  011D  303E               	movlw	62
  1288  011E  0021               	movlb	1	; select bank1
  1289  011F  008C               	movwf	12	;volatile
  1290                           
  1291                           ;IO_Controls.c: 44: ANSELA = 0b00000000;
  1292  0120  0023               	movlb	3	; select bank3
  1293  0121  018C               	clrf	12	;volatile
  1294                           
  1295                           ;IO_Controls.c: 46: IOCAPbits.IOCAP4 = 1;
  1296  0122  0027               	movlb	7	; select bank7
  1297  0123  1611               	bsf	17,4	;volatile
  1298                           
  1299                           ;IO_Controls.c: 61: portC.portCByte = 0;
  1300  0124  0020               	movlb	0	; select bank0
  1301  0125  01C1               	clrf	_portC
  1302                           
  1303                           ;IO_Controls.c: 62: LATC = 0;
  1304  0126  0022               	movlb	2	; select bank2
  1305  0127  018E               	clrf	14	;volatile
  1306                           
  1307                           ;IO_Controls.c: 63: TRISC = 0b00001000;
  1308  0128  3008               	movlw	8
  1309  0129  0021               	movlb	1	; select bank1
  1310  012A  008E               	movwf	14	;volatile
  1311                           
  1312                           ;IO_Controls.c: 65: ANSELC = 0b00001000;
  1313  012B  3008               	movlw	8
  1314  012C  0023               	movlb	3	; select bank3
  1315  012D  008E               	movwf	14	;volatile
  1316  012E  0008               	return
  1317  012F                     __end_of_InitialisePorts:	
  1318                           ;IO_Controls.c: 70: return;
  1319                           
  1320                           
  1321                           	psect	text4
  1322  0148                     __ptext4:	
  1323 ;; *************** function _InitialiseADC *****************
  1324 ;; Defined at:
  1325 ;;		line 15 in file "ADC.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1
  1339 ;;      Params:         0       0       0
  1340 ;;      Locals:         0       0       0
  1341 ;;      Temps:          0       0       0
  1342 ;;      Totals:         0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_initPIC
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _InitialiseADC
  1355  0148                     _InitialiseADC:	
  1356                           
  1357                           ;ADC.c: 17: ADCON0bits.CHS = 0b0111;
  1358                           
  1359                           ;incstack = 0
  1360                           ; Regs used in _InitialiseADC: [wreg+status,2+status,0]
  1361  0148  0021               	movlb	1	; select bank1
  1362  0149  081D               	movf	29,w	;volatile
  1363  014A  3983               	andlw	-125
  1364  014B  381C               	iorlw	28
  1365  014C  009D               	movwf	29	;volatile
  1366                           
  1367                           ;ADC.c: 19: ADFM = 1;
  1368  014D  179E               	bsf	30,7	;volatile
  1369                           
  1370                           ;ADC.c: 20: ADCON1bits.ADCS = 0b000;
  1371  014E  308F               	movlw	-113
  1372  014F  059E               	andwf	30,f	;volatile
  1373                           
  1374                           ;ADC.c: 22: ADCON1bits.ADPREF = 0b011;
  1375  0150  3003               	movlw	3
  1376  0151  049E               	iorwf	30,f	;volatile
  1377                           
  1378                           ;ADC.c: 24: FVRCON = 0b11000011;
  1379  0152  30C3               	movlw	195
  1380  0153  0022               	movlb	2	; select bank2
  1381  0154  0097               	movwf	23	;volatile
  1382                           
  1383                           ;ADC.c: 26: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1384  0155  3003               	movlw	3
  1385  0156                     u967:	
  1386  0156  0B89               	decfsz	9,f
  1387  0157  2956               	goto	u967
  1388  0158  0000               	nop
  1389                           
  1390                           ;ADC.c: 27: ADIE=0;
  1391  0159  0021               	movlb	1	; select bank1
  1392  015A  1311               	bcf	17,6	;volatile
  1393                           
  1394                           ;ADC.c: 28: ADON=0;
  1395  015B  101D               	bcf	29,0	;volatile
  1396                           
  1397                           ;ADC.c: 29: GO_nDONE=0;
  1398  015C  109D               	bcf	29,1	;volatile
  1399  015D  0008               	return
  1400  015E                     __end_of_InitialiseADC:	
  1401                           ;ADC.c: 30: return;
  1402                           
  1403                           
  1404                           	psect	text5
  1405  017A                     __ptext5:	
  1406 ;; *************** function _Init_TMR1 *****************
  1407 ;; Defined at:
  1408 ;;		line 17 in file "Timer.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1
  1422 ;;      Params:         0       0       0
  1423 ;;      Locals:         0       0       0
  1424 ;;      Temps:          0       0       0
  1425 ;;      Totals:         0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    3
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_initPIC
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _Init_TMR1
  1438  017A                     _Init_TMR1:	
  1439                           
  1440                           ;Timer.c: 20: T1CON = 0b00000000;
  1441                           
  1442                           ;incstack = 0
  1443                           ; Regs used in _Init_TMR1: [wreg+status,2+status,0]
  1444  017A  0020               	movlb	0	; select bank0
  1445  017B  0198               	clrf	24	;volatile
  1446                           
  1447                           ;Timer.c: 21: T1CONbits.TMR1CS = 0b00;
  1448  017C  303F               	movlw	-193
  1449  017D  0598               	andwf	24,f	;volatile
  1450                           
  1451                           ;Timer.c: 22: T1CONbits.T1CKPS = 0b01;
  1452  017E  0818               	movf	24,w	;volatile
  1453  017F  39CF               	andlw	-49
  1454  0180  3810               	iorlw	16
  1455  0181  0098               	movwf	24	;volatile
  1456                           
  1457                           ;Timer.c: 24: T1GCON = 0b01000000;
  1458  0182  3040               	movlw	64
  1459  0183  0099               	movwf	25	;volatile
  1460                           
  1461                           ;Timer.c: 26: INTCON = 0b10000000;
  1462  0184  3080               	movlw	128
  1463  0185  008B               	movwf	11	;volatile
  1464  0186  0008               	return
  1465  0187                     __end_of_Init_TMR1:	
  1466                           ;Timer.c: 28: return;
  1467                           
  1468                           
  1469                           	psect	text6
  1470  012F                     __ptext6:	
  1471 ;; *************** function _InitUSART *****************
  1472 ;; Defined at:
  1473 ;;		line 12 in file "USART.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1
  1487 ;;      Params:         0       0       0
  1488 ;;      Locals:         0       0       0
  1489 ;;      Temps:          0       0       0
  1490 ;;      Totals:         0       0       0
  1491 ;;Total ram usage:        0 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    3
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_initPIC
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _InitUSART
  1503  012F                     _InitUSART:	
  1504                           
  1505                           ;USART.c: 15: PIE1bits.TXIE = 0;
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _InitUSART: [wreg+status,2]
  1509  012F  0021               	movlb	1	; select bank1
  1510  0130  1211               	bcf	17,4	;volatile
  1511                           
  1512                           ;USART.c: 16: RCREG = 0;
  1513  0131  0023               	movlb	3	; select bank3
  1514  0132  0199               	clrf	25	;volatile
  1515                           
  1516                           ;USART.c: 18: RCSTAbits.RX9 = 0;
  1517  0133  131D               	bcf	29,6	;volatile
  1518                           
  1519                           ;USART.c: 19: RCSTAbits.CREN = 1;
  1520  0134  161D               	bsf	29,4	;volatile
  1521                           
  1522                           ;USART.c: 22: TXSTAbits.TX9 = 0;
  1523  0135  131E               	bcf	30,6	;volatile
  1524                           
  1525                           ;USART.c: 23: TXSTAbits.TXEN = 1;
  1526  0136  169E               	bsf	30,5	;volatile
  1527                           
  1528                           ;USART.c: 26: TXSTAbits.SYNC = 0;
  1529  0137  121E               	bcf	30,4	;volatile
  1530                           
  1531                           ;USART.c: 27: TXSTAbits.BRGH = 1;
  1532  0138  151E               	bsf	30,2	;volatile
  1533                           
  1534                           ;USART.c: 28: BAUDCONbits.BRG16 = 0;
  1535  0139  119F               	bcf	31,3	;volatile
  1536                           
  1537                           ;USART.c: 29: SPBRG = 23;
  1538  013A  3017               	movlw	23
  1539  013B  009B               	movwf	27	;volatile
  1540                           
  1541                           ;USART.c: 31: TRISAbits.TRISA1 = 1;
  1542  013C  0021               	movlb	1	; select bank1
  1543  013D  148C               	bsf	12,1	;volatile
  1544                           
  1545                           ;USART.c: 32: ANSELAbits.ANSA1 = 0;
  1546  013E  0023               	movlb	3	; select bank3
  1547  013F  108C               	bcf	12,1	;volatile
  1548                           
  1549                           ;USART.c: 34: TRISAbits.TRISA0 = 0;
  1550  0140  0021               	movlb	1	; select bank1
  1551  0141  100C               	bcf	12,0	;volatile
  1552                           
  1553                           ;USART.c: 35: ANSELAbits.ANSA1 = 0;
  1554  0142  0023               	movlb	3	; select bank3
  1555  0143  108C               	bcf	12,1	;volatile
  1556                           
  1557                           ;USART.c: 37: APFCONbits.RXDTSEL = 1;
  1558  0144  0022               	movlb	2	; select bank2
  1559  0145  179D               	bsf	29,7	;volatile
  1560                           
  1561                           ;USART.c: 38: APFCONbits.TXCKSEL = 1;
  1562  0146  151D               	bsf	29,2	;volatile
  1563  0147  0008               	return
  1564  0148                     __end_of_InitUSART:	
  1565                           ;USART.c: 40: return;
  1566                           
  1567                           
  1568                           	psect	text7
  1569  0187                     __ptext7:	
  1570 ;; *************** function _TogglePIN6 *****************
  1571 ;; Defined at:
  1572 ;;		line 99 in file "IO_Controls.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1
  1586 ;;      Params:         0       0       0
  1587 ;;      Locals:         0       0       0
  1588 ;;      Temps:          0       1       0
  1589 ;;      Totals:         0       1       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _TogglePIN6
  1602  0187                     _TogglePIN6:	
  1603                           
  1604                           ;IO_Controls.c: 101: portC.portCByte = PORTC;
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _TogglePIN6: [wreg]
  1608  0187  0020               	movlb	0	; select bank0
  1609  0188  080E               	movf	14,w	;volatile
  1610  0189  00C3               	movwf	??_TogglePIN6
  1611  018A  0843               	movf	??_TogglePIN6,w
  1612  018B  00C1               	movwf	_portC
  1613                           
  1614                           ;IO_Controls.c: 102: if(portC.bits.Pin6 == 1){
  1615  018C  1E41               	btfss	_portC,4
  1616  018D  2990               	goto	l269
  1617                           
  1618                           ;IO_Controls.c: 104: portC.bits.Pin6 = 0;
  1619  018E  1241               	bcf	_portC,4
  1620                           
  1621                           ;IO_Controls.c: 105: }
  1622  018F  2991               	goto	l1235
  1623  0190                     l269:	
  1624                           
  1625                           ;IO_Controls.c: 106: else{
  1626                           ;IO_Controls.c: 107: portC.bits.Pin6 = 1;
  1627  0190  1641               	bsf	_portC,4
  1628  0191                     l1235:	
  1629                           
  1630                           ;IO_Controls.c: 108: }
  1631                           ;IO_Controls.c: 109: PORTC=portC.portCByte;
  1632  0191  0841               	movf	_portC,w
  1633  0192  008E               	movwf	14	;volatile
  1634  0193  0008               	return
  1635  0194                     __end_of_TogglePIN6:	
  1636                           ;IO_Controls.c: 110: return;
  1637                           
  1638                           
  1639                           	psect	intentry
  1640  0004                     __pintentry:	
  1641 ;; *************** function _ISR *****************
  1642 ;; Defined at:
  1643 ;;		line 172 in file "newmain.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1
  1657 ;;      Params:         0       0       0
  1658 ;;      Locals:         0       0       0
  1659 ;;      Temps:          3       0       0
  1660 ;;      Totals:         3       0       0
  1661 ;;Total ram usage:        3 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    2
  1664 ;; This function calls:
  1665 ;;		_PIN5
  1666 ;;		_PIN6
  1667 ;;		_Timer1
  1668 ;;		_TogglePIN5
  1669 ;;		_getch
  1670 ;;		_printf
  1671 ;; This function is called by:
  1672 ;;		Interrupt level 1
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676  0004                     _ISR:	
  1677                           
  1678                           ;incstack = 0
  1679  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1680                           
  1681                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1682  0005  3180               	pagesel	$
  1683  0006  0020               	movlb	0	; select bank0
  1684  0007  087F               	movf	127,w
  1685  0008  00FD               	movwf	??_ISR+2
  1686                           
  1687                           ;newmain.c: 175: if((INTCONbits.INTF == 1) && (INTCONbits.INTE == 1)){
  1688  0009  188B               	btfsc	11,1	;volatile
  1689  000A  1E0B               	btfss	11,4	;volatile
  1690  000B  281D               	goto	i1l132
  1691                           
  1692                           ;newmain.c: 178: if((PORTAbits.AN2 == 1)){
  1693  000C  1D0C               	btfss	12,2	;volatile
  1694  000D  281B               	goto	i1l1437
  1695                           
  1696                           ;newmain.c: 182: if(count == 0){
  1697  000E  0832               	movf	_count,w	;volatile
  1698  000F  0433               	iorwf	_count+1,w	;volatile
  1699  0010  1D03               	btfss	3,2
  1700  0011  2817               	goto	i1l1433
  1701                           
  1702                           ;newmain.c: 184: T1CONbits.TMR1ON = 1;
  1703  0012  1418               	bsf	24,0	;volatile
  1704                           
  1705                           ;newmain.c: 185: count++;
  1706  0013  3001               	movlw	1
  1707  0014  07B2               	addwf	_count,f	;volatile
  1708  0015  3000               	movlw	0
  1709  0016  3DB3               	addwfc	_count+1,f	;volatile
  1710  0017                     i1l1433:	
  1711                           
  1712                           ;newmain.c: 186: }
  1713                           ;newmain.c: 187: PIN6(1);
  1714  0017  3001               	movlw	1
  1715  0018  215E               	fcall	_PIN6
  1716                           
  1717                           ;newmain.c: 188: PIN5(0);
  1718  0019  3000               	movlw	0
  1719  001A  216C               	fcall	_PIN5
  1720  001B                     i1l1437:	
  1721                           
  1722                           ;newmain.c: 189: }
  1723                           ;newmain.c: 190: INTCONbits.INTF = 0;
  1724  001B  108B               	bcf	11,1	;volatile
  1725                           
  1726                           ;newmain.c: 191: }
  1727  001C  285B               	goto	i1l142
  1728  001D                     i1l132:	
  1729                           
  1730                           ;newmain.c: 194: else if(( IOCAFbits.IOCAF4 == 1 ) && (INTCONbits.IOCIE == 1)){
  1731  001D  0027               	movlb	7	; select bank7
  1732  001E  1A13               	btfsc	19,4	;volatile
  1733  001F  1D8B               	btfss	11,3	;volatile
  1734  0020  2842               	goto	i1l136
  1735                           
  1736                           ;newmain.c: 196: if((PORTAbits.AN3 == 1)){
  1737  0021  0020               	movlb	0	; select bank0
  1738  0022  1E0C               	btfss	12,4	;volatile
  1739  0023  283F               	goto	i1l1459
  1740                           
  1741                           ;newmain.c: 201: if(count == 1){
  1742  0024  0332               	decf	_count,w	;volatile
  1743  0025  0433               	iorwf	_count+1,w	;volatile
  1744  0026  1D03               	btfss	3,2
  1745  0027  283B               	goto	i1l1455
  1746                           
  1747                           ;newmain.c: 202: tmr1Val = Timer1();
  1748  0028  20E0               	fcall	_Timer1
  1749  0029  0871               	movf	?_Timer1+1,w
  1750  002A  0020               	movlb	0	; select bank0
  1751  002B  00B7               	movwf	_tmr1Val+1
  1752  002C  0870               	movf	?_Timer1,w
  1753  002D  00B6               	movwf	_tmr1Val
  1754                           
  1755                           ;newmain.c: 203: printCount++;
  1756  002E  3001               	movlw	1
  1757  002F  07AA               	addwf	_printCount,f	;volatile
  1758  0030  3000               	movlw	0
  1759  0031  3DAB               	addwfc	_printCount+1,f	;volatile
  1760                           
  1761                           ;newmain.c: 204: count = 0;
  1762  0032  01B2               	clrf	_count	;volatile
  1763  0033  01B3               	clrf	_count+1	;volatile
  1764                           
  1765                           ;newmain.c: 205: if(printCount == 200)
  1766  0034  30C8               	movlw	200
  1767  0035  062A               	xorwf	_printCount,w	;volatile
  1768  0036  042B               	iorwf	_printCount+1,w	;volatile
  1769  0037  1D03               	btfss	3,2
  1770  0038  283B               	goto	i1l1455
  1771                           
  1772                           ;newmain.c: 206: {
  1773                           ;newmain.c: 208: printCount = 0;
  1774  0039  01AA               	clrf	_printCount	;volatile
  1775  003A  01AB               	clrf	_printCount+1	;volatile
  1776  003B                     i1l1455:	
  1777                           
  1778                           ;newmain.c: 209: }
  1779                           ;newmain.c: 210: }
  1780                           ;newmain.c: 212: PIN5(1);
  1781  003B  3001               	movlw	1
  1782  003C  216C               	fcall	_PIN5
  1783                           
  1784                           ;newmain.c: 213: PIN6(0);
  1785  003D  3000               	movlw	0
  1786  003E  215E               	fcall	_PIN6
  1787  003F                     i1l1459:	
  1788                           
  1789                           ;newmain.c: 215: }
  1790                           ;newmain.c: 217: IOCAFbits.IOCAF4 = 0;
  1791  003F  0027               	movlb	7	; select bank7
  1792  0040  1213               	bcf	19,4	;volatile
  1793                           
  1794                           ;newmain.c: 218: }
  1795  0041  285B               	goto	i1l142
  1796  0042                     i1l136:	
  1797                           
  1798                           ;newmain.c: 220: else if (PIR1bits.RCIF){
  1799  0042  0020               	movlb	0	; select bank0
  1800  0043  1E91               	btfss	17,5	;volatile
  1801  0044  285B               	goto	i1l142
  1802                           
  1803                           ;newmain.c: 222: TogglePIN5();
  1804  0045  2194               	fcall	_TogglePIN5
  1805                           
  1806                           ;newmain.c: 224: charData = getch();
  1807  0046  21B6               	fcall	_getch
  1808  0047  00FB               	movwf	??_ISR
  1809  0048  087B               	movf	??_ISR,w
  1810  0049  0020               	movlb	0	; select bank0
  1811  004A  00C0               	movwf	_charData
  1812                           
  1813                           ;newmain.c: 230: printf("%c\0", charData);
  1814  004B  30BC               	movlw	low (STR_1| (0+32768))
  1815  004C  00F1               	movwf	printf@f
  1816  004D  3081               	movlw	high (STR_1| (0+32768))
  1817  004E  00F2               	movwf	printf@f+1
  1818  004F  0840               	movf	_charData,w
  1819  0050  00FB               	movwf	??_ISR
  1820  0051  01FC               	clrf	??_ISR+1
  1821  0052  087B               	movf	??_ISR,w
  1822  0053  00F3               	movwf	?_printf+2
  1823  0054  087C               	movf	??_ISR+1,w
  1824  0055  00F4               	movwf	?_printf+3
  1825  0056  206E               	fcall	_printf
  1826                           
  1827                           ;newmain.c: 232: RCREG = 0;
  1828  0057  0023               	movlb	3	; select bank3
  1829  0058  0199               	clrf	25	;volatile
  1830                           
  1831                           ;newmain.c: 233: PIR1bits.RCIF = 0;
  1832  0059  0020               	movlb	0	; select bank0
  1833  005A  1291               	bcf	17,5	;volatile
  1834  005B                     i1l142:	
  1835                           ;newmain.c: 234: }
  1836                           ;newmain.c: 236: return;
  1837                           
  1838  005B  087D               	movf	??_ISR+2,w
  1839  005C  0020               	movlb	0	; select bank0
  1840  005D  00FF               	movwf	127
  1841  005E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1842  005F  0009               	retfie
  1843  0060                     __end_of_ISR:	
  1844                           
  1845                           	psect	text9
  1846  006E                     __ptext9:	
  1847 ;; *************** function _printf *****************
  1848 ;; Defined at:
  1849 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  f               2    1[COMMON] PTR const unsigned char 
  1852 ;;		 -> STR_1(4), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  tmpval          4    0        struct .
  1855 ;;  cp              2    0        PTR const unsigned char 
  1856 ;;  len             2    0        unsigned int 
  1857 ;;  val             2    0        unsigned int 
  1858 ;;  c               1   10[COMMON] char 
  1859 ;;  ap              1    9[COMMON] PTR void [1]
  1860 ;;		 -> ?_printf(2), 
  1861 ;;  flag            1    8[COMMON] unsigned char 
  1862 ;;  prec            1    0        char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2    1[COMMON] int 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1
  1872 ;;      Params:         4       0       0
  1873 ;;      Locals:         3       0       0
  1874 ;;      Temps:          3       0       0
  1875 ;;      Totals:        10       0       0
  1876 ;;Total ram usage:       10 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    1
  1879 ;; This function calls:
  1880 ;;		_putch
  1881 ;; This function is called by:
  1882 ;;		_ISR
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _printf
  1888  006E                     _printf:	
  1889                           
  1890                           ;doprnt.c: 466: va_list ap;
  1891                           ;doprnt.c: 499: signed char c;
  1892                           ;doprnt.c: 506: signed char prec;
  1893                           ;doprnt.c: 508: unsigned char flag;
  1894                           ;doprnt.c: 523: union {
  1895                           ;doprnt.c: 524: unsigned long vd;
  1896                           ;doprnt.c: 525: double integ;
  1897                           ;doprnt.c: 526: } tmpval;
  1898                           ;doprnt.c: 528: unsigned int val;
  1899                           ;doprnt.c: 529: unsigned len;
  1900                           ;doprnt.c: 530: const char * cp;
  1901                           ;doprnt.c: 533: *ap = __va_start();
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1905  006E  3073               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1906  006F  00F5               	movwf	??_printf
  1907  0070  0875               	movf	??_printf,w
  1908  0071  00F9               	movwf	printf@ap
  1909  0072                     i1l1301:	
  1910                           ;doprnt.c: 1422: {
  1911                           
  1912                           ;doprnt.c: 536: while(c = *f++) {
  1913                           
  1914  0072  0872               	movf	printf@f+1,w
  1915  0073  00F6               	movwf	??_printf+1
  1916  0074  0871               	movf	printf@f,w
  1917  0075  00F5               	movwf	??_printf
  1918  0076  0AF1               	incf	printf@f,f
  1919  0077  1903               	skipnz
  1920  0078  0AF2               	incf	printf@f+1,f
  1921  0079  0875               	movf	??_printf,w
  1922  007A  0084               	movwf	4
  1923  007B  0876               	movf	??_printf+1,w
  1924  007C  0085               	movwf	5
  1925  007D  0800               	movf	0,w	;code access
  1926  007E  00F7               	movwf	??_printf+2
  1927  007F  0877               	movf	??_printf+2,w
  1928  0080  00FA               	movwf	printf@c
  1929  0081  087A               	movf	printf@c,w
  1930  0082  1903               	btfsc	3,2
  1931  0083  0008               	return
  1932                           
  1933                           ;doprnt.c: 538: if(c != '%')
  1934  0084  3025               	movlw	37
  1935  0085  067A               	xorwf	printf@c,w
  1936  0086  1903               	btfsc	3,2
  1937  0087  288B               	goto	i1l1289
  1938                           
  1939                           ;doprnt.c: 540: {
  1940                           ;doprnt.c: 541: (putch(c) );
  1941  0088  087A               	movf	printf@c,w
  1942  0089  21A9               	fcall	_putch
  1943                           
  1944                           ;doprnt.c: 542: continue;
  1945  008A  2872               	goto	i1l1301
  1946  008B                     i1l1289:	
  1947                           
  1948                           ;doprnt.c: 543: }
  1949                           ;doprnt.c: 548: flag = 0;
  1950  008B  01F8               	clrf	printf@flag
  1951                           
  1952                           ;doprnt.c: 635: switch(c = *f++) {
  1953  008C  289B               	goto	i1l1299
  1954  008D                     i1l1291:	
  1955                           ;doprnt.c: 784: case 'c':
  1956                           
  1957                           ;doprnt.c: 638: goto alldone;
  1958                           
  1959                           ;doprnt.c: 637: case 0:
  1960                           
  1961                           
  1962                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1963  008D  0879               	movf	printf@ap,w
  1964  008E  0086               	movwf	6
  1965  008F  0187               	clrf	7
  1966  0090  0801               	movf	1,w
  1967  0091  00F5               	movwf	??_printf
  1968  0092  0875               	movf	??_printf,w
  1969  0093  00FA               	movwf	printf@c
  1970  0094  3002               	movlw	2
  1971  0095  00F5               	movwf	??_printf
  1972  0096  0875               	movf	??_printf,w
  1973  0097  07F9               	addwf	printf@ap,f
  1974  0098                     i1l1295:	
  1975                           ;doprnt.c: 802: default:
  1976                           
  1977                           
  1978                           ;doprnt.c: 809: (putch(c) );
  1979  0098  087A               	movf	printf@c,w
  1980  0099  21A9               	fcall	_putch
  1981                           
  1982                           ;doprnt.c: 822: }
  1983                           
  1984                           ;doprnt.c: 810: continue;
  1985  009A  2872               	goto	i1l1301
  1986  009B                     i1l1299:	
  1987  009B  0872               	movf	printf@f+1,w
  1988  009C  00F6               	movwf	??_printf+1
  1989  009D  0871               	movf	printf@f,w
  1990  009E  00F5               	movwf	??_printf
  1991  009F  0AF1               	incf	printf@f,f
  1992  00A0  1903               	skipnz
  1993  00A1  0AF2               	incf	printf@f+1,f
  1994  00A2  0875               	movf	??_printf,w
  1995  00A3  0084               	movwf	4
  1996  00A4  0876               	movf	??_printf+1,w
  1997  00A5  0085               	movwf	5
  1998  00A6  0800               	movf	0,w	;code access
  1999  00A7  00FA               	movwf	printf@c
  2000                           
  2001                           ; Switch size 1, requested type "space"
  2002                           ; Number of cases is 2, Range of values is 0 to 99
  2003                           ; switch strategies available:
  2004                           ; Name         Instructions Cycles
  2005                           ; simple_byte            7     4 (average)
  2006                           ; direct_byte          206     6 (fixed)
  2007                           ; jumptable            260     6 (fixed)
  2008                           ;	Chosen strategy is simple_byte
  2009  00A8  3A00               	xorlw	0	; case 0
  2010  00A9  1903               	skipnz
  2011  00AA  28B0               	goto	i1l325
  2012  00AB  3A63               	xorlw	99	; case 99
  2013  00AC  1903               	skipnz
  2014  00AD  288D               	goto	i1l1291
  2015  00AE  2898               	goto	i1l1295
  2016  00AF  2872               	goto	i1l1301
  2017  00B0                     i1l325:	
  2018                           ;doprnt.c: 1540: return 0;
  2019                           ;	Return value of _printf is never used
  2020                           
  2021                           ;doprnt.c: 1469: }
  2022                           ;doprnt.c: 1533: }
  2023                           ;doprnt.c: 1535: alldone:
  2024                           
  2025  00B0  0008               	return
  2026  00B1                     __end_of_printf:	
  2027                           
  2028                           	psect	text10
  2029  01A9                     __ptext10:	
  2030 ;; *************** function _putch *****************
  2031 ;; Defined at:
  2032 ;;		line 43 in file "USART.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  c               1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  c               1    0[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1
  2046 ;;      Params:         0       0       0
  2047 ;;      Locals:         1       0       0
  2048 ;;      Temps:          0       0       0
  2049 ;;      Totals:         1       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_printf
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _putch
  2061  01A9                     _putch:	
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _putch: [wreg]
  2065                           ;putch@c stored from wreg
  2066  01A9  00F0               	movwf	putch@c
  2067  01AA                     i1l215:	
  2068                           ;USART.c: 46: continue;
  2069                           
  2070                           ;USART.c: 45: while(!TRMT)
  2071                           
  2072  01AA  0023               	movlb	3	; select bank3
  2073  01AB  1C9E               	btfss	30,1	;volatile
  2074  01AC  29AA               	goto	i1l215
  2075                           
  2076                           ;USART.c: 47: TXREG = c;
  2077  01AD  0870               	movf	putch@c,w
  2078  01AE  009A               	movwf	26	;volatile
  2079  01AF  0008               	return
  2080  01B0                     __end_of_putch:	
  2081                           
  2082                           	psect	text11
  2083  01B6                     __ptext11:	
  2084 ;; *************** function _getch *****************
  2085 ;; Defined at:
  2086 ;;		line 59 in file "USART.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      unsigned char 
  2093 ;; Registers used:
  2094 ;;		wreg
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1
  2100 ;;      Params:         0       0       0
  2101 ;;      Locals:         0       0       0
  2102 ;;      Temps:          0       0       0
  2103 ;;      Totals:         0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_ISR
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _getch
  2115  01B6                     _getch:	
  2116  01B6                     i1l227:	
  2117                           ;USART.c: 62: continue;
  2118                           
  2119                           ;USART.c: 61: while(!RCIF)
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _getch: [wreg]
  2123                           
  2124  01B6  0020               	movlb	0	; select bank0
  2125  01B7  1E91               	btfss	17,5	;volatile
  2126  01B8  29B6               	goto	i1l227
  2127                           
  2128                           ;USART.c: 63: return RCREG;
  2129  01B9  0023               	movlb	3	; select bank3
  2130  01BA  0819               	movf	25,w	;volatile
  2131  01BB  0008               	return
  2132  01BC                     __end_of_getch:	
  2133                           
  2134                           	psect	text12
  2135  0194                     __ptext12:	
  2136 ;; *************** function _TogglePIN5 *****************
  2137 ;; Defined at:
  2138 ;;		line 113 in file "IO_Controls.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1
  2152 ;;      Params:         0       0       0
  2153 ;;      Locals:         0       0       0
  2154 ;;      Temps:          1       0       0
  2155 ;;      Totals:         1       0       0
  2156 ;;Total ram usage:        1 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_ISR
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           
  2166                           ;psect for function _TogglePIN5
  2167  0194                     _TogglePIN5:	
  2168                           
  2169                           ;IO_Controls.c: 115: portC.portCByte = PORTC;
  2170                           
  2171                           ;incstack = 0
  2172                           ; Regs used in _TogglePIN5: [wreg]
  2173  0194  0020               	movlb	0	; select bank0
  2174  0195  080E               	movf	14,w	;volatile
  2175  0196  00F0               	movwf	??_TogglePIN5
  2176  0197  0870               	movf	??_TogglePIN5,w
  2177  0198  00C1               	movwf	_portC
  2178                           
  2179                           ;IO_Controls.c: 116: if(portC.bits.Pin5 == 1){
  2180  0199  1EC1               	btfss	_portC,5
  2181  019A  299D               	goto	i1l274
  2182                           
  2183                           ;IO_Controls.c: 118: portC.bits.Pin5 = 0;
  2184  019B  12C1               	bcf	_portC,5
  2185                           
  2186                           ;IO_Controls.c: 119: }
  2187  019C  299E               	goto	i1l1273
  2188  019D                     i1l274:	
  2189                           
  2190                           ;IO_Controls.c: 120: else{
  2191                           ;IO_Controls.c: 121: portC.bits.Pin5 = 1;
  2192  019D  16C1               	bsf	_portC,5
  2193  019E                     i1l1273:	
  2194                           
  2195                           ;IO_Controls.c: 122: }
  2196                           ;IO_Controls.c: 123: PORTC=portC.portCByte;
  2197  019E  0841               	movf	_portC,w
  2198  019F  008E               	movwf	14	;volatile
  2199  01A0  0008               	return
  2200  01A1                     __end_of_TogglePIN5:	
  2201                           ;IO_Controls.c: 124: return;
  2202                           
  2203                           
  2204                           	psect	text13
  2205  00E0                     __ptext13:	
  2206 ;; *************** function _Timer1 *****************
  2207 ;; Defined at:
  2208 ;;		line 31 in file "Timer.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2    0[COMMON] unsigned int 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1
  2222 ;;      Params:         2       0       0
  2223 ;;      Locals:         0       0       0
  2224 ;;      Temps:          2       0       0
  2225 ;;      Totals:         4       0       0
  2226 ;;Total ram usage:        4 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_ISR
  2232 ;;		_verifyACSignal
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _Timer1
  2238  00E0                     _Timer1:	
  2239                           
  2240                           ;Timer.c: 33: T1CONbits.TMR1ON = 0;
  2241                           
  2242                           ;incstack = 0
  2243                           ; Regs used in _Timer1: [wreg+status,2]
  2244  00E0  0020               	movlb	0	; select bank0
  2245  00E1  1018               	bcf	24,0	;volatile
  2246                           
  2247                           ;Timer.c: 35: temp_time = TMR1H;
  2248  00E2  0817               	movf	23,w	;volatile
  2249  00E3  00F2               	movwf	??_Timer1
  2250  00E4  01F3               	clrf	??_Timer1+1
  2251  00E5  0872               	movf	??_Timer1,w
  2252  00E6  00A6               	movwf	_temp_time
  2253  00E7  0873               	movf	??_Timer1+1,w
  2254  00E8  00A7               	movwf	_temp_time+1
  2255                           
  2256                           ;Timer.c: 36: temp_time <<= 8;
  2257  00E9  3008               	movlw	8
  2258  00EA                     u33_25:	
  2259  00EA  35A6               	lslf	_temp_time,f
  2260  00EB  0DA7               	rlf	_temp_time+1,f
  2261  00EC  0B89               	decfsz	9,f
  2262  00ED  28EA               	goto	u33_25
  2263                           
  2264                           ;Timer.c: 37: temp_time += TMR1L;
  2265  00EE  0816               	movf	22,w	;volatile
  2266  00EF  00F2               	movwf	??_Timer1
  2267  00F0  01F3               	clrf	??_Timer1+1
  2268  00F1  0872               	movf	??_Timer1,w
  2269  00F2  07A6               	addwf	_temp_time,f
  2270  00F3  0873               	movf	??_Timer1+1,w
  2271  00F4  3DA7               	addwfc	_temp_time+1,f
  2272                           
  2273                           ;Timer.c: 39: TMR1L = 0x00;
  2274  00F5  0196               	clrf	22	;volatile
  2275                           
  2276                           ;Timer.c: 40: TMR1H = 0x00;
  2277  00F6  0197               	clrf	23	;volatile
  2278                           
  2279                           ;Timer.c: 42: return temp_time;
  2280  00F7  0827               	movf	_temp_time+1,w
  2281  00F8  00F1               	movwf	?_Timer1+1
  2282  00F9  0826               	movf	_temp_time,w
  2283  00FA  00F0               	movwf	?_Timer1
  2284  00FB  0008               	return
  2285  00FC                     __end_of_Timer1:	
  2286                           
  2287                           	psect	text14
  2288  015E                     __ptext14:	
  2289 ;; *************** function _PIN6 *****************
  2290 ;; Defined at:
  2291 ;;		line 91 in file "IO_Controls.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  OnOff           1    wreg     unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  OnOff           1    1[COMMON] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1
  2305 ;;      Params:         0       0       0
  2306 ;;      Locals:         1       0       0
  2307 ;;      Temps:          1       0       0
  2308 ;;      Totals:         2       0       0
  2309 ;;Total ram usage:        2 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_ISR
  2315 ;;		_verifyACSignal
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _PIN6
  2321  015E                     _PIN6:	
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _PIN6: [wreg+status,2]
  2325                           ;PIN6@OnOff stored from wreg
  2326  015E  00F1               	movwf	PIN6@OnOff
  2327                           
  2328                           ;IO_Controls.c: 93: portC.portCByte = PORTC;
  2329  015F  0020               	movlb	0	; select bank0
  2330  0160  080E               	movf	14,w	;volatile
  2331  0161  00F0               	movwf	??_PIN6
  2332  0162  0870               	movf	??_PIN6,w
  2333  0163  00C1               	movwf	_portC
  2334                           
  2335                           ;IO_Controls.c: 94: portC.bits.Pin6 = OnOff;
  2336  0164  0871               	movf	PIN6@OnOff,w
  2337  0165  3901               	andlw	1
  2338  0166  1241               	bcf	_portC,4
  2339  0167  1D03               	skipz
  2340  0168  1641               	bsf	_portC,4
  2341                           
  2342                           ;IO_Controls.c: 95: PORTC=portC.portCByte;
  2343  0169  0841               	movf	_portC,w
  2344  016A  008E               	movwf	14	;volatile
  2345  016B  0008               	return
  2346  016C                     __end_of_PIN6:	
  2347                           ;IO_Controls.c: 96: return;
  2348                           
  2349                           
  2350                           	psect	text15
  2351  016C                     __ptext15:	
  2352 ;; *************** function _PIN5 *****************
  2353 ;; Defined at:
  2354 ;;		line 83 in file "IO_Controls.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  OnOff           1    wreg     unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  OnOff           1    1[COMMON] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1
  2368 ;;      Params:         0       0       0
  2369 ;;      Locals:         1       0       0
  2370 ;;      Temps:          1       0       0
  2371 ;;      Totals:         2       0       0
  2372 ;;Total ram usage:        2 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_ISR
  2378 ;;		_verifyACSignal
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _PIN5
  2384  016C                     _PIN5:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _PIN5: [wreg+status,2]
  2388                           ;PIN5@OnOff stored from wreg
  2389  016C  00F1               	movwf	PIN5@OnOff
  2390                           
  2391                           ;IO_Controls.c: 85: portC.portCByte = PORTC;
  2392  016D  0020               	movlb	0	; select bank0
  2393  016E  080E               	movf	14,w	;volatile
  2394  016F  00F0               	movwf	??_PIN5
  2395  0170  0870               	movf	??_PIN5,w
  2396  0171  00C1               	movwf	_portC
  2397                           
  2398                           ;IO_Controls.c: 86: portC.bits.Pin5 = OnOff;
  2399  0172  0871               	movf	PIN5@OnOff,w
  2400  0173  3901               	andlw	1
  2401  0174  12C1               	bcf	_portC,5
  2402  0175  1D03               	skipz
  2403  0176  16C1               	bsf	_portC,5
  2404                           
  2405                           ;IO_Controls.c: 87: PORTC=portC.portCByte;
  2406  0177  0841               	movf	_portC,w
  2407  0178  008E               	movwf	14	;volatile
  2408  0179  0008               	return
  2409  017A                     __end_of_PIN5:	
  2410                           ;IO_Controls.c: 88: return;
  2411                           
  2412  007E                     btemp	set	126	;btemp
  2413  007E                     int$flags	set	126
  2414  007E                     wtemp0	set	126


Data Sizes:
    Strings     4
    Constant    0
    Data        2
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      43
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    _main->_initPIC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      46
                                              2 BANK0      4     4      0
                         _TogglePIN6
                            _initPIC
                         _pi3Connect
 ---------------------------------------------------------------------------------
 (1) _pi3Connect                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPIC                                              2     2      0       0
                                              0 BANK0      2     2      0
                          _InitUSART
                          _Init_TMR1
                      _InitialiseADC
                    _InitialisePorts
 ---------------------------------------------------------------------------------
 (2) _InitialisePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitialiseADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TogglePIN6                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0     268
                                             11 COMMON     3     3      0
                               _PIN5
                               _PIN6
                             _Timer1
                         _TogglePIN5
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              21    17      4     224
                                              1 COMMON    10     6      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TogglePIN5                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Timer1                                               4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PIN6                                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _PIN5                                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TogglePIN6
   _initPIC
     _InitUSART
     _Init_TMR1
     _InitialiseADC
     _InitialisePorts
   _pi3Connect

 _ISR (ROOT)
   _PIN5
   _PIN6
   _Timer1
   _TogglePIN5
   _getch
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      39       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Apr 11 12:14:40 2018

             __CFG_CP$OFF 0000                       l103 00FF                       l109 01A8  
                     l269 0190                       u505 00BE              __CFG_CPD$OFF 0000  
                     u515 00DC                       _ISR 0004                       u947 00C7  
                     u957 010E                       u967 0156              __CFG_BORV$LO 0000  
                     wreg 0009              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1235 0191                      l1351 00DE                      l1343 00C0  
                    _ADIE 048E                      _ADFM 04F7                      _ADON 04E8  
                    STR_1 01BC                      _LATA 010C                      _LATC 010E  
                    _RCIF 008D                      _PIN5 016C                      _PIN6 015E  
                    _TRMT 0CF1                      _TXIF 008C              __CFG_WRT$OFF 0000  
                    _main 00B1                      _time 0024                      fsr0h 0005  
                    fsr1h 0007                      indf0 0000                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0060             __CFG_IESO$OFF 0000  
  __size_of_InitialiseADC 0016                     ??_ISR 007B                     ?_PIN5 0070  
                   ?_PIN6 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _T1CON 0018                     i1l132 001D                     i1l142 005B  
                   i1l215 01AA                     i1l136 0042                     i1l227 01B6  
                   i1l325 00B0                     i1l274 019D                     _RCREG 0199  
                   _TMR1H 0017                     u33_25 00EA                     _TMR1L 0016  
                   _SPBRG 019B                     _PORTA 000C                     _PORTC 000E  
                   _TRISA 008C                     _TRISC 008E                     _TXREG 019A  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000           __end_of_initPIC 0116  
                   _getch 01B6                     _count 0032                     _portA 0042  
                   _portC 0041                     _putch 01A9                     main@i 0047  
                   status 0003                     wtemp0 007E              __end_of_PIN5 017A  
            __end_of_PIN6 016C            __CFG_MCLRE$OFF 0000           __initialization 0061  
            __end_of_main 00E0                    ??_PIN5 0070                    ??_PIN6 0070  
                  ??_main 0045            __CFG_PLLEN$OFF 0000             _InitialiseADC 0148  
                  ?_getch 0070                    _ADRESH 009C                    _ADRESL 009B  
                  _ANSELA 018C                    ?_putch 0070                    _ANSELC 018E  
                  _T1GCON 0019                    _HFIOFR 04D4                    i1l1301 0072  
                  i1l1273 019E                    i1l1433 0017                    i1l1291 008D  
                  i1l1437 001B                    i1l1295 0098                    i1l1455 003B  
                  i1l1289 008B                    i1l1299 009B                    i1l1459 003F  
      __size_of_InitUSART 0019                    _INTCON 000B                    _FVRCON 0117  
                  _OSCCON 0099        __size_of_Init_TMR1 000D                    _Timer1 00E0  
          __CFG_STVREN$ON 0000                    _printf 006E                _TogglePIN5 0194  
              _TogglePIN6 0187                 ??_initPIC 0043            ?_InitialiseADC 0070  
                  putch@c 0070   __end_of__initialization 006B            __pcstackCOMMON 0070  
            __pidataBANK0 01C0  __size_of_InitialisePorts 0019             __end_of_getch 01BC  
           __end_of_putch 01B0         __end_of_InitUSART 0148         __end_of_Init_TMR1 0187  
               PIN5@OnOff 0071                 PIN6@OnOff 0071                _pi3Connect 01A1  
                 ??_getch 0070                   ??_putch 0070                __pbssBANK0 0020  
                 ?_Timer1 0070                __pmaintext 00B1                _aveTmr1Val 0020  
              __pintentry 0004                   ?_printf 0071           ??_InitialiseADC 0043  
             ?_TogglePIN5 0070               ?_TogglePIN6 0070           __size_of_Timer1 001C  
                 _adcData 003E                   __ptext1 01A1                   __ptext2 00FC  
                 __ptext3 0116                   __ptext4 0148                   __ptext5 017A  
                 __ptext6 012F                   __ptext7 0187                   __ptext9 006E  
         __size_of_printf 0043                   _negFlag 002E              __size_of_ISR 005C  
                 _intData 0038         ??_InitialisePorts 0043                 _T1CONbits 0018  
                 _initPIC 00FC               ?_pi3Connect 0070                   _tmr1Val 0036  
               _IOCAFbits 0393                   _posFlag 0049                 _IOCAPbits 0391  
                 clrloop0 01B1      end_of_initialization 006B       __size_of_TogglePIN5 000D  
     __size_of_TogglePIN6 000D                 _RCSTAbits 019D                   printf@c 007A  
                 printf@f 0071                 _PORTAbits 000C                _printCount 002A  
        __CFG_FOSC$INTOSC 0000                 _TRISAbits 008C                 _TXSTAbits 019E  
     __size_of_pi3Connect 0008            __end_of_Timer1 00FC               _BAUDCONbits 019F  
          __end_of_printf 00B1                 _InitUSART 012F       start_initialization 0061  
               _Init_TMR1 017A               __end_of_ISR 0060                  ??_Timer1 0072  
             __pdataBANK0 0049                  ??_printf 0075              ??_TogglePIN5 0070  
            ??_TogglePIN6 0043                ?_InitUSART 0070                 _adcSample 003C  
               ___latbits 0000                ?_Init_TMR1 0070             __pcstackBANK0 0043  
      __end_of_TogglePIN5 01A1        __end_of_TogglePIN6 0194           _InitialisePorts 0116  
       _previousADCsample 003A                  ?_initPIC 0070     __end_of_InitialiseADC 015E  
            ??_pi3Connect 0043            __size_of_getch 0006            __size_of_putch 0007  
               _tmr1Count 0028                 clear_ram0 01B0                 _sampleVal 0034  
                _PIE1bits 0091                  _PIR1bits 0011                  _GO_nDONE 04E9  
      __end_of_pi3Connect 01A9                 _temp_time 0026                _ADCON0bits 009D  
               _startFlag 0030                _ADCON1bits 009E                printf@flag 0078  
               _zeroCount 002C               ??_InitUSART 0043               ??_Init_TMR1 0043  
 __end_of_InitialisePorts 012F                _APFCONbits 011D                _ANSELAbits 018C  
                _charData 0040          __size_of_initPIC 001A                  __ptext10 01A9  
                __ptext11 01B6                  __ptext12 0194                  __ptext13 00E0  
                __ptext14 015E                  __ptext15 016C             __size_of_PIN5 000E  
           __size_of_PIN6 000E             __size_of_main 002F                  int$flags 007E  
              _INTCONbits 000B                  intlevel1 0000          ?_InitialisePorts 0070  
       __CFG_CLKOUTEN$OFF 0000                  printf@ap 0079             __pstringtext1 01BC  
           __pstringtext2 0000                _OPTION_REG 0095  
