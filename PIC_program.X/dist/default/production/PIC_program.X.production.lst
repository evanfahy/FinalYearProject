

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Mar 19 21:51:55 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 1.44
    21                           ; Generated 14/09/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F1823 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000E                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  008C                     	;# 
    82  008E                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  010C                     	;# 
    97  010E                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0113                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0117                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020C                     	;# 
   134  020E                     	;# 
   135  0211                     	;# 
   136  0211                     	;# 
   137  0212                     	;# 
   138  0212                     	;# 
   139  0213                     	;# 
   140  0213                     	;# 
   141  0214                     	;# 
   142  0214                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0216                     	;# 
   147  0216                     	;# 
   148  0217                     	;# 
   149  0217                     	;# 
   150  0291                     	;# 
   151  0291                     	;# 
   152  0292                     	;# 
   153  0293                     	;# 
   154  0294                     	;# 
   155  0295                     	;# 
   156  0295                     	;# 
   157  0296                     	;# 
   158  0391                     	;# 
   159  0392                     	;# 
   160  0393                     	;# 
   161  039A                     	;# 
   162  039C                     	;# 
   163  039D                     	;# 
   164  039E                     	;# 
   165  039F                     	;# 
   166  0FE4                     	;# 
   167  0FE5                     	;# 
   168  0FE6                     	;# 
   169  0FE7                     	;# 
   170  0FE8                     	;# 
   171  0FE9                     	;# 
   172  0FEA                     	;# 
   173  0FEB                     	;# 
   174  0FED                     	;# 
   175  0FEE                     	;# 
   176  0FEF                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000E                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  008C                     	;# 
   205  008E                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  010C                     	;# 
   220  010E                     	;# 
   221  0111                     	;# 
   222  0112                     	;# 
   223  0113                     	;# 
   224  0114                     	;# 
   225  0115                     	;# 
   226  0116                     	;# 
   227  0117                     	;# 
   228  0118                     	;# 
   229  0119                     	;# 
   230  011A                     	;# 
   231  011B                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  018C                     	;# 
   235  018E                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019C                     	;# 
   252  019C                     	;# 
   253  019D                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  020C                     	;# 
   257  020E                     	;# 
   258  0211                     	;# 
   259  0211                     	;# 
   260  0212                     	;# 
   261  0212                     	;# 
   262  0213                     	;# 
   263  0213                     	;# 
   264  0214                     	;# 
   265  0214                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0291                     	;# 
   274  0291                     	;# 
   275  0292                     	;# 
   276  0293                     	;# 
   277  0294                     	;# 
   278  0295                     	;# 
   279  0295                     	;# 
   280  0296                     	;# 
   281  0391                     	;# 
   282  0392                     	;# 
   283  0393                     	;# 
   284  039A                     	;# 
   285  039C                     	;# 
   286  039D                     	;# 
   287  039E                     	;# 
   288  039F                     	;# 
   289  0FE4                     	;# 
   290  0FE5                     	;# 
   291  0FE6                     	;# 
   292  0FE7                     	;# 
   293  0FE8                     	;# 
   294  0FE9                     	;# 
   295  0FEA                     	;# 
   296  0FEB                     	;# 
   297  0FED                     	;# 
   298  0FEE                     	;# 
   299  0FEF                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000E                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  008C                     	;# 
   328  008E                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0097                     	;# 
   334  0098                     	;# 
   335  0099                     	;# 
   336  009A                     	;# 
   337  009B                     	;# 
   338  009B                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009E                     	;# 
   342  010C                     	;# 
   343  010E                     	;# 
   344  0111                     	;# 
   345  0112                     	;# 
   346  0113                     	;# 
   347  0114                     	;# 
   348  0115                     	;# 
   349  0116                     	;# 
   350  0117                     	;# 
   351  0118                     	;# 
   352  0119                     	;# 
   353  011A                     	;# 
   354  011B                     	;# 
   355  011D                     	;# 
   356  011D                     	;# 
   357  018C                     	;# 
   358  018E                     	;# 
   359  0191                     	;# 
   360  0191                     	;# 
   361  0192                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0194                     	;# 
   366  0195                     	;# 
   367  0196                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019E                     	;# 
   378  019F                     	;# 
   379  020C                     	;# 
   380  020E                     	;# 
   381  0211                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0213                     	;# 
   387  0214                     	;# 
   388  0214                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0216                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0217                     	;# 
   396  0291                     	;# 
   397  0291                     	;# 
   398  0292                     	;# 
   399  0293                     	;# 
   400  0294                     	;# 
   401  0295                     	;# 
   402  0295                     	;# 
   403  0296                     	;# 
   404  0391                     	;# 
   405  0392                     	;# 
   406  0393                     	;# 
   407  039A                     	;# 
   408  039C                     	;# 
   409  039D                     	;# 
   410  039E                     	;# 
   411  039F                     	;# 
   412  0FE4                     	;# 
   413  0FE5                     	;# 
   414  0FE6                     	;# 
   415  0FE7                     	;# 
   416  0FE8                     	;# 
   417  0FE9                     	;# 
   418  0FEA                     	;# 
   419  0FEB                     	;# 
   420  0FED                     	;# 
   421  0FEE                     	;# 
   422  0FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000E                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001E                     	;# 
   449  001F                     	;# 
   450  008C                     	;# 
   451  008E                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  010C                     	;# 
   466  010E                     	;# 
   467  0111                     	;# 
   468  0112                     	;# 
   469  0113                     	;# 
   470  0114                     	;# 
   471  0115                     	;# 
   472  0116                     	;# 
   473  0117                     	;# 
   474  0118                     	;# 
   475  0119                     	;# 
   476  011A                     	;# 
   477  011B                     	;# 
   478  011D                     	;# 
   479  011D                     	;# 
   480  018C                     	;# 
   481  018E                     	;# 
   482  0191                     	;# 
   483  0191                     	;# 
   484  0192                     	;# 
   485  0193                     	;# 
   486  0193                     	;# 
   487  0193                     	;# 
   488  0194                     	;# 
   489  0195                     	;# 
   490  0196                     	;# 
   491  0199                     	;# 
   492  019A                     	;# 
   493  019B                     	;# 
   494  019B                     	;# 
   495  019B                     	;# 
   496  019B                     	;# 
   497  019C                     	;# 
   498  019C                     	;# 
   499  019D                     	;# 
   500  019E                     	;# 
   501  019F                     	;# 
   502  020C                     	;# 
   503  020E                     	;# 
   504  0211                     	;# 
   505  0211                     	;# 
   506  0212                     	;# 
   507  0212                     	;# 
   508  0213                     	;# 
   509  0213                     	;# 
   510  0214                     	;# 
   511  0214                     	;# 
   512  0215                     	;# 
   513  0215                     	;# 
   514  0215                     	;# 
   515  0216                     	;# 
   516  0216                     	;# 
   517  0217                     	;# 
   518  0217                     	;# 
   519  0291                     	;# 
   520  0291                     	;# 
   521  0292                     	;# 
   522  0293                     	;# 
   523  0294                     	;# 
   524  0295                     	;# 
   525  0295                     	;# 
   526  0296                     	;# 
   527  0391                     	;# 
   528  0392                     	;# 
   529  0393                     	;# 
   530  039A                     	;# 
   531  039C                     	;# 
   532  039D                     	;# 
   533  039E                     	;# 
   534  039F                     	;# 
   535  0FE4                     	;# 
   536  0FE5                     	;# 
   537  0FE6                     	;# 
   538  0FE7                     	;# 
   539  0FE8                     	;# 
   540  0FE9                     	;# 
   541  0FEA                     	;# 
   542  0FEB                     	;# 
   543  0FED                     	;# 
   544  0FEE                     	;# 
   545  0FEF                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000E                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001E                     	;# 
   572  001F                     	;# 
   573  008C                     	;# 
   574  008E                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0095                     	;# 
   578  0096                     	;# 
   579  0097                     	;# 
   580  0098                     	;# 
   581  0099                     	;# 
   582  009A                     	;# 
   583  009B                     	;# 
   584  009B                     	;# 
   585  009C                     	;# 
   586  009D                     	;# 
   587  009E                     	;# 
   588  010C                     	;# 
   589  010E                     	;# 
   590  0111                     	;# 
   591  0112                     	;# 
   592  0113                     	;# 
   593  0114                     	;# 
   594  0115                     	;# 
   595  0116                     	;# 
   596  0117                     	;# 
   597  0118                     	;# 
   598  0119                     	;# 
   599  011A                     	;# 
   600  011B                     	;# 
   601  011D                     	;# 
   602  011D                     	;# 
   603  018C                     	;# 
   604  018E                     	;# 
   605  0191                     	;# 
   606  0191                     	;# 
   607  0192                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0193                     	;# 
   611  0194                     	;# 
   612  0195                     	;# 
   613  0196                     	;# 
   614  0199                     	;# 
   615  019A                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019C                     	;# 
   621  019C                     	;# 
   622  019D                     	;# 
   623  019E                     	;# 
   624  019F                     	;# 
   625  020C                     	;# 
   626  020E                     	;# 
   627  0211                     	;# 
   628  0211                     	;# 
   629  0212                     	;# 
   630  0212                     	;# 
   631  0213                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0214                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0216                     	;# 
   639  0216                     	;# 
   640  0217                     	;# 
   641  0217                     	;# 
   642  0291                     	;# 
   643  0291                     	;# 
   644  0292                     	;# 
   645  0293                     	;# 
   646  0294                     	;# 
   647  0295                     	;# 
   648  0295                     	;# 
   649  0296                     	;# 
   650  0391                     	;# 
   651  0392                     	;# 
   652  0393                     	;# 
   653  039A                     	;# 
   654  039C                     	;# 
   655  039D                     	;# 
   656  039E                     	;# 
   657  039F                     	;# 
   658  0FE4                     	;# 
   659  0FE5                     	;# 
   660  0FE6                     	;# 
   661  0FE7                     	;# 
   662  0FE8                     	;# 
   663  0FE9                     	;# 
   664  0FEA                     	;# 
   665  0FEB                     	;# 
   666  0FED                     	;# 
   667  0FEE                     	;# 
   668  0FEF                     	;# 
   669  0016                     _TMR1L	set	22
   670  0017                     _TMR1H	set	23
   671  0015                     _TMR0	set	21
   672  0019                     _T1GCON	set	25
   673  0018                     _T1CON	set	24
   674  000E                     _PORTC	set	14
   675  000C                     _PORTA	set	12
   676  000C                     _PORTAbits	set	12
   677  0018                     _T1CONbits	set	24
   678  000B                     _INTCONbits	set	11
   679  000B                     _INTCON	set	11
   680  005A                     _TMR0IF	set	90
   681  005D                     _TMR0IE	set	93
   682  008C                     _TXIF	set	140
   683  008E                     _TRISC	set	142
   684  008C                     _TRISA	set	140
   685  0095                     _OPTION_REG	set	149
   686  009B                     _ADRESL	set	155
   687  009C                     _ADRESH	set	156
   688  009E                     _ADCON1bits	set	158
   689  009D                     _ADCON0bits	set	157
   690  0099                     _OSCCON	set	153
   691  04AA                     _PS2	set	1194
   692  04A9                     _PS1	set	1193
   693  04A8                     _PS0	set	1192
   694  04AB                     _PSA	set	1195
   695  04AD                     _TMR0CS	set	1197
   696  0460                     _TRISA0	set	1120
   697  048C                     _TXIE	set	1164
   698  04E9                     _GO_nDONE	set	1257
   699  048E                     _ADIE	set	1166
   700  04F7                     _ADFM	set	1271
   701  04E8                     _ADON	set	1256
   702  04D4                     _HFIOFR	set	1236
   703  010E                     _LATC	set	270
   704  010C                     _LATA	set	268
   705  0117                     _FVRCON	set	279
   706  08EA                     _TXCKSEL	set	2282
   707  018E                     _ANSELC	set	398
   708  018C                     _ANSELA	set	396
   709  019B                     _SPBRG	set	411
   710  019F                     _BAUDCONbits	set	415
   711  019D                     _RCSTAbits	set	413
   712  019E                     _TXSTAbits	set	414
   713  019A                     _TXREG	set	410
   714  0CF1                     _TRMT	set	3313
   715                           
   716                           ; #config settings
   717  0000                     
   718                           	psect	cinit
   719  0021                     start_initialization:	
   720  0021                     __initialization:	
   721                           
   722                           ; Clear objects allocated to COMMON
   723  0021  01F0               	clrf	__pbssCOMMON& (0+127)
   724  0022  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   725  0023  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   726  0024  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   727  0025  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   728  0026  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   729                           
   730                           ; Clear objects allocated to BANK0
   731  0027  0020               	movlb	0	; select bank0
   732  0028  01A0               	clrf	__pbssBANK0& (0+127)
   733  0029  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   734  002A  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   735  002B  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   736  002C  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   737  002D  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   738  002E  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   739  002F  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   740  0030  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   741  0031  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   742  0032  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   743  0033  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   744  0034                     end_of_initialization:	
   745                           ;End of C runtime variable initialization code
   746                           
   747  0034                     __end_of__initialization:	
   748  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   749  0035  0020               	movlb	0
   750  0036  2837               	ljmp	_main	;jump to C main() function
   751                           
   752                           	psect	bssCOMMON
   753  0070                     __pbssCOMMON:	
   754  0070                     _startFlag:	
   755  0070                     	ds	2
   756  0072                     _count:	
   757  0072                     	ds	2
   758  0074                     _portC:	
   759  0074                     	ds	1
   760  0075                     _portA:	
   761  0075                     	ds	1
   762                           
   763                           	psect	bssBANK0
   764  0020                     __pbssBANK0:	
   765  0020                     _time:	
   766  0020                     	ds	2
   767  0022                     _temp_time:	
   768  0022                     	ds	2
   769  0024                     _zeroCount:	
   770  0024                     	ds	2
   771  0026                     _sampleVal:	
   772  0026                     	ds	2
   773  0028                     _time_16bit:	
   774  0028                     	ds	2
   775  002A                     _adcData:	
   776  002A                     	ds	2
   777                           
   778                           	psect	cstackCOMMON
   779  0076                     __pcstackCOMMON:	
   780  0076                     ?_InitUSART:	
   781  0076                     ?_InitialisePorts:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0076                     ?_InitialiseADC:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0076                     ?_Init_TMR1:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0076                     ?_PIN6:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0076                     ?_TogglePIN6:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0076                     ??_TogglePIN6:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0076                     ?_ISR:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0076                     ?_main:	
   803                           ; 1 bytes @ 0x0
   804                           
   805                           
   806                           ; 2 bytes @ 0x0
   807  0076                     	ds	1
   808  0077                     ??_ISR:	
   809                           
   810                           ; 1 bytes @ 0x1
   811  0077                     	ds	1
   812  0078                     ??_InitUSART:	
   813  0078                     ??_InitialisePorts:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0078                     ??_InitialiseADC:	
   817                           ; 1 bytes @ 0x2
   818                           
   819  0078                     ??_Init_TMR1:	
   820                           ; 1 bytes @ 0x2
   821                           
   822  0078                     ??_PIN6:	
   823                           ; 1 bytes @ 0x2
   824                           
   825  0078                     ?_Timer1:	
   826                           ; 1 bytes @ 0x2
   827                           
   828                           
   829                           ; 2 bytes @ 0x2
   830  0078                     	ds	1
   831  0079                     PIN6@OnOff:	
   832                           
   833                           ; 1 bytes @ 0x3
   834  0079                     	ds	1
   835  007A                     ??_Timer1:	
   836                           
   837                           ; 1 bytes @ 0x4
   838  007A                     	ds	2
   839  007C                     ??_main:	
   840                           
   841                           	psect	cstackBANK0
   842  002C                     __pcstackBANK0:	
   843                           ; 1 bytes @ 0x6
   844                           
   845  002C                     main@ADC_sample:	
   846                           
   847                           ; 2 bytes @ 0x0
   848  002C                     	ds	2
   849                           
   850                           	psect	maintext
   851  0037                     __pmaintext:	
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 31 in file "newmain.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  ADC_sample      2    0[BANK0 ] unsigned short 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  2   48[None  ] int 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : B1F/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1
   871 ;;      Params:         0       0       0
   872 ;;      Locals:         0       2       0
   873 ;;      Temps:          0       0       0
   874 ;;      Totals:         0       2       0
   875 ;;Total ram usage:        2 bytes
   876 ;; Hardware stack levels required when called:    3
   877 ;; This function calls:
   878 ;;		_InitUSART
   879 ;;		_Init_TMR1
   880 ;;		_InitialiseADC
   881 ;;		_InitialisePorts
   882 ;;		_PIN6
   883 ;;		_Timer1
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _main
   891  0037                     _main:	
   892                           
   893                           ;newmain.c: 34: OSCCON = 0b01101000;
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   897  0037  3068               	movlw	104
   898  0038  0021               	movlb	1	; select bank1
   899  0039  0099               	movwf	25	;volatile
   900  003A                     l49:	
   901                           ;newmain.c: 45: while(HFIOFR==0){
   902                           
   903  003A  1E1A               	btfss	26,4	;volatile
   904  003B  283A               	goto	l49
   905                           
   906                           ;newmain.c: 46: }
   907                           ;newmain.c: 49: INTCON = 0b00000000;
   908  003C  018B               	clrf	11	;volatile
   909                           
   910                           ;newmain.c: 50: INTCONbits.GIE = 0;
   911  003D  138B               	bcf	11,7	;volatile
   912                           
   913                           ;newmain.c: 52: InitUSART();
   914  003E  20DC               	fcall	_InitUSART
   915                           
   916                           ;newmain.c: 53: InitialisePorts();
   917  003F  20B9               	fcall	_InitialisePorts
   918                           
   919                           ;newmain.c: 54: InitialiseADC();
   920  0040  20A3               	fcall	_InitialiseADC
   921                           
   922                           ;newmain.c: 55: ADON=1;
   923  0041  0021               	movlb	1	; select bank1
   924  0042  141D               	bsf	29,0	;volatile
   925                           
   926                           ;newmain.c: 57: Init_TMR1();
   927  0043  20EA               	fcall	_Init_TMR1
   928                           
   929                           ;newmain.c: 59: INTCONbits.INTE = 1;
   930  0044  160B               	bsf	11,4	;volatile
   931                           
   932                           ;newmain.c: 60: INTCONbits.GIE = 1;
   933  0045  178B               	bsf	11,7	;volatile
   934                           
   935                           ;newmain.c: 61: INTCONbits.INTF = 0;
   936  0046  108B               	bcf	11,1	;volatile
   937  0047  286A               	goto	l1143
   938  0048                     l1145:	
   939  0048  0870               	movf	_startFlag,w	;volatile
   940  0049  0471               	iorwf	_startFlag+1,w	;volatile
   941  004A  1D03               	btfss	3,2
   942  004B  2872               	goto	l1165
   943                           
   944                           ;newmain.c: 71: sampleVal = ADC_sample;
   945  004C  082D               	movf	main@ADC_sample+1,w
   946  004D  00A7               	movwf	_sampleVal+1	;volatile
   947  004E  082C               	movf	main@ADC_sample,w
   948  004F  00A6               	movwf	_sampleVal	;volatile
   949                           
   950                           ;newmain.c: 73: if(count == 0) {
   951  0050  0872               	movf	_count,w	;volatile
   952  0051  0473               	iorwf	_count+1,w	;volatile
   953  0052  1D03               	btfss	3,2
   954  0053  285C               	goto	l1157
   955                           
   956                           ;newmain.c: 75: T1CONbits.TMR1ON = 1;
   957  0054  1418               	bsf	24,0	;volatile
   958                           
   959                           ;newmain.c: 76: PIN6(1);
   960  0055  3001               	movlw	1
   961  0056  20CE               	fcall	_PIN6
   962                           
   963                           ;newmain.c: 77: count = 1;
   964  0057  3001               	movlw	1
   965  0058  00F2               	movwf	_count	;volatile
   966  0059  3000               	movlw	0
   967  005A  00F3               	movwf	_count+1	;volatile
   968                           
   969                           ;newmain.c: 78: }
   970  005B  2866               	goto	l1163
   971  005C                     l1157:	
   972                           
   973                           ;newmain.c: 79: else {
   974                           ;newmain.c: 81: PIN6(0);
   975  005C  3000               	movlw	0
   976  005D  20CE               	fcall	_PIN6
   977                           
   978                           ;newmain.c: 82: time_16bit = Timer1();
   979  005E  2081               	fcall	_Timer1
   980  005F  0879               	movf	?_Timer1+1,w
   981  0060  0020               	movlb	0	; select bank0
   982  0061  00A9               	movwf	_time_16bit+1
   983  0062  0878               	movf	?_Timer1,w
   984  0063  00A8               	movwf	_time_16bit
   985                           
   986                           ;newmain.c: 84: count = 0;
   987  0064  01F2               	clrf	_count	;volatile
   988  0065  01F3               	clrf	_count+1	;volatile
   989  0066                     l1163:	
   990                           
   991                           ;newmain.c: 85: }
   992                           ;newmain.c: 88: startFlag = 1;
   993  0066  3001               	movlw	1
   994  0067  00F0               	movwf	_startFlag	;volatile
   995  0068  3000               	movlw	0
   996  0069  00F1               	movwf	_startFlag+1	;volatile
   997  006A                     l1143:	
   998                           ;newmain.c: 63: unsigned short ADC_sample;
   999                           ;newmain.c: 65: while(1) {
  1000                           
  1001                           ;newmain.c: 89: }
  1002                           
  1003                           
  1004                           ;newmain.c: 69: if((ADC_sample > 768) && (startFlag == 0)) {
  1005  006A  3003               	movlw	3
  1006  006B  0020               	movlb	0	; select bank0
  1007  006C  022D               	subwf	main@ADC_sample+1,w
  1008  006D  3001               	movlw	1
  1009  006E  1903               	skipnz
  1010  006F  022C               	subwf	main@ADC_sample,w
  1011  0070  1803               	btfsc	3,0
  1012  0071  2848               	goto	l1145
  1013  0072                     l1165:	
  1014                           
  1015                           ;newmain.c: 90: else if((ADC_sample < 128) && (startFlag == 1)) {
  1016  0072  3000               	movlw	0
  1017  0073  0020               	movlb	0	; select bank0
  1018  0074  022D               	subwf	main@ADC_sample+1,w
  1019  0075  3080               	movlw	128
  1020  0076  1903               	skipnz
  1021  0077  022C               	subwf	main@ADC_sample,w
  1022  0078  1803               	skipnc
  1023  0079  286A               	goto	l1143
  1024  007A  0370               	decf	_startFlag,w	;volatile
  1025  007B  0471               	iorwf	_startFlag+1,w	;volatile
  1026  007C  1D03               	btfss	3,2
  1027  007D  286A               	goto	l1143
  1028                           
  1029                           ;newmain.c: 93: startFlag = 0;
  1030  007E  01F0               	clrf	_startFlag	;volatile
  1031  007F  01F1               	clrf	_startFlag+1	;volatile
  1032                           
  1033                           ;newmain.c: 95: else{}
  1034                           
  1035                           ;newmain.c: 94: }
  1036  0080  286A               	goto	l1143
  1037  0081                     __end_of_main:	
  1038                           ;newmain.c: 97: }
  1039                           ;newmain.c: 99: return (0);
  1040                           ;	Return value of _main is never used
  1041                           
  1042                           
  1043                           	psect	text1
  1044  0081                     __ptext1:	
  1045 ;; *************** function _Timer1 *****************
  1046 ;; Defined at:
  1047 ;;		line 47 in file "Timer.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2    2[COMMON] unsigned int 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1
  1061 ;;      Params:         2       0       0
  1062 ;;      Locals:         0       0       0
  1063 ;;      Temps:          2       0       0
  1064 ;;      Totals:         4       0       0
  1065 ;;Total ram usage:        4 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    2
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _Timer1
  1077  0081                     _Timer1:	
  1078                           
  1079                           ;Timer.c: 49: T1CONbits.TMR1ON = 0;
  1080                           
  1081                           ;incstack = 0
  1082                           ; Regs used in _Timer1: [wreg+status,2]
  1083  0081  0020               	movlb	0	; select bank0
  1084  0082  1018               	bcf	24,0	;volatile
  1085                           
  1086                           ;Timer.c: 51: temp_time = TMR1H;
  1087  0083  0817               	movf	23,w	;volatile
  1088  0084  00FA               	movwf	??_Timer1
  1089  0085  01FB               	clrf	??_Timer1+1
  1090  0086  087A               	movf	??_Timer1,w
  1091  0087  00A2               	movwf	_temp_time
  1092  0088  087B               	movf	??_Timer1+1,w
  1093  0089  00A3               	movwf	_temp_time+1
  1094                           
  1095                           ;Timer.c: 52: temp_time <<= 8;
  1096  008A  3008               	movlw	8
  1097  008B                     u325:	
  1098  008B  35A2               	lslf	_temp_time,f
  1099  008C  0DA3               	rlf	_temp_time+1,f
  1100  008D  0B89               	decfsz	9,f
  1101  008E  288B               	goto	u325
  1102                           
  1103                           ;Timer.c: 53: temp_time += TMR1L;
  1104  008F  0816               	movf	22,w	;volatile
  1105  0090  00FA               	movwf	??_Timer1
  1106  0091  01FB               	clrf	??_Timer1+1
  1107  0092  087A               	movf	??_Timer1,w
  1108  0093  07A2               	addwf	_temp_time,f
  1109  0094  087B               	movf	??_Timer1+1,w
  1110  0095  3DA3               	addwfc	_temp_time+1,f
  1111                           
  1112                           ;Timer.c: 55: time = temp_time;
  1113  0096  0823               	movf	_temp_time+1,w
  1114  0097  00A1               	movwf	_time+1
  1115  0098  0822               	movf	_temp_time,w
  1116  0099  00A0               	movwf	_time
  1117                           
  1118                           ;Timer.c: 57: TMR1L = 0x00;
  1119  009A  0196               	clrf	22	;volatile
  1120                           
  1121                           ;Timer.c: 58: TMR1H = 0x00;
  1122  009B  0197               	clrf	23	;volatile
  1123                           
  1124                           ;Timer.c: 59: temp_time = 0;
  1125  009C  01A2               	clrf	_temp_time
  1126  009D  01A3               	clrf	_temp_time+1
  1127                           
  1128                           ;Timer.c: 61: return time;
  1129  009E  0821               	movf	_time+1,w
  1130  009F  00F9               	movwf	?_Timer1+1
  1131  00A0  0820               	movf	_time,w
  1132  00A1  00F8               	movwf	?_Timer1
  1133  00A2  0008               	return
  1134  00A3                     __end_of_Timer1:	
  1135                           
  1136                           	psect	text2
  1137  00CE                     __ptext2:	
  1138 ;; *************** function _PIN6 *****************
  1139 ;; Defined at:
  1140 ;;		line 75 in file "IO_Controls.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  OnOff           1    wreg     unsigned char 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  OnOff           1    3[COMMON] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1
  1154 ;;      Params:         0       0       0
  1155 ;;      Locals:         1       0       0
  1156 ;;      Temps:          1       0       0
  1157 ;;      Totals:         2       0       0
  1158 ;;Total ram usage:        2 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    2
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _PIN6
  1170  00CE                     _PIN6:	
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in _PIN6: [wreg+status,2]
  1174                           ;PIN6@OnOff stored from wreg
  1175  00CE  00F9               	movwf	PIN6@OnOff
  1176                           
  1177                           ;IO_Controls.c: 77: portC.portCByte = PORTC;
  1178  00CF  0020               	movlb	0	; select bank0
  1179  00D0  080E               	movf	14,w	;volatile
  1180  00D1  00F8               	movwf	??_PIN6
  1181  00D2  0878               	movf	??_PIN6,w
  1182  00D3  00F4               	movwf	_portC
  1183                           
  1184                           ;IO_Controls.c: 78: portC.bits.Pin6 = OnOff;
  1185  00D4  0879               	movf	PIN6@OnOff,w
  1186  00D5  3901               	andlw	1
  1187  00D6  1274               	bcf	_portC,4
  1188  00D7  1D03               	skipz
  1189  00D8  1674               	bsf	_portC,4
  1190                           
  1191                           ;IO_Controls.c: 79: PORTC=portC.portCByte;
  1192  00D9  0874               	movf	_portC,w
  1193  00DA  008E               	movwf	14	;volatile
  1194  00DB  0008               	return
  1195  00DC                     __end_of_PIN6:	
  1196                           ;IO_Controls.c: 80: return;
  1197                           
  1198                           
  1199                           	psect	text3
  1200  00B9                     __ptext3:	
  1201 ;; *************** function _InitialisePorts *****************
  1202 ;; Defined at:
  1203 ;;		line 13 in file "IO_Controls.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1
  1217 ;;      Params:         0       0       0
  1218 ;;      Locals:         0       0       0
  1219 ;;      Temps:          0       0       0
  1220 ;;      Totals:         0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    2
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _InitialisePorts
  1233  00B9                     _InitialisePorts:	
  1234                           
  1235                           ;IO_Controls.c: 15: OPTION_REG = 0b11000000;
  1236                           
  1237                           ;incstack = 0
  1238                           ; Regs used in _InitialisePorts: [wreg+status,2]
  1239  00B9  30C0               	movlw	192
  1240  00BA  0021               	movlb	1	; select bank1
  1241  00BB  0095               	movwf	21	;volatile
  1242                           
  1243                           ;IO_Controls.c: 32: portA.portAByte = 0;
  1244  00BC  01F5               	clrf	_portA
  1245                           
  1246                           ;IO_Controls.c: 33: LATA = 0;
  1247  00BD  0022               	movlb	2	; select bank2
  1248  00BE  018C               	clrf	12	;volatile
  1249                           
  1250                           ;IO_Controls.c: 34: TRISA = 0b00011100;
  1251  00BF  301C               	movlw	28
  1252  00C0  0021               	movlb	1	; select bank1
  1253  00C1  008C               	movwf	12	;volatile
  1254                           
  1255                           ;IO_Controls.c: 37: ANSELA = 0b00000000;
  1256  00C2  0023               	movlb	3	; select bank3
  1257  00C3  018C               	clrf	12	;volatile
  1258                           
  1259                           ;IO_Controls.c: 52: portC.portCByte = 0;
  1260  00C4  01F4               	clrf	_portC
  1261                           
  1262                           ;IO_Controls.c: 53: LATC = 0;
  1263  00C5  0022               	movlb	2	; select bank2
  1264  00C6  018E               	clrf	14	;volatile
  1265                           
  1266                           ;IO_Controls.c: 54: TRISC = 0b00001000;
  1267  00C7  3008               	movlw	8
  1268  00C8  0021               	movlb	1	; select bank1
  1269  00C9  008E               	movwf	14	;volatile
  1270                           
  1271                           ;IO_Controls.c: 56: ANSELC = 0b00001000;
  1272  00CA  3008               	movlw	8
  1273  00CB  0023               	movlb	3	; select bank3
  1274  00CC  008E               	movwf	14	;volatile
  1275  00CD  0008               	return
  1276  00CE                     __end_of_InitialisePorts:	
  1277                           ;IO_Controls.c: 62: return;
  1278                           
  1279                           
  1280                           	psect	text4
  1281  00A3                     __ptext4:	
  1282 ;; *************** function _InitialiseADC *****************
  1283 ;; Defined at:
  1284 ;;		line 15 in file "ADC.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1
  1298 ;;      Params:         0       0       0
  1299 ;;      Locals:         0       0       0
  1300 ;;      Temps:          0       0       0
  1301 ;;      Totals:         0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    2
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _InitialiseADC
  1314  00A3                     _InitialiseADC:	
  1315                           
  1316                           ;ADC.c: 17: ADCON0bits.CHS = 0b0111;
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _InitialiseADC: [wreg+status,2+status,0]
  1320  00A3  0021               	movlb	1	; select bank1
  1321  00A4  081D               	movf	29,w	;volatile
  1322  00A5  3983               	andlw	-125
  1323  00A6  381C               	iorlw	28
  1324  00A7  009D               	movwf	29	;volatile
  1325                           
  1326                           ;ADC.c: 19: ADFM = 1;
  1327  00A8  179E               	bsf	30,7	;volatile
  1328                           
  1329                           ;ADC.c: 20: ADCON1bits.ADCS = 0b000;
  1330  00A9  308F               	movlw	-113
  1331  00AA  059E               	andwf	30,f	;volatile
  1332                           
  1333                           ;ADC.c: 22: ADCON1bits.ADPREF = 0b011;
  1334  00AB  3003               	movlw	3
  1335  00AC  049E               	iorwf	30,f	;volatile
  1336                           
  1337                           ;ADC.c: 24: FVRCON = 0b11000010;
  1338  00AD  30C2               	movlw	194
  1339  00AE  0022               	movlb	2	; select bank2
  1340  00AF  0097               	movwf	23	;volatile
  1341                           
  1342                           ;ADC.c: 26: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1343  00B0  3003               	movlw	3
  1344  00B1                     u397:	
  1345  00B1  0B89               	decfsz	9,f
  1346  00B2  28B1               	goto	u397
  1347  00B3  0000               	nop
  1348                           
  1349                           ;ADC.c: 27: ADIE=0;
  1350  00B4  0021               	movlb	1	; select bank1
  1351  00B5  1311               	bcf	17,6	;volatile
  1352                           
  1353                           ;ADC.c: 28: ADON=0;
  1354  00B6  101D               	bcf	29,0	;volatile
  1355                           
  1356                           ;ADC.c: 29: GO_nDONE=0;
  1357  00B7  109D               	bcf	29,1	;volatile
  1358  00B8  0008               	return
  1359  00B9                     __end_of_InitialiseADC:	
  1360                           ;ADC.c: 30: return;
  1361                           
  1362                           
  1363                           	psect	text5
  1364  00EA                     __ptext5:	
  1365 ;; *************** function _Init_TMR1 *****************
  1366 ;; Defined at:
  1367 ;;		line 18 in file "Timer.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1
  1381 ;;      Params:         0       0       0
  1382 ;;      Locals:         0       0       0
  1383 ;;      Temps:          0       0       0
  1384 ;;      Totals:         0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    2
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _Init_TMR1
  1397  00EA                     _Init_TMR1:	
  1398                           
  1399                           ;Timer.c: 21: T1CON = 0b00000000;
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _Init_TMR1: [wreg+status,2+status,0]
  1403  00EA  0020               	movlb	0	; select bank0
  1404  00EB  0198               	clrf	24	;volatile
  1405                           
  1406                           ;Timer.c: 22: T1CONbits.TMR1CS = 0b00;
  1407  00EC  303F               	movlw	-193
  1408  00ED  0598               	andwf	24,f	;volatile
  1409                           
  1410                           ;Timer.c: 23: T1CONbits.T1CKPS = 0b01;
  1411  00EE  0818               	movf	24,w	;volatile
  1412  00EF  39CF               	andlw	-49
  1413  00F0  3810               	iorlw	16
  1414  00F1  0098               	movwf	24	;volatile
  1415                           
  1416                           ;Timer.c: 25: T1GCON = 0b01000000;
  1417  00F2  3040               	movlw	64
  1418  00F3  0099               	movwf	25	;volatile
  1419                           
  1420                           ;Timer.c: 27: INTCON = 0b10000000;
  1421  00F4  3080               	movlw	128
  1422  00F5  008B               	movwf	11	;volatile
  1423  00F6  0008               	return
  1424  00F7                     __end_of_Init_TMR1:	
  1425                           ;Timer.c: 29: return;
  1426                           
  1427                           
  1428                           	psect	text6
  1429  00DC                     __ptext6:	
  1430 ;; *************** function _InitUSART *****************
  1431 ;; Defined at:
  1432 ;;		line 17 in file "USART.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1
  1446 ;;      Params:         0       0       0
  1447 ;;      Locals:         0       0       0
  1448 ;;      Temps:          0       0       0
  1449 ;;      Totals:         0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    2
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _InitUSART
  1462  00DC                     _InitUSART:	
  1463                           
  1464                           ;USART.c: 20: TXIE=0;
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _InitUSART: [wreg]
  1468  00DC  0021               	movlb	1	; select bank1
  1469  00DD  1211               	bcf	17,4	;volatile
  1470                           
  1471                           ;USART.c: 21: TRISA0 =0;
  1472  00DE  100C               	bcf	12,0	;volatile
  1473                           
  1474                           ;USART.c: 22: TXCKSEL =1;
  1475  00DF  0022               	movlb	2	; select bank2
  1476  00E0  151D               	bsf	29,2	;volatile
  1477                           
  1478                           ;USART.c: 23: TXSTAbits.TXEN=1;
  1479  00E1  0023               	movlb	3	; select bank3
  1480  00E2  169E               	bsf	30,5	;volatile
  1481                           
  1482                           ;USART.c: 24: RCSTAbits.SPEN =1;
  1483  00E3  179D               	bsf	29,7	;volatile
  1484                           
  1485                           ;USART.c: 27: TXSTAbits.SYNC=0;
  1486  00E4  121E               	bcf	30,4	;volatile
  1487                           
  1488                           ;USART.c: 28: TXSTAbits.BRGH=1;
  1489  00E5  151E               	bsf	30,2	;volatile
  1490                           
  1491                           ;USART.c: 29: BAUDCONbits.BRG16=0;
  1492  00E6  119F               	bcf	31,3	;volatile
  1493                           
  1494                           ;USART.c: 30: SPBRG = 23;
  1495  00E7  3017               	movlw	23
  1496  00E8  009B               	movwf	27	;volatile
  1497  00E9  0008               	return
  1498  00EA                     __end_of_InitUSART:	
  1499                           ;USART.c: 32: return;
  1500                           
  1501                           
  1502                           	psect	intentry
  1503  0004                     __pintentry:	
  1504 ;; *************** function _ISR *****************
  1505 ;; Defined at:
  1506 ;;		line 102 in file "newmain.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1
  1520 ;;      Params:         0       0       0
  1521 ;;      Locals:         0       0       0
  1522 ;;      Temps:          1       0       0
  1523 ;;      Totals:         1       0       0
  1524 ;;Total ram usage:        1 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    1
  1527 ;; This function calls:
  1528 ;;		_TogglePIN6
  1529 ;; This function is called by:
  1530 ;;		Interrupt level 1
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534  0004                     _ISR:	
  1535                           
  1536                           ;incstack = 0
  1537  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1538                           
  1539                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1540  0005  3180               	pagesel	$
  1541  0006  0020               	movlb	0	; select bank0
  1542  0007  087F               	movf	127,w
  1543  0008  00F7               	movwf	??_ISR
  1544                           
  1545                           ;newmain.c: 104: if( (INTCONbits.INTF==1) && (INTCONbits.INTE==1) ){
  1546  0009  188B               	btfsc	11,1	;volatile
  1547  000A  1E0B               	btfss	11,4	;volatile
  1548  000B  281A               	goto	i1l1029
  1549                           
  1550                           ;newmain.c: 106: if((PORTAbits.AN2 == 1)){
  1551  000C  1D0C               	btfss	12,2	;volatile
  1552  000D  281A               	goto	i1l1029
  1553                           
  1554                           ;newmain.c: 108: zeroCount++;
  1555  000E  3001               	movlw	1
  1556  000F  07A4               	addwf	_zeroCount,f	;volatile
  1557  0010  3000               	movlw	0
  1558  0011  3DA5               	addwfc	_zeroCount+1,f	;volatile
  1559                           
  1560                           ;newmain.c: 109: if(zeroCount == 2){
  1561  0012  3002               	movlw	2
  1562  0013  0624               	xorwf	_zeroCount,w	;volatile
  1563  0014  0425               	iorwf	_zeroCount+1,w	;volatile
  1564  0015  1D03               	btfss	3,2
  1565  0016  281A               	goto	i1l1029
  1566                           
  1567                           ;newmain.c: 111: zeroCount = 0;
  1568  0017  01A4               	clrf	_zeroCount	;volatile
  1569  0018  01A5               	clrf	_zeroCount+1	;volatile
  1570                           
  1571                           ;newmain.c: 112: TogglePIN6();
  1572  0019  20F7               	fcall	_TogglePIN6
  1573  001A                     i1l1029:	
  1574                           
  1575                           ;newmain.c: 113: }
  1576                           ;newmain.c: 114: }
  1577                           ;newmain.c: 115: }
  1578                           ;newmain.c: 116: INTCONbits.INTF = 0;
  1579  001A  108B               	bcf	11,1	;volatile
  1580                           
  1581                           ;newmain.c: 118: return;
  1582  001B  0877               	movf	??_ISR,w
  1583  001C  0020               	movlb	0	; select bank0
  1584  001D  00FF               	movwf	127
  1585  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1586  001F  0009               	retfie
  1587  0020                     __end_of_ISR:	
  1588                           
  1589                           	psect	text8
  1590  00F7                     __ptext8:	
  1591 ;; *************** function _TogglePIN6 *****************
  1592 ;; Defined at:
  1593 ;;		line 83 in file "IO_Controls.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1
  1607 ;;      Params:         0       0       0
  1608 ;;      Locals:         0       0       0
  1609 ;;      Temps:          1       0       0
  1610 ;;      Totals:         1       0       0
  1611 ;;Total ram usage:        1 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_ISR
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _TogglePIN6
  1622  00F7                     _TogglePIN6:	
  1623                           
  1624                           ;IO_Controls.c: 85: portC.portCByte = PORTC;
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in _TogglePIN6: [wreg]
  1628  00F7  0020               	movlb	0	; select bank0
  1629  00F8  080E               	movf	14,w	;volatile
  1630  00F9  00F6               	movwf	??_TogglePIN6
  1631  00FA  0876               	movf	??_TogglePIN6,w
  1632  00FB  00F4               	movwf	_portC
  1633                           
  1634                           ;IO_Controls.c: 86: if(portC.bits.Pin6 == 1){
  1635  00FC  1E74               	btfss	_portC,4
  1636  00FD  2900               	goto	i1l171
  1637                           
  1638                           ;IO_Controls.c: 88: portC.bits.Pin6 = 0;
  1639  00FE  1274               	bcf	_portC,4
  1640                           
  1641                           ;IO_Controls.c: 89: }
  1642  00FF  2901               	goto	i1l961
  1643  0100                     i1l171:	
  1644                           
  1645                           ;IO_Controls.c: 90: else{
  1646                           ;IO_Controls.c: 91: portC.bits.Pin6 = 1;
  1647  0100  1674               	bsf	_portC,4
  1648  0101                     i1l961:	
  1649                           
  1650                           ;IO_Controls.c: 92: }
  1651                           ;IO_Controls.c: 93: PORTC=portC.portCByte;
  1652  0101  0874               	movf	_portC,w
  1653  0102  008E               	movwf	14	;volatile
  1654  0103  0008               	return
  1655  0104                     __end_of_TogglePIN6:	
  1656                           ;IO_Controls.c: 94: return;
  1657                           
  1658  007E                     btemp	set	126	;btemp
  1659  007E                     int$flags	set	126
  1660  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      2      14
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Timer1

Critical Paths under _ISR in COMMON

    _ISR->_TogglePIN6

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     124
                                              0 BANK0      2     2      0
                          _InitUSART
                          _Init_TMR1
                      _InitialiseADC
                    _InitialisePorts
                               _PIN6
                             _Timer1
 ---------------------------------------------------------------------------------
 (1) _Timer1                                               4     2      2       0
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PIN6                                                 2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitialisePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitialiseADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                         _TogglePIN6
 ---------------------------------------------------------------------------------
 (3) _TogglePIN6                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitUSART
   _Init_TMR1
   _InitialiseADC
   _InitialisePorts
   _PIN6
   _Timer1

 _ISR (ROOT)
   _TogglePIN6

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       E       6       17.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      1A       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Mar 19 21:51:55 2018

             __CFG_CP$OFF 0000                        l49 003A                       u325 008B  
                     _PS0 04A8                       _PS1 04A9                       _PS2 04AA  
            __CFG_CPD$OFF 0000                       _ISR 0004                       u397 00B1  
                     _PSA 04AB              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      ?_ISR 0076                      l1143 006A  
                    l1145 0048                      l1163 0066                      l1157 005C  
                    l1165 0072                      _ADIE 048E                      _ADFM 04F7  
                    _ADON 04E8                      _LATA 010C                      _LATC 010E  
                    _PIN6 00CE                      _TMR0 0015                      _TRMT 0CF1  
                    _TXIE 048C                      _TXIF 008C              __CFG_WRT$OFF 0000  
                    _main 0037                      _time 0020                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0020             __CFG_IESO$OFF 0000  
  __size_of_InitialiseADC 0016                     ??_ISR 0077                     ?_PIN6 0076  
                   ?_main 0076             __CFG_WDTE$OFF 0000                     _T1CON 0018  
                   i1l171 0100                     i1l961 0101                     _TMR1H 0017  
                   _TMR1L 0016                     _SPBRG 019B                     _PORTA 000C  
                   _PORTC 000E                     _TRISA 008C                     _TRISC 008E  
                   _TXREG 019A             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   _count 0072                     _portA 0075                     _portC 0074  
                   status 0003                     wtemp0 007E              __end_of_PIN6 00DC  
          __CFG_MCLRE$OFF 0000           __initialization 0021              __end_of_main 0081  
                  ??_PIN6 0078                    ??_main 007C            __CFG_PLLEN$OFF 0000  
           _InitialiseADC 00A3                    _ADRESH 009C                    _ADRESL 009B  
                  _ANSELA 018C                    _ANSELC 018E                    _T1GCON 0019  
                  _HFIOFR 04D4                    i1l1029 001A        __size_of_InitUSART 000E  
                  _INTCON 000B                    _FVRCON 0117                    _OSCCON 0099  
      __size_of_Init_TMR1 000D                    _TMR0IE 005D                    _TMR0IF 005A  
                  _TMR0CS 04AD                    _TRISA0 0460                    _Timer1 0081  
          __CFG_STVREN$ON 0000                _TogglePIN6 00F7            ?_InitialiseADC 0076  
 __end_of__initialization 0034            __pcstackCOMMON 0076  __size_of_InitialisePorts 0015  
       __end_of_InitUSART 00EA         __end_of_Init_TMR1 00F7                 PIN6@OnOff 0079  
              __pbssBANK0 0020                   ?_Timer1 0078                __pmaintext 0037  
              __pintentry 0004           ??_InitialiseADC 0078               ?_TogglePIN6 0076  
                 _TXCKSEL 08EA           __size_of_Timer1 0022                   _adcData 002A  
                 __ptext1 0081                   __ptext2 00CE                   __ptext3 00B9  
                 __ptext4 00A3                   __ptext5 00EA                   __ptext6 00DC  
                 __ptext8 00F7              __size_of_ISR 001C         ??_InitialisePorts 0078  
               _T1CONbits 0018      end_of_initialization 0034                _time_16bit 0028  
     __size_of_TogglePIN6 000D                 _RCSTAbits 019D                 _PORTAbits 000C  
        __CFG_FOSC$INTOSC 0000                 _TXSTAbits 019E            __end_of_Timer1 00A3  
             _BAUDCONbits 019F                 _InitUSART 00DC       start_initialization 0021  
               _Init_TMR1 00EA               __end_of_ISR 0020                  ??_Timer1 007A  
            ??_TogglePIN6 0076                ?_InitUSART 0076               __pbssCOMMON 0070  
               ___latbits 0000                ?_Init_TMR1 0076             __pcstackBANK0 002C  
      __end_of_TogglePIN6 0104           _InitialisePorts 00B9     __end_of_InitialiseADC 00B9  
               _sampleVal 0026                  _GO_nDONE 04E9                 _temp_time 0022  
              _ADCON0bits 009D                 _startFlag 0070                _ADCON1bits 009E  
               _zeroCount 0024               ??_InitUSART 0078               ??_Init_TMR1 0078  
          main@ADC_sample 002C   __end_of_InitialisePorts 00CE             __size_of_PIN6 000E  
           __size_of_main 004A                  int$flags 007E                _INTCONbits 000B  
                intlevel1 0000          ?_InitialisePorts 0076         __CFG_CLKOUTEN$OFF 0000  
              _OPTION_REG 0095  
