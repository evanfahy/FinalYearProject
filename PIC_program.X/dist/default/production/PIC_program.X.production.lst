

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Dec 11 20:03:41 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.44
    16                           ; Generated 14/09/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1823 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  010C                     	;# 
    92  010E                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011A                     	;# 
   103  011B                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  018C                     	;# 
   107  018E                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0194                     	;# 
   115  0195                     	;# 
   116  0196                     	;# 
   117  0199                     	;# 
   118  019A                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019C                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019F                     	;# 
   128  020C                     	;# 
   129  020E                     	;# 
   130  0211                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0213                     	;# 
   136  0214                     	;# 
   137  0214                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0217                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0391                     	;# 
   154  0392                     	;# 
   155  0393                     	;# 
   156  039A                     	;# 
   157  039C                     	;# 
   158  039D                     	;# 
   159  039E                     	;# 
   160  039F                     	;# 
   161  0FE4                     	;# 
   162  0FE5                     	;# 
   163  0FE6                     	;# 
   164  0FE7                     	;# 
   165  0FE8                     	;# 
   166  0FE9                     	;# 
   167  0FEA                     	;# 
   168  0FEB                     	;# 
   169  0FED                     	;# 
   170  0FEE                     	;# 
   171  0FEF                     	;# 
   172  000B                     _INTCON	set	11
   173  000E                     _PORTC	set	14
   174  000C                     _PORTA	set	12
   175  005F                     _GIE	set	95
   176  0099                     _OSCCON	set	153
   177  009B                     _ADRESL	set	155
   178  009C                     _ADRESH	set	156
   179  009E                     _ADCON1bits	set	158
   180  009D                     _ADCON0bits	set	157
   181  008E                     _TRISC	set	142
   182  008C                     _TRISA	set	140
   183  0095                     _OPTION_REG	set	149
   184  04D4                     _HFIOFR	set	1236
   185  04E9                     _GO_nDONE	set	1257
   186  04E8                     _ADON	set	1256
   187  048E                     _ADIE	set	1166
   188  04F7                     _ADFM	set	1271
   189  0117                     _FVRCON	set	279
   190  010E                     _LATC	set	270
   191  010C                     _LATA	set	268
   192  018E                     _ANSELC	set	398
   193  018C                     _ANSELA	set	396
   194                           
   195                           ; #config settings
   196  0000                     
   197                           	psect	cinit
   198  07FC                     start_initialization:	
   199  07FC                     __initialization:	
   200                           
   201                           ; Clear objects allocated to COMMON
   202  07FC  01FA               	clrf	__pbssCOMMON& (0+127)
   203  07FD  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   204  07FE                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  07FE                     __end_of__initialization:	
   208  07FE  0020               	movlb	0
   209  07FF  2FCC               	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMMON
   212  007A                     __pbssCOMMON:	
   213  007A                     _portC:	
   214  007A                     	ds	1
   215  007B                     _portA:	
   216  007B                     	ds	1
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:	
   220  0070                     ?_InitialisePorts:	
   221  0070                     ??_InitialisePorts:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_PIN6:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ??_PIN6:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?_PIN5:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ??_PIN5:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_InitialiseADC:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ??_InitialiseADC:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ?_ReadADC:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 2 bytes @ 0x0
   247                           
   248                           
   249                           ; 2 bytes @ 0x0
   250  0070                     	ds	1
   251  0071                     PIN6@OnOff:	
   252  0071                     PIN5@OnOff:	
   253                           ; 1 bytes @ 0x1
   254                           
   255                           
   256                           ; 1 bytes @ 0x1
   257  0071                     	ds	1
   258  0072                     ??_ReadADC:	
   259                           
   260                           ; 1 bytes @ 0x2
   261  0072                     	ds	2
   262  0074                     ReadADC@adcData:	
   263                           
   264                           ; 2 bytes @ 0x4
   265  0074                     	ds	2
   266  0076                     ??_main:	
   267                           
   268                           ; 1 bytes @ 0x6
   269  0076                     	ds	1
   270  0077                     main@chDelay:	
   271                           
   272                           ; 1 bytes @ 0x7
   273  0077                     	ds	1
   274  0078                     main@Vread:	
   275                           
   276                           ; 2 bytes @ 0x8
   277  0078                     	ds	2
   278                           
   279                           	psect	maintext
   280  07CC                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 18 in file "newmain.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  Vread           2    8[COMMON] unsigned short 
   291 ;;  chDelay         1    7[COMMON] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  2   75[None  ] int 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B1F/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1
   301 ;;      Params:         0       0       0
   302 ;;      Locals:         3       0       0
   303 ;;      Temps:          1       0       0
   304 ;;      Totals:         4       0       0
   305 ;;Total ram usage:        4 bytes
   306 ;; Hardware stack levels required when called:    1
   307 ;; This function calls:
   308 ;;		_InitialiseADC
   309 ;;		_InitialisePorts
   310 ;;		_PIN5
   311 ;;		_PIN6
   312 ;;		_ReadADC
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           
   319                           ;psect for function _main
   320  07CC                     _main:	
   321                           
   322                           ;newmain.c: 21: OSCCON = 0b01011000;
   323                           
   324                           ;incstack = 0
   325                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   326  07CC  3058               	movlw	88
   327  07CD  0021               	movlb	1	; select bank1
   328  07CE  0099               	movwf	25	;volatile
   329  07CF                     l76:	
   330                           ;newmain.c: 32: while(HFIOFR==0){
   331                           
   332  07CF  1E1A               	btfss	26,4	;volatile
   333  07D0  2FCF               	goto	l76
   334                           
   335                           ;newmain.c: 33: }
   336                           ;newmain.c: 36: INTCON = 0b00000000;
   337  07D1  018B               	clrf	11	;volatile
   338                           
   339                           ;newmain.c: 37: GIE = 0;
   340  07D2  138B               	bcf	11,7	;volatile
   341                           
   342                           ;newmain.c: 39: InitialisePorts();
   343  07D3  2797               	fcall	_InitialisePorts
   344                           
   345                           ;newmain.c: 40: InitialiseADC();
   346  07D4  2784               	fcall	_InitialiseADC
   347                           
   348                           ;newmain.c: 41: ADON=1;
   349  07D5  0021               	movlb	1	; select bank1
   350  07D6  141D               	bsf	29,0	;volatile
   351                           
   352                           ;newmain.c: 43: unsigned short Vread;
   353                           ;newmain.c: 44: char chDelay=500;
   354  07D7  30F4               	movlw	244
   355  07D8  00F6               	movwf	??_main
   356  07D9  0876               	movf	??_main,w
   357  07DA  00F7               	movwf	main@chDelay
   358  07DB                     l683:	
   359                           ;newmain.c: 46: while(1){
   360                           
   361                           
   362                           ;newmain.c: 48: if((PORTA & 0x10) != 0) {
   363  07DB  0020               	movlb	0	; select bank0
   364  07DC  1E0C               	btfss	12,4	;volatile
   365  07DD  2FDB               	goto	l683
   366                           
   367                           ;newmain.c: 50: Vread = ReadADC();
   368  07DE  27AC               	fcall	_ReadADC
   369  07DF  0871               	movf	?_ReadADC+1,w
   370  07E0  00F9               	movwf	main@Vread+1
   371  07E1  0870               	movf	?_ReadADC,w
   372  07E2  00F8               	movwf	main@Vread
   373                           
   374                           ;newmain.c: 52: if(Vread>1022){
   375  07E3  3003               	movlw	3
   376  07E4  0279               	subwf	main@Vread+1,w
   377  07E5  30FF               	movlw	255
   378  07E6  1903               	skipnz
   379  07E7  0278               	subwf	main@Vread,w
   380  07E8  1C03               	skipc
   381  07E9  2FEE               	goto	l691
   382                           
   383                           ;newmain.c: 54: PIN5(0);
   384  07EA  3000               	movlw	0
   385  07EB  2768               	fcall	_PIN5
   386                           
   387                           ;newmain.c: 55: PIN6(1);
   388  07EC  3001               	movlw	1
   389  07ED  2FF8               	goto	L1
   390  07EE                     l691:	
   391                           ;newmain.c: 57: }
   392                           
   393                           
   394                           ;newmain.c: 58: else if (Vread<1){
   395  07EE  0878               	movf	main@Vread,w
   396  07EF  0479               	iorwf	main@Vread+1,w
   397  07F0  1D03               	btfss	3,2
   398  07F1  2FF7               	goto	l695
   399                           
   400                           ;newmain.c: 60: PIN6(0);
   401  07F2  3000               	movlw	0
   402  07F3  2776               	fcall	_PIN6
   403                           
   404                           ;newmain.c: 61: PIN5(1);
   405  07F4  3001               	movlw	1
   406  07F5  2768               	fcall	_PIN5
   407                           
   408                           ;newmain.c: 62: }
   409  07F6  2FF9               	goto	l82
   410  07F7                     l695:	
   411                           
   412                           ;newmain.c: 63: else
   413                           ;newmain.c: 64: PIN6(0);
   414  07F7  3000               	movlw	0
   415  07F8                     L1:	
   416  07F8  2776               	fcall	_PIN6
   417  07F9                     l82:	
   418                           
   419                           ;newmain.c: 65: PIN5(0);
   420  07F9  3000               	movlw	0
   421  07FA  2768               	fcall	_PIN5
   422  07FB  2FDB               	goto	l683
   423  07FC                     __end_of_main:	
   424                           ;newmain.c: 92: }
   425                           ;newmain.c: 93: }
   426                           ;newmain.c: 94: return (0);
   427                           ;	Return value of _main is never used
   428                           
   429                           
   430                           	psect	text1
   431  07AC                     __ptext1:	
   432 ;; *************** function _ReadADC *****************
   433 ;; Defined at:
   434 ;;		line 31 in file "ADC.h"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  adcData         2    4[COMMON] unsigned short 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  2    0[COMMON] unsigned short 
   441 ;; Registers used:
   442 ;;		wreg, status,2
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1
   448 ;;      Params:         2       0       0
   449 ;;      Locals:         2       0       0
   450 ;;      Temps:          2       0       0
   451 ;;      Totals:         6       0       0
   452 ;;Total ram usage:        6 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _ReadADC
   463  07AC                     _ReadADC:	
   464                           
   465                           ;ADC.h: 33: unsigned short adcData = 0;
   466                           
   467                           ;incstack = 0
   468                           ; Regs used in _ReadADC: [wreg+status,2]
   469  07AC  01F4               	clrf	ReadADC@adcData
   470  07AD  01F5               	clrf	ReadADC@adcData+1
   471                           
   472                           ;ADC.h: 35: GO_nDONE = 1;
   473  07AE  0021               	movlb	1	; select bank1
   474  07AF  149D               	bsf	29,1	;volatile
   475  07B0                     l68:	
   476                           ;ADC.h: 36: while (GO_nDONE){
   477                           
   478  07B0  189D               	btfsc	29,1	;volatile
   479  07B1  2FB0               	goto	l68
   480                           
   481                           ;ADC.h: 37: }
   482                           ;ADC.h: 40: adcData = (ADRESH & 0x03);
   483  07B2  081C               	movf	28,w	;volatile
   484  07B3  3903               	andlw	3
   485  07B4  00F2               	movwf	??_ReadADC
   486  07B5  01F3               	clrf	??_ReadADC+1
   487  07B6  0872               	movf	??_ReadADC,w
   488  07B7  00F4               	movwf	ReadADC@adcData
   489  07B8  0873               	movf	??_ReadADC+1,w
   490  07B9  00F5               	movwf	ReadADC@adcData+1
   491                           
   492                           ;ADC.h: 41: adcData<<=8;
   493  07BA  3008               	movlw	8
   494  07BB                     u85:	
   495  07BB  35F4               	lslf	ReadADC@adcData,f
   496  07BC  0DF5               	rlf	ReadADC@adcData+1,f
   497  07BD  0B89               	decfsz	9,f
   498  07BE  2FBB               	goto	u85
   499                           
   500                           ;ADC.h: 42: adcData+=ADRESL;
   501  07BF  081B               	movf	27,w	;volatile
   502  07C0  00F2               	movwf	??_ReadADC
   503  07C1  01F3               	clrf	??_ReadADC+1
   504  07C2  0872               	movf	??_ReadADC,w
   505  07C3  07F4               	addwf	ReadADC@adcData,f
   506  07C4  0873               	movf	??_ReadADC+1,w
   507  07C5  3DF5               	addwfc	ReadADC@adcData+1,f
   508                           
   509                           ;ADC.h: 44: GO_nDONE = 0;
   510  07C6  109D               	bcf	29,1	;volatile
   511                           
   512                           ;ADC.h: 46: return adcData;
   513  07C7  0875               	movf	ReadADC@adcData+1,w
   514  07C8  00F1               	movwf	?_ReadADC+1
   515  07C9  0874               	movf	ReadADC@adcData,w
   516  07CA  00F0               	movwf	?_ReadADC
   517  07CB  0008               	return
   518  07CC                     __end_of_ReadADC:	
   519                           
   520                           	psect	text2
   521  0776                     __ptext2:	
   522 ;; *************** function _PIN6 *****************
   523 ;; Defined at:
   524 ;;		line 110 in file "IO_Controls.h"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  OnOff           1    wreg     unsigned char 
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  OnOff           1    1[COMMON] unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1
   538 ;;      Params:         0       0       0
   539 ;;      Locals:         1       0       0
   540 ;;      Temps:          1       0       0
   541 ;;      Totals:         2       0       0
   542 ;;Total ram usage:        2 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function _PIN6
   553  0776                     _PIN6:	
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _PIN6: [wreg+status,2]
   557                           ;PIN6@OnOff stored from wreg
   558  0776  00F1               	movwf	PIN6@OnOff
   559                           
   560                           ;IO_Controls.h: 112: portC.portCByte = PORTC;
   561  0777  0020               	movlb	0	; select bank0
   562  0778  080E               	movf	14,w	;volatile
   563  0779  00F0               	movwf	??_PIN6
   564  077A  0870               	movf	??_PIN6,w
   565  077B  00FA               	movwf	_portC
   566                           
   567                           ;IO_Controls.h: 113: portC.bits.Pin6 = OnOff;
   568  077C  0871               	movf	PIN6@OnOff,w
   569  077D  3901               	andlw	1
   570  077E  127A               	bcf	_portC,4
   571  077F  1D03               	skipz
   572  0780  167A               	bsf	_portC,4
   573                           
   574                           ;IO_Controls.h: 114: PORTC=portC.portCByte;
   575  0781  087A               	movf	_portC,w
   576  0782  008E               	movwf	14	;volatile
   577  0783  0008               	return
   578  0784                     __end_of_PIN6:	
   579                           ;IO_Controls.h: 115: return;
   580                           
   581                           
   582                           	psect	text3
   583  0768                     __ptext3:	
   584 ;; *************** function _PIN5 *****************
   585 ;; Defined at:
   586 ;;		line 118 in file "IO_Controls.h"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  OnOff           1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  OnOff           1    1[COMMON] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1
   600 ;;      Params:         0       0       0
   601 ;;      Locals:         1       0       0
   602 ;;      Temps:          1       0       0
   603 ;;      Totals:         2       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _PIN5
   615  0768                     _PIN5:	
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _PIN5: [wreg+status,2]
   619                           ;PIN5@OnOff stored from wreg
   620  0768  00F1               	movwf	PIN5@OnOff
   621                           
   622                           ;IO_Controls.h: 120: portC.portCByte = PORTC;
   623  0769  0020               	movlb	0	; select bank0
   624  076A  080E               	movf	14,w	;volatile
   625  076B  00F0               	movwf	??_PIN5
   626  076C  0870               	movf	??_PIN5,w
   627  076D  00FA               	movwf	_portC
   628                           
   629                           ;IO_Controls.h: 121: portC.bits.Pin5 = OnOff;
   630  076E  0871               	movf	PIN5@OnOff,w
   631  076F  3901               	andlw	1
   632  0770  12FA               	bcf	_portC,5
   633  0771  1D03               	skipz
   634  0772  16FA               	bsf	_portC,5
   635                           
   636                           ;IO_Controls.h: 122: PORTC=portC.portCByte;
   637  0773  087A               	movf	_portC,w
   638  0774  008E               	movwf	14	;volatile
   639  0775  0008               	return
   640  0776                     __end_of_PIN5:	
   641                           ;IO_Controls.h: 123: return;
   642                           
   643                           
   644                           	psect	text4
   645  0797                     __ptext4:	
   646 ;; *************** function _InitialisePorts *****************
   647 ;; Defined at:
   648 ;;		line 51 in file "IO_Controls.h"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1
   662 ;;      Params:         0       0       0
   663 ;;      Locals:         0       0       0
   664 ;;      Temps:          0       0       0
   665 ;;      Totals:         0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _InitialisePorts
   677  0797                     _InitialisePorts:	
   678                           
   679                           ;IO_Controls.h: 53: OPTION_REG = 0b10000000;
   680                           
   681                           ;incstack = 0
   682                           ; Regs used in _InitialisePorts: [wreg+status,2]
   683  0797  3080               	movlw	128
   684  0798  0021               	movlb	1	; select bank1
   685  0799  0095               	movwf	21	;volatile
   686                           
   687                           ;IO_Controls.h: 70: portA.portAByte = 0;
   688  079A  01FB               	clrf	_portA
   689                           
   690                           ;IO_Controls.h: 71: LATA = 0;
   691  079B  0022               	movlb	2	; select bank2
   692  079C  018C               	clrf	12	;volatile
   693                           
   694                           ;IO_Controls.h: 72: TRISA = 0b00011000;
   695  079D  3018               	movlw	24
   696  079E  0021               	movlb	1	; select bank1
   697  079F  008C               	movwf	12	;volatile
   698                           
   699                           ;IO_Controls.h: 74: ANSELA = 0b00000000;
   700  07A0  0023               	movlb	3	; select bank3
   701  07A1  018C               	clrf	12	;volatile
   702                           
   703                           ;IO_Controls.h: 88: portC.portCByte = 0;
   704  07A2  01FA               	clrf	_portC
   705                           
   706                           ;IO_Controls.h: 89: LATC = 0;
   707  07A3  0022               	movlb	2	; select bank2
   708  07A4  018E               	clrf	14	;volatile
   709                           
   710                           ;IO_Controls.h: 90: TRISC = 0b00001000;
   711  07A5  3008               	movlw	8
   712  07A6  0021               	movlb	1	; select bank1
   713  07A7  008E               	movwf	14	;volatile
   714                           
   715                           ;IO_Controls.h: 92: ANSELC = 0b00001000;
   716  07A8  3008               	movlw	8
   717  07A9  0023               	movlb	3	; select bank3
   718  07AA  008E               	movwf	14	;volatile
   719  07AB  0008               	return
   720  07AC                     __end_of_InitialisePorts:	
   721                           ;IO_Controls.h: 97: return;
   722                           
   723                           
   724                           	psect	text5
   725  0784                     __ptext5:	
   726 ;; *************** function _InitialiseADC *****************
   727 ;; Defined at:
   728 ;;		line 14 in file "ADC.h"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, status,2, status,0
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1
   742 ;;      Params:         0       0       0
   743 ;;      Locals:         0       0       0
   744 ;;      Temps:          0       0       0
   745 ;;      Totals:         0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _InitialiseADC
   757  0784                     _InitialiseADC:	
   758                           
   759                           ;ADC.h: 16: ADCON0bits.CHS = 0b0111;
   760                           
   761                           ;incstack = 0
   762                           ; Regs used in _InitialiseADC: [wreg+status,2+status,0]
   763  0784  0021               	movlb	1	; select bank1
   764  0785  081D               	movf	29,w	;volatile
   765  0786  3983               	andlw	-125
   766  0787  381C               	iorlw	28
   767  0788  009D               	movwf	29	;volatile
   768                           
   769                           ;ADC.h: 17: ADFM = 1;
   770  0789  179E               	bsf	30,7	;volatile
   771                           
   772                           ;ADC.h: 18: ADCON1bits.ADCS = 0b000;
   773  078A  308F               	movlw	-113
   774  078B  059E               	andwf	30,f	;volatile
   775                           
   776                           ;ADC.h: 20: ADCON1bits.ADPREF = 0b011;
   777  078C  3003               	movlw	3
   778  078D  049E               	iorwf	30,f	;volatile
   779                           
   780                           ;ADC.h: 22: FVRCON = 0b11000010;
   781  078E  30C2               	movlw	194
   782  078F  0022               	movlb	2	; select bank2
   783  0790  0097               	movwf	23	;volatile
   784                           
   785                           ;ADC.h: 24: _delay((unsigned long)((10)*(1000000/4000000.0)));
   786  0791  3200               	nop2	;2 cycle nop
   787                           
   788                           ;ADC.h: 25: ADIE=0;
   789  0792  0021               	movlb	1	; select bank1
   790  0793  1311               	bcf	17,6	;volatile
   791                           
   792                           ;ADC.h: 26: ADON=0;
   793  0794  101D               	bcf	29,0	;volatile
   794                           
   795                           ;ADC.h: 27: GO_nDONE=0;
   796  0795  109D               	bcf	29,1	;volatile
   797  0796  0008               	return
   798  0797                     __end_of_InitialiseADC:	
   799                           ;ADC.h: 28: return;
   800                           
   801  007E                     btemp	set	126	;btemp
   802  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ReadADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     102
                                              6 COMMON     4     4      0
                      _InitialiseADC
                    _InitialisePorts
                               _PIN5
                               _PIN6
                            _ReadADC
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2      26
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _PIN6                                                 2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PIN5                                                 2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitialisePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitialiseADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitialiseADC
   _InitialisePorts
   _PIN5
   _PIN6
   _ReadADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Dec 11 20:03:41 2017

             __CFG_CP$OFF 0000                        l82 07F9                        l68 07B0  
                      l76 07CF                        u85 07BB                       l691 07EE  
                     l683 07DB                       l695 07F7                       _GIE 005F  
            __CFG_CPD$OFF 0000               main@chDelay 0077              __CFG_BORV$LO 0000  
                     wreg 0009              __CFG_LVP$OFF 0000                      _ADIE 048E  
                    _ADFM 04F7                      _ADON 04E8                      _LATA 010C  
                    _LATC 010E                      _PIN5 0768                      _PIN6 0776  
            __CFG_WRT$OFF 0000                      _main 07CC                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0001             __CFG_IESO$OFF 0000  
  __size_of_InitialiseADC 0013           __end_of_ReadADC 07CC                     ?_PIN5 0070  
                   ?_PIN6 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PORTA 000C                     _PORTC 000E                     _TRISA 008C  
                   _TRISC 008E             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   _portA 007B                     _portC 007A                     status 0003  
                   wtemp0 007E              __end_of_PIN5 0776              __end_of_PIN6 0784  
          __CFG_MCLRE$OFF 0000           __initialization 07FC              __end_of_main 07FC  
          ReadADC@adcData 0074                    ??_PIN5 0070                    ??_PIN6 0070  
                  ??_main 0076            __CFG_PLLEN$OFF 0000             _InitialiseADC 0784  
                  _ADRESH 009C                    _ADRESL 009B                    _ANSELA 018C  
                  _ANSELC 018E                    _HFIOFR 04D4                    _INTCON 000B  
                  _FVRCON 0117                    _OSCCON 0099                 ??_ReadADC 0072  
          __CFG_STVREN$ON 0000            ?_InitialiseADC 0070   __end_of__initialization 07FE  
          __pcstackCOMMON 0070  __size_of_InitialisePorts 0015                 PIN5@OnOff 0071  
               PIN6@OnOff 0071                __pmaintext 07CC           ??_InitialiseADC 0070  
                 _ReadADC 07AC                   __ptext1 07AC                   __ptext2 0776  
                 __ptext3 0768                   __ptext4 0797                   __ptext5 0784  
       ??_InitialisePorts 0070      end_of_initialization 07FE          __CFG_FOSC$INTOSC 0000  
     start_initialization 07FC               __pbssCOMMON 007A                 ___latbits 0000  
                ?_ReadADC 0070           _InitialisePorts 0797     __end_of_InitialiseADC 0797  
                _GO_nDONE 04E9                _ADCON0bits 009D                _ADCON1bits 009E  
               main@Vread 0078   __end_of_InitialisePorts 07AC          __size_of_ReadADC 0020  
           __size_of_PIN5 000E             __size_of_PIN6 000E             __size_of_main 0030  
        ?_InitialisePorts 0070         __CFG_CLKOUTEN$OFF 0000                _OPTION_REG 0095  
