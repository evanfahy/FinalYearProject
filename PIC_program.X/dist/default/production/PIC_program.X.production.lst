

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Apr 06 10:19:17 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.44
    37                           ; Generated 14/09/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1823 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000E                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  018C                     	;# 
   128  018E                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020E                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0391                     	;# 
   175  0392                     	;# 
   176  0393                     	;# 
   177  039A                     	;# 
   178  039C                     	;# 
   179  039D                     	;# 
   180  039E                     	;# 
   181  039F                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000E                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  008C                     	;# 
   221  008E                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  010C                     	;# 
   236  010E                     	;# 
   237  0111                     	;# 
   238  0112                     	;# 
   239  0113                     	;# 
   240  0114                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011D                     	;# 
   249  011D                     	;# 
   250  018C                     	;# 
   251  018E                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  020E                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0291                     	;# 
   290  0291                     	;# 
   291  0292                     	;# 
   292  0293                     	;# 
   293  0294                     	;# 
   294  0295                     	;# 
   295  0295                     	;# 
   296  0296                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  0393                     	;# 
   300  039A                     	;# 
   301  039C                     	;# 
   302  039D                     	;# 
   303  039E                     	;# 
   304  039F                     	;# 
   305  0FE4                     	;# 
   306  0FE5                     	;# 
   307  0FE6                     	;# 
   308  0FE7                     	;# 
   309  0FE8                     	;# 
   310  0FE9                     	;# 
   311  0FEA                     	;# 
   312  0FEB                     	;# 
   313  0FED                     	;# 
   314  0FEE                     	;# 
   315  0FEF                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000E                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  010C                     	;# 
   359  010E                     	;# 
   360  0111                     	;# 
   361  0112                     	;# 
   362  0113                     	;# 
   363  0114                     	;# 
   364  0115                     	;# 
   365  0116                     	;# 
   366  0117                     	;# 
   367  0118                     	;# 
   368  0119                     	;# 
   369  011A                     	;# 
   370  011B                     	;# 
   371  011D                     	;# 
   372  011D                     	;# 
   373  018C                     	;# 
   374  018E                     	;# 
   375  0191                     	;# 
   376  0191                     	;# 
   377  0192                     	;# 
   378  0193                     	;# 
   379  0193                     	;# 
   380  0193                     	;# 
   381  0194                     	;# 
   382  0195                     	;# 
   383  0196                     	;# 
   384  0199                     	;# 
   385  019A                     	;# 
   386  019B                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019C                     	;# 
   391  019C                     	;# 
   392  019D                     	;# 
   393  019E                     	;# 
   394  019F                     	;# 
   395  020C                     	;# 
   396  020E                     	;# 
   397  0211                     	;# 
   398  0211                     	;# 
   399  0212                     	;# 
   400  0212                     	;# 
   401  0213                     	;# 
   402  0213                     	;# 
   403  0214                     	;# 
   404  0214                     	;# 
   405  0215                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0216                     	;# 
   409  0216                     	;# 
   410  0217                     	;# 
   411  0217                     	;# 
   412  0291                     	;# 
   413  0291                     	;# 
   414  0292                     	;# 
   415  0293                     	;# 
   416  0294                     	;# 
   417  0295                     	;# 
   418  0295                     	;# 
   419  0296                     	;# 
   420  0391                     	;# 
   421  0392                     	;# 
   422  0393                     	;# 
   423  039A                     	;# 
   424  039C                     	;# 
   425  039D                     	;# 
   426  039E                     	;# 
   427  039F                     	;# 
   428  0FE4                     	;# 
   429  0FE5                     	;# 
   430  0FE6                     	;# 
   431  0FE7                     	;# 
   432  0FE8                     	;# 
   433  0FE9                     	;# 
   434  0FEA                     	;# 
   435  0FEB                     	;# 
   436  0FED                     	;# 
   437  0FEE                     	;# 
   438  0FEF                     	;# 
   439  0000                     	;# 
   440  0001                     	;# 
   441  0002                     	;# 
   442  0003                     	;# 
   443  0004                     	;# 
   444  0005                     	;# 
   445  0006                     	;# 
   446  0007                     	;# 
   447  0008                     	;# 
   448  0009                     	;# 
   449  000A                     	;# 
   450  000B                     	;# 
   451  000C                     	;# 
   452  000E                     	;# 
   453  0011                     	;# 
   454  0012                     	;# 
   455  0015                     	;# 
   456  0016                     	;# 
   457  0016                     	;# 
   458  0017                     	;# 
   459  0018                     	;# 
   460  0019                     	;# 
   461  001A                     	;# 
   462  001B                     	;# 
   463  001C                     	;# 
   464  001E                     	;# 
   465  001F                     	;# 
   466  008C                     	;# 
   467  008E                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0095                     	;# 
   471  0096                     	;# 
   472  0097                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009A                     	;# 
   476  009B                     	;# 
   477  009B                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009E                     	;# 
   481  010C                     	;# 
   482  010E                     	;# 
   483  0111                     	;# 
   484  0112                     	;# 
   485  0113                     	;# 
   486  0114                     	;# 
   487  0115                     	;# 
   488  0116                     	;# 
   489  0117                     	;# 
   490  0118                     	;# 
   491  0119                     	;# 
   492  011A                     	;# 
   493  011B                     	;# 
   494  011D                     	;# 
   495  011D                     	;# 
   496  018C                     	;# 
   497  018E                     	;# 
   498  0191                     	;# 
   499  0191                     	;# 
   500  0192                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0193                     	;# 
   504  0194                     	;# 
   505  0195                     	;# 
   506  0196                     	;# 
   507  0199                     	;# 
   508  019A                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019D                     	;# 
   516  019E                     	;# 
   517  019F                     	;# 
   518  020C                     	;# 
   519  020E                     	;# 
   520  0211                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0213                     	;# 
   526  0214                     	;# 
   527  0214                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0216                     	;# 
   532  0216                     	;# 
   533  0217                     	;# 
   534  0217                     	;# 
   535  0291                     	;# 
   536  0291                     	;# 
   537  0292                     	;# 
   538  0293                     	;# 
   539  0294                     	;# 
   540  0295                     	;# 
   541  0295                     	;# 
   542  0296                     	;# 
   543  0391                     	;# 
   544  0392                     	;# 
   545  0393                     	;# 
   546  039A                     	;# 
   547  039C                     	;# 
   548  039D                     	;# 
   549  039E                     	;# 
   550  039F                     	;# 
   551  0FE4                     	;# 
   552  0FE5                     	;# 
   553  0FE6                     	;# 
   554  0FE7                     	;# 
   555  0FE8                     	;# 
   556  0FE9                     	;# 
   557  0FEA                     	;# 
   558  0FEB                     	;# 
   559  0FED                     	;# 
   560  0FEE                     	;# 
   561  0FEF                     	;# 
   562  0000                     	;# 
   563  0001                     	;# 
   564  0002                     	;# 
   565  0003                     	;# 
   566  0004                     	;# 
   567  0005                     	;# 
   568  0006                     	;# 
   569  0007                     	;# 
   570  0008                     	;# 
   571  0009                     	;# 
   572  000A                     	;# 
   573  000B                     	;# 
   574  000C                     	;# 
   575  000E                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0015                     	;# 
   579  0016                     	;# 
   580  0016                     	;# 
   581  0017                     	;# 
   582  0018                     	;# 
   583  0019                     	;# 
   584  001A                     	;# 
   585  001B                     	;# 
   586  001C                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  008C                     	;# 
   590  008E                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0097                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009B                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009E                     	;# 
   604  010C                     	;# 
   605  010E                     	;# 
   606  0111                     	;# 
   607  0112                     	;# 
   608  0113                     	;# 
   609  0114                     	;# 
   610  0115                     	;# 
   611  0116                     	;# 
   612  0117                     	;# 
   613  0118                     	;# 
   614  0119                     	;# 
   615  011A                     	;# 
   616  011B                     	;# 
   617  011D                     	;# 
   618  011D                     	;# 
   619  018C                     	;# 
   620  018E                     	;# 
   621  0191                     	;# 
   622  0191                     	;# 
   623  0192                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0193                     	;# 
   627  0194                     	;# 
   628  0195                     	;# 
   629  0196                     	;# 
   630  0199                     	;# 
   631  019A                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019C                     	;# 
   638  019D                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  020C                     	;# 
   642  020E                     	;# 
   643  0211                     	;# 
   644  0211                     	;# 
   645  0212                     	;# 
   646  0212                     	;# 
   647  0213                     	;# 
   648  0213                     	;# 
   649  0214                     	;# 
   650  0214                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0215                     	;# 
   654  0216                     	;# 
   655  0216                     	;# 
   656  0217                     	;# 
   657  0217                     	;# 
   658  0291                     	;# 
   659  0291                     	;# 
   660  0292                     	;# 
   661  0293                     	;# 
   662  0294                     	;# 
   663  0295                     	;# 
   664  0295                     	;# 
   665  0296                     	;# 
   666  0391                     	;# 
   667  0392                     	;# 
   668  0393                     	;# 
   669  039A                     	;# 
   670  039C                     	;# 
   671  039D                     	;# 
   672  039E                     	;# 
   673  039F                     	;# 
   674  0FE4                     	;# 
   675  0FE5                     	;# 
   676  0FE6                     	;# 
   677  0FE7                     	;# 
   678  0FE8                     	;# 
   679  0FE9                     	;# 
   680  0FEA                     	;# 
   681  0FEB                     	;# 
   682  0FED                     	;# 
   683  0FEE                     	;# 
   684  0FEF                     	;# 
   685                           
   686                           	psect	idataBANK0
   687  037B                     __pidataBANK0:	
   688                           
   689                           ;initializer for _posFlag
   690  037B  3401               	retlw	1
   691  037C  3400               	retlw	0
   692                           
   693                           	psect	stringtext1
   694  02FD                     __pstringtext1:	
   695  02FD                     _dpowers:	
   696  02FD  3401               	retlw	1
   697  02FE  3400               	retlw	0
   698  02FF  340A               	retlw	10
   699  0300  3400               	retlw	0
   700  0301  3464               	retlw	100
   701  0302  3400               	retlw	0
   702  0303  34E8               	retlw	232
   703  0304  3403               	retlw	3
   704  0305  3410               	retlw	16
   705  0306  3427               	retlw	39
   706  0307                     __end_of_dpowers:	
   707  0016                     _TMR1L	set	22
   708  0017                     _TMR1H	set	23
   709  0019                     _T1GCON	set	25
   710  0018                     _T1CON	set	24
   711  000E                     _PORTC	set	14
   712  000C                     _PORTA	set	12
   713  0018                     _T1CONbits	set	24
   714  000C                     _PORTAbits	set	12
   715  0011                     _PIR1bits	set	17
   716  000B                     _INTCONbits	set	11
   717  000B                     _INTCON	set	11
   718  008C                     _TXIF	set	140
   719  008D                     _RCIF	set	141
   720  008E                     _TRISC	set	142
   721  008C                     _TRISA	set	140
   722  0095                     _OPTION_REG	set	149
   723  008C                     _TRISAbits	set	140
   724  009B                     _ADRESL	set	155
   725  009C                     _ADRESH	set	156
   726  009E                     _ADCON1bits	set	158
   727  009D                     _ADCON0bits	set	157
   728  0091                     _PIE1bits	set	145
   729  0099                     _OSCCON	set	153
   730  04E9                     _GO_nDONE	set	1257
   731  048E                     _ADIE	set	1166
   732  04F7                     _ADFM	set	1271
   733  04E8                     _ADON	set	1256
   734  04D4                     _HFIOFR	set	1236
   735  010E                     _LATC	set	270
   736  010C                     _LATA	set	268
   737  011D                     _APFCONbits	set	285
   738  0117                     _FVRCON	set	279
   739  018E                     _ANSELC	set	398
   740  018C                     _ANSELA	set	396
   741  018C                     _ANSELAbits	set	396
   742  019B                     _SPBRG	set	411
   743  019F                     _BAUDCONbits	set	415
   744  019E                     _TXSTAbits	set	414
   745  019A                     _TXREG	set	410
   746  0199                     _RCREG	set	409
   747  019D                     _RCSTAbits	set	413
   748  0CF1                     _TRMT	set	3313
   749  0391                     _IOCAPbits	set	913
   750  0393                     _IOCAFbits	set	915
   751  0307                     STR_1:	
   752  0307  3453               	retlw	83	;'S'
   753  0308  3474               	retlw	116	;'t'
   754  0309  3461               	retlw	97	;'a'
   755  030A  3472               	retlw	114	;'r'
   756  030B  3474               	retlw	116	;'t'
   757  030C  342E               	retlw	46	;'.'
   758  030D  342E               	retlw	46	;'.'
   759  030E  342E               	retlw	46	;'.'
   760  030F  3400               	retlw	0
   761                           
   762                           	psect	stringtext2
   763  0377                     __pstringtext2:	
   764  0377                     STR_2:	
   765  0377  3425               	retlw	37	;'%'
   766  0378  3464               	retlw	100	;'d'
   767  0379  3420               	retlw	32	;' '
   768  037A  3400               	retlw	0
   769                           
   770                           	psect	stringtext3
   771  0000                     __pstringtext3:	
   772                           
   773                           ; #config settings
   774  0000                     
   775                           	psect	cinit
   776  0044                     start_initialization:	
   777  0044                     __initialization:	
   778                           
   779                           ; Initialize objects allocated to BANK0
   780  0044  237B               	fcall	__pidataBANK0	;fetch initializer
   781  0045  00DB               	movwf	__pdataBANK0& (0+127)
   782  0046  237C               	fcall	__pidataBANK0+1	;fetch initializer
   783  0047  00DC               	movwf	(__pdataBANK0+1)& (0+127)
   784                           
   785                           ; Clear objects allocated to BANK0
   786  0048  3044               	movlw	low __pbssBANK0
   787  0049  0084               	movwf	4
   788  004A  3000               	movlw	high __pbssBANK0
   789  004B  0085               	movwf	5
   790  004C  3017               	movlw	23
   791  004D  236B               	fcall	clear_ram0
   792  004E                     end_of_initialization:	
   793                           ;End of C runtime variable initialization code
   794                           
   795  004E                     __end_of__initialization:	
   796  004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   797  004F  0020               	movlb	0
   798  0050  2A87               	ljmp	_main	;jump to C main() function
   799                           
   800                           	psect	bssBANK0
   801  0044                     __pbssBANK0:	
   802  0044                     _time:	
   803  0044                     	ds	2
   804  0046                     _temp_time:	
   805  0046                     	ds	2
   806  0048                     _printCount:	
   807  0048                     	ds	2
   808  004A                     _zeroCount:	
   809  004A                     	ds	2
   810  004C                     _negFlag:	
   811  004C                     	ds	2
   812  004E                     _startFlag:	
   813  004E                     	ds	2
   814  0050                     _count:	
   815  0050                     	ds	2
   816  0052                     _sampleVal:	
   817  0052                     	ds	2
   818  0054                     _time_16bit:	
   819  0054                     	ds	2
   820  0056                     _adcData:	
   821  0056                     	ds	2
   822  0058                     _mydata:	
   823  0058                     	ds	1
   824  0059                     _portC:	
   825  0059                     	ds	1
   826  005A                     _portA:	
   827  005A                     	ds	1
   828                           
   829                           	psect	dataBANK0
   830  005B                     __pdataBANK0:	
   831  005B                     _posFlag:	
   832  005B                     	ds	2
   833                           
   834                           	psect	clrtext
   835  036B                     clear_ram0:	
   836                           ;	Called with FSR0 containing the base address, and
   837                           ;	WREG with the size to clear
   838                           
   839  036B  0064               	clrwdt	;clear the watchdog before getting into this loop
   840  036C                     clrloop0:	
   841  036C  0180               	clrf	0	;clear RAM location pointed to by FSR
   842  036D  3101               	addfsr 0,1
   843  036E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   844  036F  2B6C               	goto	clrloop0	;have we reached the end yet?
   845  0370  3400               	retlw	0	;all done for this memory range, return
   846                           
   847                           	psect	cstackBANK1
   848  00A0                     __pcstackBANK1:	
   849  00A0                     printf@ap:	
   850                           
   851                           ; 1 bytes @ 0x0
   852  00A0                     	ds	1
   853  00A1                     printf@flag:	
   854                           
   855                           ; 1 bytes @ 0x1
   856  00A1                     	ds	1
   857  00A2                     printf@prec:	
   858                           
   859                           ; 1 bytes @ 0x2
   860  00A2                     	ds	1
   861  00A3                     printf@val:	
   862                           
   863                           ; 2 bytes @ 0x3
   864  00A3                     	ds	2
   865  00A5                     printf@c:	
   866                           
   867                           ; 1 bytes @ 0x5
   868  00A5                     	ds	1
   869                           
   870                           	psect	cstackCOMMON
   871  0070                     __pcstackCOMMON:	
   872  0070                     ?_InitialisePorts:	
   873  0070                     ?_InitUSART:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_Init_TMR1:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_InitialiseADC:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_PIN6:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_PIN5:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ??_PIN5:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_getch:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ??_getch:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_ISR:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_putch:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?i1_putch:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ??i1_putch:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?i1_PIN6:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ??i1_PIN6:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_Timer1:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_main:	
   919                           ; 2 bytes @ 0x0
   920                           
   921  0070                     ?i1___lwdiv:	
   922                           ; 2 bytes @ 0x0
   923                           
   924  0070                     i1putch@c:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  0070                     i1___lwdiv@divisor:	
   928                           ; 1 bytes @ 0x0
   929                           
   930                           
   931                           ; 2 bytes @ 0x0
   932  0070                     	ds	1
   933  0071                     PIN5@OnOff:	
   934  0071                     i1PIN6@OnOff:	
   935                           ; 1 bytes @ 0x1
   936                           
   937                           
   938                           ; 1 bytes @ 0x1
   939  0071                     	ds	1
   940  0072                     ??_Timer1:	
   941  0072                     i1___lwdiv@dividend:	
   942                           ; 1 bytes @ 0x2
   943                           
   944                           
   945                           ; 2 bytes @ 0x2
   946  0072                     	ds	2
   947  0074                     ??i1___lwdiv:	
   948                           
   949                           ; 1 bytes @ 0x4
   950  0074                     	ds	1
   951  0075                     i1___lwdiv@quotient:	
   952                           
   953                           ; 2 bytes @ 0x5
   954  0075                     	ds	2
   955  0077                     i1___lwdiv@counter:	
   956                           
   957                           ; 1 bytes @ 0x7
   958  0077                     	ds	1
   959  0078                     ?i1___lwmod:	
   960  0078                     i1___lwmod@divisor:	
   961                           ; 2 bytes @ 0x8
   962                           
   963                           
   964                           ; 2 bytes @ 0x8
   965  0078                     	ds	2
   966  007A                     i1___lwmod@dividend:	
   967                           
   968                           ; 2 bytes @ 0xA
   969  007A                     	ds	2
   970  007C                     ??i1___lwmod:	
   971                           
   972                           ; 1 bytes @ 0xC
   973  007C                     	ds	1
   974  007D                     i1___lwmod@counter:	
   975                           
   976                           ; 1 bytes @ 0xD
   977  007D                     	ds	1
   978                           
   979                           	psect	cstackBANK0
   980  0020                     __pcstackBANK0:	
   981  0020                     ?i1_printf:	
   982  0020                     i1printf@f:	
   983                           ; 2 bytes @ 0x0
   984                           
   985                           
   986                           ; 2 bytes @ 0x0
   987  0020                     	ds	4
   988  0024                     ??i1_printf:	
   989                           
   990                           ; 1 bytes @ 0x4
   991  0024                     	ds	4
   992  0028                     i1printf@ap:	
   993                           
   994                           ; 1 bytes @ 0x8
   995  0028                     	ds	1
   996  0029                     i1printf@flag:	
   997                           
   998                           ; 1 bytes @ 0x9
   999  0029                     	ds	1
  1000  002A                     i1printf@prec:	
  1001                           
  1002                           ; 1 bytes @ 0xA
  1003  002A                     	ds	1
  1004  002B                     i1printf@val:	
  1005                           
  1006                           ; 2 bytes @ 0xB
  1007  002B                     	ds	2
  1008  002D                     i1printf@c:	
  1009                           
  1010                           ; 1 bytes @ 0xD
  1011  002D                     	ds	1
  1012  002E                     ??_ISR:	
  1013                           
  1014                           ; 1 bytes @ 0xE
  1015  002E                     	ds	2
  1016  0030                     ??_InitialisePorts:	
  1017  0030                     ??_InitUSART:	
  1018                           ; 1 bytes @ 0x10
  1019                           
  1020  0030                     ??_Init_TMR1:	
  1021                           ; 1 bytes @ 0x10
  1022                           
  1023  0030                     ??_InitialiseADC:	
  1024                           ; 1 bytes @ 0x10
  1025                           
  1026  0030                     ??_PIN6:	
  1027                           ; 1 bytes @ 0x10
  1028                           
  1029  0030                     ??_putch:	
  1030                           ; 1 bytes @ 0x10
  1031                           
  1032  0030                     ?___lwdiv:	
  1033                           ; 1 bytes @ 0x10
  1034                           
  1035  0030                     putch@c:	
  1036                           ; 2 bytes @ 0x10
  1037                           
  1038  0030                     ___lwdiv@divisor:	
  1039                           ; 1 bytes @ 0x10
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x10
  1043  0030                     	ds	1
  1044  0031                     PIN6@OnOff:	
  1045                           
  1046                           ; 1 bytes @ 0x11
  1047  0031                     	ds	1
  1048  0032                     ___lwdiv@dividend:	
  1049                           
  1050                           ; 2 bytes @ 0x12
  1051  0032                     	ds	2
  1052  0034                     ??___lwdiv:	
  1053                           
  1054                           ; 1 bytes @ 0x14
  1055  0034                     	ds	1
  1056  0035                     ___lwdiv@counter:	
  1057                           
  1058                           ; 1 bytes @ 0x15
  1059  0035                     	ds	1
  1060  0036                     ___lwdiv@quotient:	
  1061                           
  1062                           ; 2 bytes @ 0x16
  1063  0036                     	ds	2
  1064  0038                     ?___lwmod:	
  1065  0038                     ___lwmod@divisor:	
  1066                           ; 2 bytes @ 0x18
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x18
  1070  0038                     	ds	2
  1071  003A                     ___lwmod@dividend:	
  1072                           
  1073                           ; 2 bytes @ 0x1A
  1074  003A                     	ds	2
  1075  003C                     ??___lwmod:	
  1076                           
  1077                           ; 1 bytes @ 0x1C
  1078  003C                     	ds	1
  1079  003D                     ___lwmod@counter:	
  1080                           
  1081                           ; 1 bytes @ 0x1D
  1082  003D                     	ds	1
  1083  003E                     ?_printf:	
  1084  003E                     printf@f:	
  1085                           ; 2 bytes @ 0x1E
  1086                           
  1087                           
  1088                           ; 2 bytes @ 0x1E
  1089  003E                     	ds	2
  1090  0040                     ??_printf:	
  1091                           
  1092                           ; 1 bytes @ 0x20
  1093  0040                     	ds	4
  1094  0044                     ??_main:	
  1095                           
  1096                           	psect	maintext
  1097  0287                     __pmaintext:	
  1098                           ; 1 bytes @ 0x24
  1099 ;;
  1100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1101 ;;
  1102 ;; *************** function _main *****************
  1103 ;; Defined at:
  1104 ;;		line 32 in file "newmain.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  ADC_sample      2    0        unsigned short 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  2   70[None  ] int 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : B1F/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1
  1118 ;;      Params:         0       0       0
  1119 ;;      Locals:         0       0       0
  1120 ;;      Temps:          0       0       0
  1121 ;;      Totals:         0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels required when called:    5
  1124 ;; This function calls:
  1125 ;;		_InitUSART
  1126 ;;		_Init_TMR1
  1127 ;;		_InitialiseADC
  1128 ;;		_InitialisePorts
  1129 ;;		_PIN6
  1130 ;;		_printf
  1131 ;; This function is called by:
  1132 ;;		Startup code after reset
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _main
  1138  0287                     _main:	
  1139                           
  1140                           ;newmain.c: 35: OSCCON = 0b01101000;
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1144  0287  3068               	movlw	104
  1145  0288  0021               	movlb	1	; select bank1
  1146  0289  0099               	movwf	25	;volatile
  1147  028A                     l71:	
  1148                           ;newmain.c: 46: while(HFIOFR==0){
  1149                           
  1150  028A  1E1A               	btfss	26,4	;volatile
  1151  028B  2A8A               	goto	l71
  1152                           
  1153                           ;newmain.c: 47: }
  1154                           ;newmain.c: 50: INTCON = 0b00000000;
  1155  028C  018B               	clrf	11	;volatile
  1156                           
  1157                           ;newmain.c: 51: INTCONbits.GIE = 0;
  1158  028D  138B               	bcf	11,7	;volatile
  1159                           
  1160                           ;newmain.c: 53: InitialisePorts();
  1161  028E  22CE               	fcall	_InitialisePorts
  1162                           
  1163                           ;newmain.c: 54: InitUSART();
  1164  028F  2310               	fcall	_InitUSART
  1165                           
  1166                           ;newmain.c: 55: Init_TMR1();
  1167  0290  234D               	fcall	_Init_TMR1
  1168                           
  1169                           ;newmain.c: 56: InitialiseADC();
  1170  0291  22E7               	fcall	_InitialiseADC
  1171                           
  1172                           ;newmain.c: 58: INTCONbits.INTE = 1;
  1173  0292  160B               	bsf	11,4	;volatile
  1174                           
  1175                           ;newmain.c: 59: INTCONbits.IOCIE = 1;
  1176  0293  158B               	bsf	11,3	;volatile
  1177                           
  1178                           ;newmain.c: 60: INTCONbits.PEIE = 1;
  1179  0294  170B               	bsf	11,6	;volatile
  1180                           
  1181                           ;newmain.c: 61: PIE1bits.RCIE = 1;
  1182  0295  0021               	movlb	1	; select bank1
  1183  0296  1691               	bsf	17,5	;volatile
  1184                           
  1185                           ;newmain.c: 62: INTCONbits.GIE = 1;
  1186  0297  178B               	bsf	11,7	;volatile
  1187                           
  1188                           ;newmain.c: 64: IOCAFbits.IOCAF4 = 0;
  1189  0298  0027               	movlb	7	; select bank7
  1190  0299  1213               	bcf	19,4	;volatile
  1191                           
  1192                           ;newmain.c: 65: INTCONbits.INTF = 0;
  1193  029A  108B               	bcf	11,1	;volatile
  1194                           
  1195                           ;newmain.c: 66: PIR1bits.RCIF = 0;
  1196  029B  0020               	movlb	0	; select bank0
  1197  029C  1291               	bcf	17,5	;volatile
  1198                           
  1199                           ;newmain.c: 69: RCSTAbits.SPEN = 1;
  1200  029D  0023               	movlb	3	; select bank3
  1201  029E  179D               	bsf	29,7	;volatile
  1202                           
  1203                           ;newmain.c: 70: RCSTAbits.CREN = 0; RCSTAbits.CREN = 1;
  1204  029F  121D               	bcf	29,4	;volatile
  1205  02A0  161D               	bsf	29,4	;volatile
  1206                           
  1207                           ;newmain.c: 71: ADON=1;
  1208  02A1  0021               	movlb	1	; select bank1
  1209  02A2  141D               	bsf	29,0	;volatile
  1210                           
  1211                           ;newmain.c: 73: unsigned short ADC_sample;
  1212                           ;newmain.c: 75: PIN6(0);
  1213  02A3  3000               	movlw	0
  1214  02A4  2323               	fcall	_PIN6
  1215                           
  1216                           ;newmain.c: 76: printf("Start...");
  1217  02A5  3007               	movlw	low (STR_1| (0+32768))
  1218  02A6  0020               	movlb	0	; select bank0
  1219  02A7  00BE               	movwf	printf@f
  1220  02A8  3083               	movlw	high (STR_1| (0+32768))
  1221  02A9  00BF               	movwf	printf@f+1
  1222  02AA  2051               	fcall	_printf
  1223  02AB                     l74:	
  1224                           ;newmain.c: 77: while(1) {
  1225                           
  1226  02AB  2AAB               	goto	l74
  1227  02AC                     __end_of_main:	
  1228                           ;newmain.c: 108: }
  1229                           ;newmain.c: 110: return (0);
  1230                           ;	Return value of _main is never used
  1231                           
  1232                           
  1233                           	psect	text1
  1234  0051                     __ptext1:	
  1235 ;; *************** function _printf *****************
  1236 ;; Defined at:
  1237 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  f               2   30[BANK0 ] PTR const unsigned char 
  1240 ;;		 -> STR_2(4), STR_1(9), 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  tmpval          4    0        struct .
  1243 ;;  val             2    3[BANK1 ] unsigned int 
  1244 ;;  cp              2    0        PTR const unsigned char 
  1245 ;;  len             2    0        unsigned int 
  1246 ;;  c               1    5[BANK1 ] char 
  1247 ;;  prec            1    2[BANK1 ] char 
  1248 ;;  flag            1    1[BANK1 ] unsigned char 
  1249 ;;  ap              1    0[BANK1 ] PTR void [1]
  1250 ;;		 -> ?i1_printf(2), ?_printf(2), 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  2   30[BANK0 ] int 
  1253 ;; Registers used:
  1254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1
  1260 ;;      Params:         0       2       0
  1261 ;;      Locals:         0       0       6
  1262 ;;      Temps:          0       4       0
  1263 ;;      Totals:         0       6       6
  1264 ;;Total ram usage:       12 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    4
  1267 ;; This function calls:
  1268 ;;		___lwdiv
  1269 ;;		___lwmod
  1270 ;;		_putch
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           
  1277                           ;psect for function _printf
  1278  0051                     _printf:	
  1279                           
  1280                           ;doprnt.c: 466: va_list ap;
  1281                           ;doprnt.c: 499: signed char c;
  1282                           ;doprnt.c: 506: signed char prec;
  1283                           ;doprnt.c: 508: unsigned char flag;
  1284                           ;doprnt.c: 523: union {
  1285                           ;doprnt.c: 524: unsigned long vd;
  1286                           ;doprnt.c: 525: double integ;
  1287                           ;doprnt.c: 526: } tmpval;
  1288                           ;doprnt.c: 528: unsigned int val;
  1289                           ;doprnt.c: 529: unsigned len;
  1290                           ;doprnt.c: 530: const char * cp;
  1291                           ;doprnt.c: 533: *ap = __va_start();
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1295  0051  3040               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1296  0052  0020               	movlb	0	; select bank0
  1297  0053  00C0               	movwf	??_printf
  1298  0054  0840               	movf	??_printf,w
  1299  0055  0021               	movlb	1	; select bank1
  1300  0056  00A0               	movwf	printf@ap^(0+128)
  1301  0057                     l1705:	
  1302                           ;doprnt.c: 536: while(c = *f++) {
  1303                           
  1304  0057  0020               	movlb	0	; select bank0
  1305  0058  083F               	movf	printf@f+1,w
  1306  0059  00C1               	movwf	??_printf+1
  1307  005A  083E               	movf	printf@f,w
  1308  005B  00C0               	movwf	??_printf
  1309  005C  0ABE               	incf	printf@f,f
  1310  005D  1903               	skipnz
  1311  005E  0ABF               	incf	printf@f+1,f
  1312  005F  0840               	movf	??_printf,w
  1313  0060  0084               	movwf	4
  1314  0061  0841               	movf	??_printf+1,w
  1315  0062  0085               	movwf	5
  1316  0063  0800               	movf	0,w	;code access
  1317  0064  00C2               	movwf	??_printf+2
  1318  0065  0842               	movf	??_printf+2,w
  1319  0066  0021               	movlb	1	; select bank1
  1320  0067  00A5               	movwf	printf@c^(0+128)
  1321  0068  0825               	movf	printf@c^(0+128),w
  1322  0069  1903               	btfsc	3,2
  1323  006A  0008               	return
  1324                           
  1325                           ;doprnt.c: 538: if(c != '%')
  1326  006B  3025               	movlw	37
  1327  006C  0625               	xorwf	printf@c^(0+128),w
  1328  006D  1903               	btfsc	3,2
  1329  006E  2872               	goto	l1665
  1330                           
  1331                           ;doprnt.c: 540: {
  1332                           ;doprnt.c: 541: (putch(c) );
  1333  006F  0825               	movf	printf@c^(0+128),w
  1334  0070  235A               	fcall	_putch
  1335                           
  1336                           ;doprnt.c: 542: continue;
  1337  0071  2857               	goto	l1705
  1338  0072                     l1665:	
  1339                           
  1340                           ;doprnt.c: 543: }
  1341                           ;doprnt.c: 548: flag = 0;
  1342  0072  0021               	movlb	1	; select bank1
  1343  0073  01A1               	clrf	printf@flag^(0+128)
  1344                           
  1345                           ;doprnt.c: 822: }
  1346                           
  1347                           ;doprnt.c: 813: continue;
  1348                           
  1349                           ;doprnt.c: 802: default:
  1350                           
  1351                           ;doprnt.c: 698: case 'i':
  1352                           ;doprnt.c: 699: break;
  1353                           
  1354                           ;doprnt.c: 697: case 'd':
  1355                           
  1356                           ;doprnt.c: 638: goto alldone;
  1357                           
  1358                           ;doprnt.c: 637: case 0:
  1359                           
  1360                           ;doprnt.c: 635: switch(c = *f++) {
  1361  0074  0020               	movlb	0	; select bank0
  1362  0075  083F               	movf	printf@f+1,w
  1363  0076  00C1               	movwf	??_printf+1
  1364  0077  083E               	movf	printf@f,w
  1365  0078  00C0               	movwf	??_printf
  1366  0079  0ABE               	incf	printf@f,f
  1367  007A  1903               	skipnz
  1368  007B  0ABF               	incf	printf@f+1,f
  1369  007C  0840               	movf	??_printf,w
  1370  007D  0084               	movwf	4
  1371  007E  0841               	movf	??_printf+1,w
  1372  007F  0085               	movwf	5
  1373  0080  0800               	movf	0,w	;code access
  1374  0081  0021               	movlb	1	; select bank1
  1375  0082  00A5               	movwf	printf@c^(0+128)
  1376                           
  1377                           ; Switch size 1, requested type "space"
  1378                           ; Number of cases is 3, Range of values is 0 to 105
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte           10     6 (average)
  1382                           ; direct_byte          218     6 (fixed)
  1383                           ; jumptable            260     6 (fixed)
  1384                           ;	Chosen strategy is simple_byte
  1385  0083  3A00               	xorlw	0	; case 0
  1386  0084  1903               	skipnz
  1387  0085  2917               	goto	l273
  1388  0086  3A64               	xorlw	100	; case 100
  1389  0087  1903               	skipnz
  1390  0088  288D               	goto	l1671
  1391  0089  3A0D               	xorlw	13	; case 105
  1392  008A  1903               	skipnz
  1393  008B  288D               	goto	l1671
  1394  008C  2857               	goto	l1705
  1395  008D                     l1671:	
  1396                           
  1397                           ;doprnt.c: 1253: {
  1398                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1399  008D  0820               	movf	printf@ap^(0+128),w
  1400  008E  0086               	movwf	6
  1401  008F  0187               	clrf	7
  1402  0090  3F40               	moviw [0]fsr1
  1403  0091  00A3               	movwf	printf@val^(0+128)
  1404  0092  3F41               	moviw [1]fsr1
  1405  0093  00A4               	movwf	(printf@val+1)^(0+128)
  1406  0094  3002               	movlw	2
  1407  0095  0020               	movlb	0	; select bank0
  1408  0096  00C0               	movwf	??_printf
  1409  0097  0840               	movf	??_printf,w
  1410  0098  0021               	movlb	1	; select bank1
  1411  0099  07A0               	addwf	printf@ap^(0+128),f
  1412                           
  1413                           ;doprnt.c: 1261: if((int)val < 0) {
  1414  009A  1FA4               	btfss	(printf@val+1)^(0+128),7
  1415  009B  28A7               	goto	l1681
  1416                           
  1417                           ;doprnt.c: 1262: flag |= 0x03;
  1418  009C  3003               	movlw	3
  1419  009D  0020               	movlb	0	; select bank0
  1420  009E  00C0               	movwf	??_printf
  1421  009F  0840               	movf	??_printf,w
  1422  00A0  0021               	movlb	1	; select bank1
  1423  00A1  04A1               	iorwf	printf@flag^(0+128),f
  1424                           
  1425                           ;doprnt.c: 1263: val = -val;
  1426  00A2  09A3               	comf	printf@val^(0+128),f
  1427  00A3  09A4               	comf	(printf@val+1)^(0+128),f
  1428  00A4  0AA3               	incf	printf@val^(0+128),f
  1429  00A5  1903               	skipnz
  1430  00A6  0AA4               	incf	(printf@val+1)^(0+128),f
  1431  00A7                     l1681:	
  1432                           
  1433                           ;doprnt.c: 1264: }
  1434                           ;doprnt.c: 1266: }
  1435                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1436  00A7  01A5               	clrf	printf@c^(0+128)
  1437  00A8  0AA5               	incf	printf@c^(0+128),f
  1438  00A9  3005               	movlw	5
  1439  00AA  0625               	xorwf	printf@c^(0+128),w
  1440  00AB  1903               	btfsc	3,2
  1441  00AC  28D2               	goto	l1693
  1442  00AD                     l1687:	
  1443                           
  1444                           ;doprnt.c: 1306: if(val < dpowers[c])
  1445  00AD  0825               	movf	printf@c^(0+128),w
  1446  00AE  0020               	movlb	0	; select bank0
  1447  00AF  00C0               	movwf	??_printf
  1448  00B0  01C1               	clrf	??_printf+1
  1449  00B1  35C0               	lslf	??_printf,f
  1450  00B2  0DC1               	rlf	??_printf+1,f
  1451  00B3  30FD               	movlw	low (_dpowers| (0+32768))
  1452  00B4  0740               	addwf	??_printf,w
  1453  00B5  0084               	movwf	4
  1454  00B6  3082               	movlw	high (_dpowers| (0+32768))
  1455  00B7  3D41               	addwfc	??_printf+1,w
  1456  00B8  0085               	movwf	5
  1457  00B9  3F00               	moviw [0]fsr0
  1458  00BA  00C2               	movwf	??_printf+2
  1459  00BB  3F01               	moviw [1]fsr0
  1460  00BC  00C3               	movwf	??_printf+3
  1461  00BD  0843               	movf	??_printf+3,w
  1462  00BE  0021               	movlb	1	; select bank1
  1463  00BF  0224               	subwf	(printf@val+1)^(0+128),w
  1464  00C0  1D03               	skipz
  1465  00C1  28C6               	goto	u1355
  1466  00C2  0020               	movlb	0	; select bank0
  1467  00C3  0842               	movf	??_printf+2,w
  1468  00C4  0021               	movlb	1	; select bank1
  1469  00C5  0223               	subwf	printf@val^(0+128),w
  1470  00C6                     u1355:	
  1471  00C6  1C03               	btfss	3,0
  1472  00C7  28D2               	goto	l1693
  1473                           
  1474                           ;doprnt.c: 1307: break;
  1475  00C8  3001               	movlw	1
  1476  00C9  0020               	movlb	0	; select bank0
  1477  00CA  00C0               	movwf	??_printf
  1478  00CB  0840               	movf	??_printf,w
  1479  00CC  0021               	movlb	1	; select bank1
  1480  00CD  07A5               	addwf	printf@c^(0+128),f
  1481  00CE  3005               	movlw	5
  1482  00CF  0625               	xorwf	printf@c^(0+128),w
  1483  00D0  1D03               	btfss	3,2
  1484  00D1  28AD               	goto	l1687
  1485  00D2                     l1693:	
  1486                           
  1487                           ;doprnt.c: 1422: {
  1488                           ;doprnt.c: 1438: if(flag & 0x03)
  1489  00D2  0821               	movf	printf@flag^(0+128),w
  1490  00D3  3903               	andlw	3
  1491  00D4  1903               	btfsc	3,2
  1492  00D5  28D8               	goto	l1697
  1493                           
  1494                           ;doprnt.c: 1439: (putch('-') );
  1495  00D6  302D               	movlw	45
  1496  00D7  235A               	fcall	_putch
  1497  00D8                     l1697:	
  1498                           
  1499                           ;doprnt.c: 1469: }
  1500                           ;doprnt.c: 1472: prec = c;
  1501  00D8  0021               	movlb	1	; select bank1
  1502  00D9  0825               	movf	printf@c^(0+128),w
  1503  00DA  0020               	movlb	0	; select bank0
  1504  00DB  00C0               	movwf	??_printf
  1505  00DC  0840               	movf	??_printf,w
  1506  00DD  0021               	movlb	1	; select bank1
  1507  00DE  00A2               	movwf	printf@prec^(0+128)
  1508  00DF                     l1703:	
  1509                           ;doprnt.c: 1474: while(prec--) {
  1510                           
  1511  00DF  30FF               	movlw	255
  1512  00E0  0020               	movlb	0	; select bank0
  1513  00E1  00C0               	movwf	??_printf
  1514  00E2  0840               	movf	??_printf,w
  1515  00E3  0021               	movlb	1	; select bank1
  1516  00E4  07A2               	addwf	printf@prec^(0+128),f
  1517  00E5  0A22               	incf	printf@prec^(0+128),w
  1518  00E6  1903               	btfsc	3,2
  1519  00E7  2857               	goto	l1705
  1520                           
  1521                           ;doprnt.c: 1478: {
  1522                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1523  00E8  300A               	movlw	10
  1524  00E9  0020               	movlb	0	; select bank0
  1525  00EA  00B8               	movwf	___lwmod@divisor
  1526  00EB  3000               	movlw	0
  1527  00EC  00B9               	movwf	___lwmod@divisor+1
  1528  00ED  0021               	movlb	1	; select bank1
  1529  00EE  0822               	movf	printf@prec^(0+128),w
  1530  00EF  0020               	movlb	0	; select bank0
  1531  00F0  00C0               	movwf	??_printf
  1532  00F1  01C1               	clrf	??_printf+1
  1533  00F2  35C0               	lslf	??_printf,f
  1534  00F3  0DC1               	rlf	??_printf+1,f
  1535  00F4  30FD               	movlw	low (_dpowers| (0+32768))
  1536  00F5  0740               	addwf	??_printf,w
  1537  00F6  0084               	movwf	4
  1538  00F7  3082               	movlw	high (_dpowers| (0+32768))
  1539  00F8  3D41               	addwfc	??_printf+1,w
  1540  00F9  0085               	movwf	5
  1541  00FA  3F00               	moviw [0]fsr0
  1542  00FB  00B0               	movwf	___lwdiv@divisor
  1543  00FC  3F01               	moviw [1]fsr0
  1544  00FD  00B1               	movwf	___lwdiv@divisor+1
  1545  00FE  0021               	movlb	1	; select bank1
  1546  00FF  0824               	movf	(printf@val+1)^(0+128),w
  1547  0100  0020               	movlb	0	; select bank0
  1548  0101  00B3               	movwf	___lwdiv@dividend+1
  1549  0102  0021               	movlb	1	; select bank1
  1550  0103  0823               	movf	printf@val^(0+128),w
  1551  0104  0020               	movlb	0	; select bank0
  1552  0105  00B2               	movwf	___lwdiv@dividend
  1553  0106  21C5               	fcall	___lwdiv
  1554  0107  0020               	movlb	0	; select bank0
  1555  0108  0831               	movf	?___lwdiv+1,w
  1556  0109  00BB               	movwf	___lwmod@dividend+1
  1557  010A  0830               	movf	?___lwdiv,w
  1558  010B  00BA               	movwf	___lwmod@dividend
  1559  010C  222E               	fcall	___lwmod
  1560  010D  0020               	movlb	0	; select bank0
  1561  010E  0838               	movf	?___lwmod,w
  1562  010F  3E30               	addlw	48
  1563  0110  00C2               	movwf	??_printf+2
  1564  0111  0842               	movf	??_printf+2,w
  1565  0112  0021               	movlb	1	; select bank1
  1566  0113  00A5               	movwf	printf@c^(0+128)
  1567                           
  1568                           ;doprnt.c: 1523: }
  1569                           ;doprnt.c: 1524: (putch(c) );
  1570  0114  0825               	movf	printf@c^(0+128),w
  1571  0115  235A               	fcall	_putch
  1572  0116  28DF               	goto	l1703
  1573  0117                     l273:	
  1574                           ;doprnt.c: 1540: return 0;
  1575                           ;	Return value of _printf is never used
  1576                           
  1577                           ;doprnt.c: 1525: }
  1578                           ;doprnt.c: 1533: }
  1579                           ;doprnt.c: 1535: alldone:
  1580                           
  1581  0117  0008               	return
  1582  0118                     __end_of_printf:	
  1583                           
  1584                           	psect	text2
  1585  035A                     __ptext2:	
  1586 ;; *************** function _putch *****************
  1587 ;; Defined at:
  1588 ;;		line 15 in file "USART.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  c               1    wreg     unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  c               1   16[BANK0 ] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1
  1602 ;;      Params:         0       0       0
  1603 ;;      Locals:         0       1       0
  1604 ;;      Temps:          0       0       0
  1605 ;;      Totals:         0       1       0
  1606 ;;Total ram usage:        1 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    3
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_printf
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _putch
  1618  035A                     _putch:	
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _putch: [wreg]
  1622                           ;putch@c stored from wreg
  1623  035A  0020               	movlb	0	; select bank0
  1624  035B  00B0               	movwf	putch@c
  1625  035C                     l153:	
  1626                           ;USART.c: 17: while(!TRMT);
  1627                           
  1628  035C  0023               	movlb	3	; select bank3
  1629  035D  1C9E               	btfss	30,1	;volatile
  1630  035E  2B5C               	goto	l153
  1631                           
  1632                           ;USART.c: 18: TXREG=c;
  1633  035F  0020               	movlb	0	; select bank0
  1634  0360  0830               	movf	putch@c,w
  1635  0361  0023               	movlb	3	; select bank3
  1636  0362  009A               	movwf	26	;volatile
  1637  0363  0008               	return
  1638  0364                     __end_of_putch:	
  1639                           
  1640                           	psect	text3
  1641  022E                     __ptext3:	
  1642 ;; *************** function ___lwmod *****************
  1643 ;; Defined at:
  1644 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  divisor         2   24[BANK0 ] unsigned int 
  1647 ;;  dividend        2   26[BANK0 ] unsigned int 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  counter         1   29[BANK0 ] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  2   24[BANK0 ] unsigned int 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1
  1659 ;;      Params:         0       4       0
  1660 ;;      Locals:         0       1       0
  1661 ;;      Temps:          0       1       0
  1662 ;;      Totals:         0       6       0
  1663 ;;Total ram usage:        6 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    3
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_printf
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function ___lwmod
  1675  022E                     ___lwmod:	
  1676                           
  1677                           ;incstack = 0
  1678                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1679  022E  0020               	movlb	0	; select bank0
  1680  022F  0838               	movf	___lwmod@divisor,w
  1681  0230  0439               	iorwf	___lwmod@divisor+1,w
  1682  0231  1903               	btfsc	3,2
  1683  0232  2A56               	goto	l1655
  1684  0233  01BD               	clrf	___lwmod@counter
  1685  0234  0ABD               	incf	___lwmod@counter,f
  1686  0235                     l1645:	
  1687  0235  1BB9               	btfsc	___lwmod@divisor+1,7
  1688  0236  2A41               	goto	l1647
  1689  0237  3001               	movlw	1
  1690  0238                     u1275:	
  1691  0238  35B8               	lslf	___lwmod@divisor,f
  1692  0239  0DB9               	rlf	___lwmod@divisor+1,f
  1693  023A  0B89               	decfsz	9,f
  1694  023B  2A38               	goto	u1275
  1695  023C  3001               	movlw	1
  1696  023D  00BC               	movwf	??___lwmod
  1697  023E  083C               	movf	??___lwmod,w
  1698  023F  07BD               	addwf	___lwmod@counter,f
  1699  0240  2A35               	goto	l1645
  1700  0241                     l1647:	
  1701  0241  0839               	movf	___lwmod@divisor+1,w
  1702  0242  023B               	subwf	___lwmod@dividend+1,w
  1703  0243  1D03               	skipz
  1704  0244  2A47               	goto	u1295
  1705  0245  0838               	movf	___lwmod@divisor,w
  1706  0246  023A               	subwf	___lwmod@dividend,w
  1707  0247                     u1295:	
  1708  0247  1C03               	skipc
  1709  0248  2A4D               	goto	l1651
  1710  0249  0838               	movf	___lwmod@divisor,w
  1711  024A  02BA               	subwf	___lwmod@dividend,f
  1712  024B  0839               	movf	___lwmod@divisor+1,w
  1713  024C  3BBB               	subwfb	___lwmod@dividend+1,f
  1714  024D                     l1651:	
  1715  024D  3001               	movlw	1
  1716  024E                     u1305:	
  1717  024E  36B9               	lsrf	___lwmod@divisor+1,f
  1718  024F  0CB8               	rrf	___lwmod@divisor,f
  1719  0250  0B89               	decfsz	9,f
  1720  0251  2A4E               	goto	u1305
  1721  0252  3001               	movlw	1
  1722  0253  02BD               	subwf	___lwmod@counter,f
  1723  0254  1D03               	btfss	3,2
  1724  0255  2A41               	goto	l1647
  1725  0256                     l1655:	
  1726  0256  083B               	movf	___lwmod@dividend+1,w
  1727  0257  00B9               	movwf	?___lwmod+1
  1728  0258  083A               	movf	___lwmod@dividend,w
  1729  0259  00B8               	movwf	?___lwmod
  1730  025A  0008               	return
  1731  025B                     __end_of___lwmod:	
  1732                           
  1733                           	psect	text4
  1734  01C5                     __ptext4:	
  1735 ;; *************** function ___lwdiv *****************
  1736 ;; Defined at:
  1737 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  divisor         2   16[BANK0 ] unsigned int 
  1740 ;;  dividend        2   18[BANK0 ] unsigned int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  quotient        2   22[BANK0 ] unsigned int 
  1743 ;;  counter         1   21[BANK0 ] unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2   16[BANK0 ] unsigned int 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1
  1753 ;;      Params:         0       4       0
  1754 ;;      Locals:         0       3       0
  1755 ;;      Temps:          0       1       0
  1756 ;;      Totals:         0       8       0
  1757 ;;Total ram usage:        8 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    3
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_printf
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function ___lwdiv
  1769  01C5                     ___lwdiv:	
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1773  01C5  0020               	movlb	0	; select bank0
  1774  01C6  01B6               	clrf	___lwdiv@quotient
  1775  01C7  01B7               	clrf	___lwdiv@quotient+1
  1776  01C8  0830               	movf	___lwdiv@divisor,w
  1777  01C9  0431               	iorwf	___lwdiv@divisor+1,w
  1778  01CA  1903               	btfsc	3,2
  1779  01CB  29F5               	goto	l1633
  1780  01CC  01B5               	clrf	___lwdiv@counter
  1781  01CD  0AB5               	incf	___lwdiv@counter,f
  1782  01CE                     l1621:	
  1783  01CE  1BB1               	btfsc	___lwdiv@divisor+1,7
  1784  01CF  29DA               	goto	l1623
  1785  01D0  3001               	movlw	1
  1786  01D1                     u1205:	
  1787  01D1  35B0               	lslf	___lwdiv@divisor,f
  1788  01D2  0DB1               	rlf	___lwdiv@divisor+1,f
  1789  01D3  0B89               	decfsz	9,f
  1790  01D4  29D1               	goto	u1205
  1791  01D5  3001               	movlw	1
  1792  01D6  00B4               	movwf	??___lwdiv
  1793  01D7  0834               	movf	??___lwdiv,w
  1794  01D8  07B5               	addwf	___lwdiv@counter,f
  1795  01D9  29CE               	goto	l1621
  1796  01DA                     l1623:	
  1797  01DA  3001               	movlw	1
  1798  01DB                     u1225:	
  1799  01DB  35B6               	lslf	___lwdiv@quotient,f
  1800  01DC  0DB7               	rlf	___lwdiv@quotient+1,f
  1801  01DD  0B89               	decfsz	9,f
  1802  01DE  29DB               	goto	u1225
  1803  01DF  0831               	movf	___lwdiv@divisor+1,w
  1804  01E0  0233               	subwf	___lwdiv@dividend+1,w
  1805  01E1  1D03               	skipz
  1806  01E2  29E5               	goto	u1235
  1807  01E3  0830               	movf	___lwdiv@divisor,w
  1808  01E4  0232               	subwf	___lwdiv@dividend,w
  1809  01E5                     u1235:	
  1810  01E5  1C03               	skipc
  1811  01E6  29EC               	goto	l1629
  1812  01E7  0830               	movf	___lwdiv@divisor,w
  1813  01E8  02B2               	subwf	___lwdiv@dividend,f
  1814  01E9  0831               	movf	___lwdiv@divisor+1,w
  1815  01EA  3BB3               	subwfb	___lwdiv@dividend+1,f
  1816  01EB  1436               	bsf	___lwdiv@quotient,0
  1817  01EC                     l1629:	
  1818  01EC  3001               	movlw	1
  1819  01ED                     u1245:	
  1820  01ED  36B1               	lsrf	___lwdiv@divisor+1,f
  1821  01EE  0CB0               	rrf	___lwdiv@divisor,f
  1822  01EF  0B89               	decfsz	9,f
  1823  01F0  29ED               	goto	u1245
  1824  01F1  3001               	movlw	1
  1825  01F2  02B5               	subwf	___lwdiv@counter,f
  1826  01F3  1D03               	btfss	3,2
  1827  01F4  29DA               	goto	l1623
  1828  01F5                     l1633:	
  1829  01F5  0837               	movf	___lwdiv@quotient+1,w
  1830  01F6  00B1               	movwf	?___lwdiv+1
  1831  01F7  0836               	movf	___lwdiv@quotient,w
  1832  01F8  00B0               	movwf	?___lwdiv
  1833  01F9  0008               	return
  1834  01FA                     __end_of___lwdiv:	
  1835                           
  1836                           	psect	text5
  1837  0323                     __ptext5:	
  1838 ;; *************** function _PIN6 *****************
  1839 ;; Defined at:
  1840 ;;		line 91 in file "IO_Controls.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  OnOff           1    wreg     unsigned char 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  OnOff           1   17[BANK0 ] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1
  1854 ;;      Params:         0       0       0
  1855 ;;      Locals:         0       1       0
  1856 ;;      Temps:          0       1       0
  1857 ;;      Totals:         0       2       0
  1858 ;;Total ram usage:        2 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    3
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _PIN6
  1870  0323                     _PIN6:	
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _PIN6: [wreg+status,2]
  1874                           ;PIN6@OnOff stored from wreg
  1875  0323  0020               	movlb	0	; select bank0
  1876  0324  00B1               	movwf	PIN6@OnOff
  1877                           
  1878                           ;IO_Controls.c: 93: portC.portCByte = PORTC;
  1879  0325  080E               	movf	14,w	;volatile
  1880  0326  00B0               	movwf	??_PIN6
  1881  0327  0830               	movf	??_PIN6,w
  1882  0328  00D9               	movwf	_portC
  1883                           
  1884                           ;IO_Controls.c: 94: portC.bits.Pin6 = OnOff;
  1885  0329  0831               	movf	PIN6@OnOff,w
  1886  032A  3901               	andlw	1
  1887  032B  1259               	bcf	_portC,4
  1888  032C  1D03               	skipz
  1889  032D  1659               	bsf	_portC,4
  1890                           
  1891                           ;IO_Controls.c: 95: PORTC=portC.portCByte;
  1892  032E  0859               	movf	_portC,w
  1893  032F  008E               	movwf	14	;volatile
  1894  0330  0008               	return
  1895  0331                     __end_of_PIN6:	
  1896                           ;IO_Controls.c: 96: return;
  1897                           
  1898                           
  1899                           	psect	text6
  1900  02CE                     __ptext6:	
  1901 ;; *************** function _InitialisePorts *****************
  1902 ;; Defined at:
  1903 ;;		line 13 in file "IO_Controls.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1
  1917 ;;      Params:         0       0       0
  1918 ;;      Locals:         0       0       0
  1919 ;;      Temps:          0       0       0
  1920 ;;      Totals:         0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    3
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _InitialisePorts
  1933  02CE                     _InitialisePorts:	
  1934                           
  1935                           ;IO_Controls.c: 15: OPTION_REG = 0b11000000;
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _InitialisePorts: [wreg+status,2]
  1939  02CE  30C0               	movlw	192
  1940  02CF  0021               	movlb	1	; select bank1
  1941  02D0  0095               	movwf	21	;volatile
  1942                           
  1943                           ;IO_Controls.c: 33: portA.portAByte = 0;
  1944  02D1  0020               	movlb	0	; select bank0
  1945  02D2  01DA               	clrf	_portA
  1946                           
  1947                           ;IO_Controls.c: 34: LATA = 0;
  1948  02D3  0022               	movlb	2	; select bank2
  1949  02D4  018C               	clrf	12	;volatile
  1950                           
  1951                           ;IO_Controls.c: 36: TRISA = 0b00111110;
  1952  02D5  303E               	movlw	62
  1953  02D6  0021               	movlb	1	; select bank1
  1954  02D7  008C               	movwf	12	;volatile
  1955                           
  1956                           ;IO_Controls.c: 44: ANSELA = 0b00000000;
  1957  02D8  0023               	movlb	3	; select bank3
  1958  02D9  018C               	clrf	12	;volatile
  1959                           
  1960                           ;IO_Controls.c: 46: IOCAPbits.IOCAP4 = 1;
  1961  02DA  0027               	movlb	7	; select bank7
  1962  02DB  1611               	bsf	17,4	;volatile
  1963                           
  1964                           ;IO_Controls.c: 61: portC.portCByte = 0;
  1965  02DC  0020               	movlb	0	; select bank0
  1966  02DD  01D9               	clrf	_portC
  1967                           
  1968                           ;IO_Controls.c: 62: LATC = 0;
  1969  02DE  0022               	movlb	2	; select bank2
  1970  02DF  018E               	clrf	14	;volatile
  1971                           
  1972                           ;IO_Controls.c: 63: TRISC = 0b00001000;
  1973  02E0  3008               	movlw	8
  1974  02E1  0021               	movlb	1	; select bank1
  1975  02E2  008E               	movwf	14	;volatile
  1976                           
  1977                           ;IO_Controls.c: 65: ANSELC = 0b00001000;
  1978  02E3  3008               	movlw	8
  1979  02E4  0023               	movlb	3	; select bank3
  1980  02E5  008E               	movwf	14	;volatile
  1981  02E6  0008               	return
  1982  02E7                     __end_of_InitialisePorts:	
  1983                           ;IO_Controls.c: 70: return;
  1984                           
  1985                           
  1986                           	psect	text7
  1987  02E7                     __ptext7:	
  1988 ;; *************** function _InitialiseADC *****************
  1989 ;; Defined at:
  1990 ;;		line 15 in file "ADC.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1
  2004 ;;      Params:         0       0       0
  2005 ;;      Locals:         0       0       0
  2006 ;;      Temps:          0       0       0
  2007 ;;      Totals:         0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    3
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _InitialiseADC
  2020  02E7                     _InitialiseADC:	
  2021                           
  2022                           ;ADC.c: 17: ADCON0bits.CHS = 0b0111;
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _InitialiseADC: [wreg+status,2+status,0]
  2026  02E7  0021               	movlb	1	; select bank1
  2027  02E8  081D               	movf	29,w	;volatile
  2028  02E9  3983               	andlw	-125
  2029  02EA  381C               	iorlw	28
  2030  02EB  009D               	movwf	29	;volatile
  2031                           
  2032                           ;ADC.c: 19: ADFM = 1;
  2033  02EC  179E               	bsf	30,7	;volatile
  2034                           
  2035                           ;ADC.c: 20: ADCON1bits.ADCS = 0b000;
  2036  02ED  308F               	movlw	-113
  2037  02EE  059E               	andwf	30,f	;volatile
  2038                           
  2039                           ;ADC.c: 22: ADCON1bits.ADPREF = 0b011;
  2040  02EF  3003               	movlw	3
  2041  02F0  049E               	iorwf	30,f	;volatile
  2042                           
  2043                           ;ADC.c: 24: FVRCON = 0b11000010;
  2044  02F1  30C2               	movlw	194
  2045  02F2  0022               	movlb	2	; select bank2
  2046  02F3  0097               	movwf	23	;volatile
  2047                           
  2048                           ;ADC.c: 26: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2049  02F4  3003               	movlw	3
  2050  02F5                     u1417:	
  2051  02F5  0B89               	decfsz	9,f
  2052  02F6  2AF5               	goto	u1417
  2053  02F7  0000               	nop
  2054                           
  2055                           ;ADC.c: 27: ADIE=0;
  2056  02F8  0021               	movlb	1	; select bank1
  2057  02F9  1311               	bcf	17,6	;volatile
  2058                           
  2059                           ;ADC.c: 28: ADON=0;
  2060  02FA  101D               	bcf	29,0	;volatile
  2061                           
  2062                           ;ADC.c: 29: GO_nDONE=0;
  2063  02FB  109D               	bcf	29,1	;volatile
  2064  02FC  0008               	return
  2065  02FD                     __end_of_InitialiseADC:	
  2066                           ;ADC.c: 30: return;
  2067                           
  2068                           
  2069                           	psect	text8
  2070  034D                     __ptext8:	
  2071 ;; *************** function _Init_TMR1 *****************
  2072 ;; Defined at:
  2073 ;;		line 18 in file "Timer.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1
  2087 ;;      Params:         0       0       0
  2088 ;;      Locals:         0       0       0
  2089 ;;      Temps:          0       0       0
  2090 ;;      Totals:         0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    3
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _Init_TMR1
  2103  034D                     _Init_TMR1:	
  2104                           
  2105                           ;Timer.c: 21: T1CON = 0b00000000;
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _Init_TMR1: [wreg+status,2+status,0]
  2109  034D  0020               	movlb	0	; select bank0
  2110  034E  0198               	clrf	24	;volatile
  2111                           
  2112                           ;Timer.c: 22: T1CONbits.TMR1CS = 0b00;
  2113  034F  303F               	movlw	-193
  2114  0350  0598               	andwf	24,f	;volatile
  2115                           
  2116                           ;Timer.c: 23: T1CONbits.T1CKPS = 0b01;
  2117  0351  0818               	movf	24,w	;volatile
  2118  0352  39CF               	andlw	-49
  2119  0353  3810               	iorlw	16
  2120  0354  0098               	movwf	24	;volatile
  2121                           
  2122                           ;Timer.c: 25: T1GCON = 0b01000000;
  2123  0355  3040               	movlw	64
  2124  0356  0099               	movwf	25	;volatile
  2125                           
  2126                           ;Timer.c: 27: INTCON = 0b10000000;
  2127  0357  3080               	movlw	128
  2128  0358  008B               	movwf	11	;volatile
  2129  0359  0008               	return
  2130  035A                     __end_of_Init_TMR1:	
  2131                           ;Timer.c: 29: return;
  2132                           
  2133                           
  2134                           	psect	text9
  2135  0310                     __ptext9:	
  2136 ;; *************** function _InitUSART *****************
  2137 ;; Defined at:
  2138 ;;		line 28 in file "USART.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1
  2152 ;;      Params:         0       0       0
  2153 ;;      Locals:         0       0       0
  2154 ;;      Temps:          0       0       0
  2155 ;;      Totals:         0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    3
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _InitUSART
  2168  0310                     _InitUSART:	
  2169                           
  2170                           ;USART.c: 31: PIE1bits.TXIE = 0;
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _InitUSART: [wreg+status,2]
  2174  0310  0021               	movlb	1	; select bank1
  2175  0311  1211               	bcf	17,4	;volatile
  2176                           
  2177                           ;USART.c: 32: RCREG = 0;
  2178  0312  0023               	movlb	3	; select bank3
  2179  0313  0199               	clrf	25	;volatile
  2180                           
  2181                           ;USART.c: 33: RCSTAbits.CREN = 1;
  2182  0314  161D               	bsf	29,4	;volatile
  2183                           
  2184                           ;USART.c: 34: TXSTAbits.TXEN = 1;
  2185  0315  169E               	bsf	30,5	;volatile
  2186                           
  2187                           ;USART.c: 37: TXSTAbits.SYNC = 0;
  2188  0316  121E               	bcf	30,4	;volatile
  2189                           
  2190                           ;USART.c: 38: TXSTAbits.BRGH = 1;
  2191  0317  151E               	bsf	30,2	;volatile
  2192                           
  2193                           ;USART.c: 39: BAUDCONbits.BRG16 = 0;
  2194  0318  119F               	bcf	31,3	;volatile
  2195                           
  2196                           ;USART.c: 40: SPBRG = 23;
  2197  0319  3017               	movlw	23
  2198  031A  009B               	movwf	27	;volatile
  2199                           
  2200                           ;USART.c: 42: TRISAbits.TRISA1 = 1;
  2201  031B  0021               	movlb	1	; select bank1
  2202  031C  148C               	bsf	12,1	;volatile
  2203                           
  2204                           ;USART.c: 43: ANSELAbits.ANSA1 = 0;
  2205  031D  0023               	movlb	3	; select bank3
  2206  031E  108C               	bcf	12,1	;volatile
  2207                           
  2208                           ;USART.c: 44: APFCONbits.RXDTSEL = 1;
  2209  031F  0022               	movlb	2	; select bank2
  2210  0320  179D               	bsf	29,7	;volatile
  2211                           
  2212                           ;USART.c: 45: APFCONbits.TXCKSEL = 1;
  2213  0321  151D               	bsf	29,2	;volatile
  2214  0322  0008               	return
  2215  0323                     __end_of_InitUSART:	
  2216                           ;USART.c: 47: return;
  2217                           
  2218                           
  2219                           	psect	intentry
  2220  0004                     __pintentry:	
  2221 ;; *************** function _ISR *****************
  2222 ;; Defined at:
  2223 ;;		line 113 in file "newmain.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1
  2237 ;;      Params:         0       0       0
  2238 ;;      Locals:         0       0       0
  2239 ;;      Temps:          0       2       0
  2240 ;;      Totals:         0       2       0
  2241 ;;Total ram usage:        2 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    2
  2244 ;; This function calls:
  2245 ;;		_PIN5
  2246 ;;		_Timer1
  2247 ;;		_getch
  2248 ;;		i1_PIN6
  2249 ;;		i1_printf
  2250 ;; This function is called by:
  2251 ;;		Interrupt level 1
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255  0004                     _ISR:	
  2256                           
  2257                           ;incstack = 0
  2258  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2259                           
  2260                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2261  0005  3180               	pagesel	$
  2262  0006  0020               	movlb	0	; select bank0
  2263  0007  087F               	movf	127,w
  2264  0008  00AF               	movwf	??_ISR+1
  2265                           
  2266                           ;newmain.c: 115: if((INTCONbits.INTF == 1) && (INTCONbits.INTE == 1)){
  2267  0009  188B               	btfsc	11,1	;volatile
  2268  000A  1E0B               	btfss	11,4	;volatile
  2269  000B  2815               	goto	i1l82
  2270                           
  2271                           ;newmain.c: 118: if((PORTAbits.AN2 == 1)){
  2272  000C  1D0C               	btfss	12,2	;volatile
  2273  000D  2813               	goto	i1l1543
  2274                           
  2275                           ;newmain.c: 122: T1CONbits.TMR1ON = 1;
  2276  000E  1418               	bsf	24,0	;volatile
  2277                           
  2278                           ;newmain.c: 124: PIN6(1);
  2279  000F  3001               	movlw	1
  2280  0010  2331               	fcall	i1_PIN6
  2281                           
  2282                           ;newmain.c: 125: PIN5(0);
  2283  0011  3000               	movlw	0
  2284  0012  233F               	fcall	_PIN5
  2285  0013                     i1l1543:	
  2286                           
  2287                           ;newmain.c: 127: }
  2288                           ;newmain.c: 164: INTCONbits.INTF = 0;
  2289  0013  108B               	bcf	11,1	;volatile
  2290                           
  2291                           ;newmain.c: 165: }
  2292  0014  283E               	goto	i1l89
  2293  0015                     i1l82:	
  2294                           
  2295                           ;newmain.c: 167: else if(( IOCAFbits.IOCAF4 == 1 ) && (INTCONbits.IOCIE == 1)){
  2296  0015  0027               	movlb	7	; select bank7
  2297  0016  1A13               	btfsc	19,4	;volatile
  2298  0017  1D8B               	btfss	11,3	;volatile
  2299  0018  2832               	goto	i1l85
  2300                           
  2301                           ;newmain.c: 169: if((PORTAbits.AN3 == 1)){
  2302  0019  0020               	movlb	0	; select bank0
  2303  001A  1E0C               	btfss	12,4	;volatile
  2304  001B  282F               	goto	i1l1555
  2305                           
  2306                           ;newmain.c: 174: PIN6(0);
  2307  001C  3000               	movlw	0
  2308  001D  2331               	fcall	i1_PIN6
  2309                           
  2310                           ;newmain.c: 175: PIN5(1);
  2311  001E  3001               	movlw	1
  2312  001F  233F               	fcall	_PIN5
  2313                           
  2314                           ;newmain.c: 176: time_16bit = Timer1();
  2315  0020  22AC               	fcall	_Timer1
  2316  0021  0871               	movf	?_Timer1+1,w
  2317  0022  0020               	movlb	0	; select bank0
  2318  0023  00D5               	movwf	_time_16bit+1
  2319  0024  0870               	movf	?_Timer1,w
  2320  0025  00D4               	movwf	_time_16bit
  2321                           
  2322                           ;newmain.c: 177: printf("%d ", time_16bit);
  2323  0026  3077               	movlw	low (STR_2| (0+32768))
  2324  0027  00A0               	movwf	i1printf@f
  2325  0028  3083               	movlw	high (STR_2| (0+32768))
  2326  0029  00A1               	movwf	i1printf@f+1
  2327  002A  0855               	movf	_time_16bit+1,w
  2328  002B  00A3               	movwf	?i1_printf+3
  2329  002C  0854               	movf	_time_16bit,w
  2330  002D  00A2               	movwf	?i1_printf+2
  2331  002E  2118               	fcall	i1_printf
  2332  002F                     i1l1555:	
  2333                           
  2334                           ;newmain.c: 179: }
  2335                           ;newmain.c: 181: IOCAFbits.IOCAF4 = 0;
  2336  002F  0027               	movlb	7	; select bank7
  2337  0030  1213               	bcf	19,4	;volatile
  2338                           
  2339                           ;newmain.c: 182: }
  2340  0031  283E               	goto	i1l89
  2341  0032                     i1l85:	
  2342                           
  2343                           ;newmain.c: 184: else if (PIR1bits.RCIF){
  2344  0032  0020               	movlb	0	; select bank0
  2345  0033  1E91               	btfss	17,5	;volatile
  2346  0034  283E               	goto	i1l89
  2347                           
  2348                           ;newmain.c: 188: mydata = getch();
  2349  0035  2371               	fcall	_getch
  2350  0036  0020               	movlb	0	; select bank0
  2351  0037  00AE               	movwf	??_ISR
  2352  0038  082E               	movf	??_ISR,w
  2353  0039  00D8               	movwf	_mydata	;volatile
  2354                           
  2355                           ;newmain.c: 191: RCREG = 0;
  2356  003A  0023               	movlb	3	; select bank3
  2357  003B  0199               	clrf	25	;volatile
  2358                           
  2359                           ;newmain.c: 192: PIR1bits.RCIF = 0;
  2360  003C  0020               	movlb	0	; select bank0
  2361  003D  1291               	bcf	17,5	;volatile
  2362  003E                     i1l89:	
  2363                           ;newmain.c: 193: }
  2364                           ;newmain.c: 195: return;
  2365                           
  2366  003E  0020               	movlb	0	; select bank0
  2367  003F  082F               	movf	??_ISR+1,w
  2368  0040  00FF               	movwf	127
  2369  0041  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2370  0042  0009               	retfie
  2371  0043                     __end_of_ISR:	
  2372                           
  2373                           	psect	text11
  2374  0118                     __ptext11:	
  2375 ;; *************** function i1_printf *****************
  2376 ;; Defined at:
  2377 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2380 ;;		 -> STR_2(4), STR_1(9), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  printf          4    0        struct .
  2383 ;;  printf          2   11[BANK0 ] unsigned int 
  2384 ;;  printf          2    0        PTR const unsigned char 
  2385 ;;  printf          2    0        unsigned int 
  2386 ;;  printf          1   13[BANK0 ] char 
  2387 ;;  printf          1   10[BANK0 ] char 
  2388 ;;  printf          1    9[BANK0 ] unsigned char 
  2389 ;;  printf          1    8[BANK0 ] PTR void [1]
  2390 ;;		 -> ?i1_printf(2), ?_printf(2), 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  2    0[BANK0 ] int 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1
  2400 ;;      Params:         0       4       0
  2401 ;;      Locals:         0       6       0
  2402 ;;      Temps:          0       4       0
  2403 ;;      Totals:         0      14       0
  2404 ;;Total ram usage:       14 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		i1___lwdiv
  2409 ;;		i1___lwmod
  2410 ;;		i1_putch
  2411 ;; This function is called by:
  2412 ;;		_ISR
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function i1_printf
  2418  0118                     i1_printf:	
  2419                           
  2420                           ;doprnt.c: 466: va_list ap;
  2421                           ;doprnt.c: 499: signed char c;
  2422                           ;doprnt.c: 506: signed char prec;
  2423                           ;doprnt.c: 508: unsigned char flag;
  2424                           ;doprnt.c: 523: union {
  2425                           ;doprnt.c: 524: unsigned long vd;
  2426                           ;doprnt.c: 525: double integ;
  2427                           ;doprnt.c: 526: } tmpval;
  2428                           ;doprnt.c: 528: unsigned int val;
  2429                           ;doprnt.c: 529: unsigned len;
  2430                           ;doprnt.c: 530: const char * cp;
  2431                           ;doprnt.c: 533: *ap = __va_start();
  2432                           
  2433                           ;incstack = 0
  2434                           ; Regs used in i1_printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2435  0118  3022               	movlw	(low ((?i1_printf| 0+2)))& (0+255)
  2436  0119  0020               	movlb	0	; select bank0
  2437  011A  00A4               	movwf	??i1_printf
  2438  011B  0824               	movf	??i1_printf,w
  2439  011C  00A8               	movwf	i1printf@ap
  2440  011D                     i1l1489:	
  2441                           ;doprnt.c: 536: while(c = *f++) {
  2442                           
  2443  011D  0020               	movlb	0	; select bank0
  2444  011E  0821               	movf	i1printf@f+1,w
  2445  011F  00A5               	movwf	??i1_printf+1
  2446  0120  0820               	movf	i1printf@f,w
  2447  0121  00A4               	movwf	??i1_printf
  2448  0122  0AA0               	incf	i1printf@f,f
  2449  0123  1903               	skipnz
  2450  0124  0AA1               	incf	i1printf@f+1,f
  2451  0125  0824               	movf	??i1_printf,w
  2452  0126  0084               	movwf	4
  2453  0127  0825               	movf	??i1_printf+1,w
  2454  0128  0085               	movwf	5
  2455  0129  0800               	movf	0,w	;code access
  2456  012A  00A6               	movwf	??i1_printf+2
  2457  012B  0826               	movf	??i1_printf+2,w
  2458  012C  00AD               	movwf	i1printf@c
  2459  012D  082D               	movf	i1printf@c,w
  2460  012E  1903               	btfsc	3,2
  2461  012F  0008               	return
  2462                           
  2463                           ;doprnt.c: 538: if(c != '%')
  2464  0130  3025               	movlw	37
  2465  0131  062D               	xorwf	i1printf@c,w
  2466  0132  1903               	btfsc	3,2
  2467  0133  2937               	goto	i1l1449
  2468                           
  2469                           ;doprnt.c: 540: {
  2470                           ;doprnt.c: 541: (putch(c) );
  2471  0134  082D               	movf	i1printf@c,w
  2472  0135  2364               	fcall	i1_putch
  2473                           
  2474                           ;doprnt.c: 542: continue;
  2475  0136  291D               	goto	i1l1489
  2476  0137                     i1l1449:	
  2477                           
  2478                           ;doprnt.c: 543: }
  2479                           ;doprnt.c: 548: flag = 0;
  2480  0137  0020               	movlb	0	; select bank0
  2481  0138  01A9               	clrf	i1printf@flag
  2482                           
  2483                           ;doprnt.c: 822: }
  2484                           
  2485                           ;doprnt.c: 813: continue;
  2486                           
  2487                           ;doprnt.c: 802: default:
  2488                           
  2489                           ;doprnt.c: 698: case 'i':
  2490                           ;doprnt.c: 699: break;
  2491                           
  2492                           ;doprnt.c: 697: case 'd':
  2493                           
  2494                           ;doprnt.c: 638: goto alldone;
  2495                           
  2496                           ;doprnt.c: 637: case 0:
  2497                           
  2498                           ;doprnt.c: 635: switch(c = *f++) {
  2499  0139  0821               	movf	i1printf@f+1,w
  2500  013A  00A5               	movwf	??i1_printf+1
  2501  013B  0820               	movf	i1printf@f,w
  2502  013C  00A4               	movwf	??i1_printf
  2503  013D  0AA0               	incf	i1printf@f,f
  2504  013E  1903               	skipnz
  2505  013F  0AA1               	incf	i1printf@f+1,f
  2506  0140  0824               	movf	??i1_printf,w
  2507  0141  0084               	movwf	4
  2508  0142  0825               	movf	??i1_printf+1,w
  2509  0143  0085               	movwf	5
  2510  0144  0800               	movf	0,w	;code access
  2511  0145  00AD               	movwf	i1printf@c
  2512                           
  2513                           ; Switch size 1, requested type "space"
  2514                           ; Number of cases is 3, Range of values is 0 to 105
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           10     6 (average)
  2518                           ; direct_byte          218     6 (fixed)
  2519                           ; jumptable            260     6 (fixed)
  2520                           ;	Chosen strategy is simple_byte
  2521  0146  3A00               	xorlw	0	; case 0
  2522  0147  1903               	skipnz
  2523  0148  29C4               	goto	i1l273
  2524  0149  3A64               	xorlw	100	; case 100
  2525  014A  1903               	skipnz
  2526  014B  2950               	goto	i1l1455
  2527  014C  3A0D               	xorlw	13	; case 105
  2528  014D  1903               	skipnz
  2529  014E  2950               	goto	i1l1455
  2530  014F  291D               	goto	i1l1489
  2531  0150                     i1l1455:	
  2532                           
  2533                           ;doprnt.c: 1253: {
  2534                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2535  0150  0828               	movf	i1printf@ap,w
  2536  0151  0086               	movwf	6
  2537  0152  0187               	clrf	7
  2538  0153  3F40               	moviw [0]fsr1
  2539  0154  00AB               	movwf	i1printf@val
  2540  0155  3F41               	moviw [1]fsr1
  2541  0156  00AC               	movwf	i1printf@val+1
  2542  0157  3002               	movlw	2
  2543  0158  00A4               	movwf	??i1_printf
  2544  0159  0824               	movf	??i1_printf,w
  2545  015A  07A8               	addwf	i1printf@ap,f
  2546                           
  2547                           ;doprnt.c: 1261: if((int)val < 0) {
  2548  015B  1FAC               	btfss	i1printf@val+1,7
  2549  015C  2966               	goto	i1l1465
  2550                           
  2551                           ;doprnt.c: 1262: flag |= 0x03;
  2552  015D  3003               	movlw	3
  2553  015E  00A4               	movwf	??i1_printf
  2554  015F  0824               	movf	??i1_printf,w
  2555  0160  04A9               	iorwf	i1printf@flag,f
  2556                           
  2557                           ;doprnt.c: 1263: val = -val;
  2558  0161  09AB               	comf	i1printf@val,f
  2559  0162  09AC               	comf	i1printf@val+1,f
  2560  0163  0AAB               	incf	i1printf@val,f
  2561  0164  1903               	skipnz
  2562  0165  0AAC               	incf	i1printf@val+1,f
  2563  0166                     i1l1465:	
  2564                           
  2565                           ;doprnt.c: 1264: }
  2566                           ;doprnt.c: 1266: }
  2567                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2568  0166  01AD               	clrf	i1printf@c
  2569  0167  0AAD               	incf	i1printf@c,f
  2570  0168  3005               	movlw	5
  2571  0169  062D               	xorwf	i1printf@c,w
  2572  016A  1903               	btfsc	3,2
  2573  016B  298B               	goto	i1l1477
  2574  016C                     i1l1471:	
  2575                           
  2576                           ;doprnt.c: 1306: if(val < dpowers[c])
  2577  016C  082D               	movf	i1printf@c,w
  2578  016D  00A4               	movwf	??i1_printf
  2579  016E  01A5               	clrf	??i1_printf+1
  2580  016F  35A4               	lslf	??i1_printf,f
  2581  0170  0DA5               	rlf	??i1_printf+1,f
  2582  0171  30FD               	movlw	low (_dpowers| (0+32768))
  2583  0172  0724               	addwf	??i1_printf,w
  2584  0173  0084               	movwf	4
  2585  0174  3082               	movlw	high (_dpowers| (0+32768))
  2586  0175  3D25               	addwfc	??i1_printf+1,w
  2587  0176  0085               	movwf	5
  2588  0177  3F00               	moviw [0]fsr0
  2589  0178  00A6               	movwf	??i1_printf+2
  2590  0179  3F01               	moviw [1]fsr0
  2591  017A  00A7               	movwf	??i1_printf+3
  2592  017B  0827               	movf	??i1_printf+3,w
  2593  017C  022C               	subwf	i1printf@val+1,w
  2594  017D  1D03               	skipz
  2595  017E  2981               	goto	u101_25
  2596  017F  0826               	movf	??i1_printf+2,w
  2597  0180  022B               	subwf	i1printf@val,w
  2598  0181                     u101_25:	
  2599  0181  1C03               	btfss	3,0
  2600  0182  298B               	goto	i1l1477
  2601                           
  2602                           ;doprnt.c: 1307: break;
  2603  0183  3001               	movlw	1
  2604  0184  00A4               	movwf	??i1_printf
  2605  0185  0824               	movf	??i1_printf,w
  2606  0186  07AD               	addwf	i1printf@c,f
  2607  0187  3005               	movlw	5
  2608  0188  062D               	xorwf	i1printf@c,w
  2609  0189  1D03               	btfss	3,2
  2610  018A  296C               	goto	i1l1471
  2611  018B                     i1l1477:	
  2612                           
  2613                           ;doprnt.c: 1422: {
  2614                           ;doprnt.c: 1438: if(flag & 0x03)
  2615  018B  0829               	movf	i1printf@flag,w
  2616  018C  3903               	andlw	3
  2617  018D  1903               	btfsc	3,2
  2618  018E  2991               	goto	i1l1481
  2619                           
  2620                           ;doprnt.c: 1439: (putch('-') );
  2621  018F  302D               	movlw	45
  2622  0190  2364               	fcall	i1_putch
  2623  0191                     i1l1481:	
  2624                           
  2625                           ;doprnt.c: 1469: }
  2626                           ;doprnt.c: 1472: prec = c;
  2627  0191  0020               	movlb	0	; select bank0
  2628  0192  082D               	movf	i1printf@c,w
  2629  0193  00A4               	movwf	??i1_printf
  2630  0194  0824               	movf	??i1_printf,w
  2631  0195  00AA               	movwf	i1printf@prec
  2632  0196                     i1l1487:	
  2633                           ;doprnt.c: 1474: while(prec--) {
  2634                           
  2635  0196  30FF               	movlw	255
  2636  0197  0020               	movlb	0	; select bank0
  2637  0198  00A4               	movwf	??i1_printf
  2638  0199  0824               	movf	??i1_printf,w
  2639  019A  07AA               	addwf	i1printf@prec,f
  2640  019B  0A2A               	incf	i1printf@prec,w
  2641  019C  1903               	btfsc	3,2
  2642  019D  291D               	goto	i1l1489
  2643                           
  2644                           ;doprnt.c: 1478: {
  2645                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2646  019E  300A               	movlw	10
  2647  019F  00F8               	movwf	i1___lwmod@divisor
  2648  01A0  3000               	movlw	0
  2649  01A1  00F9               	movwf	i1___lwmod@divisor+1
  2650  01A2  082A               	movf	i1printf@prec,w
  2651  01A3  00A4               	movwf	??i1_printf
  2652  01A4  01A5               	clrf	??i1_printf+1
  2653  01A5  35A4               	lslf	??i1_printf,f
  2654  01A6  0DA5               	rlf	??i1_printf+1,f
  2655  01A7  30FD               	movlw	low (_dpowers| (0+32768))
  2656  01A8  0724               	addwf	??i1_printf,w
  2657  01A9  0084               	movwf	4
  2658  01AA  3082               	movlw	high (_dpowers| (0+32768))
  2659  01AB  3D25               	addwfc	??i1_printf+1,w
  2660  01AC  0085               	movwf	5
  2661  01AD  3F00               	moviw [0]fsr0
  2662  01AE  00F0               	movwf	i1___lwdiv@divisor
  2663  01AF  3F01               	moviw [1]fsr0
  2664  01B0  00F1               	movwf	i1___lwdiv@divisor+1
  2665  01B1  082C               	movf	i1printf@val+1,w
  2666  01B2  00F3               	movwf	i1___lwdiv@dividend+1
  2667  01B3  082B               	movf	i1printf@val,w
  2668  01B4  00F2               	movwf	i1___lwdiv@dividend
  2669  01B5  21FA               	fcall	i1___lwdiv
  2670  01B6  0871               	movf	?i1___lwdiv+1,w
  2671  01B7  00FB               	movwf	i1___lwmod@dividend+1
  2672  01B8  0870               	movf	?i1___lwdiv,w
  2673  01B9  00FA               	movwf	i1___lwmod@dividend
  2674  01BA  225B               	fcall	i1___lwmod
  2675  01BB  0878               	movf	?i1___lwmod,w
  2676  01BC  3E30               	addlw	48
  2677  01BD  0020               	movlb	0	; select bank0
  2678  01BE  00A6               	movwf	??i1_printf+2
  2679  01BF  0826               	movf	??i1_printf+2,w
  2680  01C0  00AD               	movwf	i1printf@c
  2681                           
  2682                           ;doprnt.c: 1523: }
  2683                           ;doprnt.c: 1524: (putch(c) );
  2684  01C1  082D               	movf	i1printf@c,w
  2685  01C2  2364               	fcall	i1_putch
  2686  01C3  2996               	goto	i1l1487
  2687  01C4                     i1l273:	
  2688                           ;doprnt.c: 1540: return 0;
  2689                           ;	Return value of i1_printf is never used
  2690                           
  2691                           ;doprnt.c: 1525: }
  2692                           ;doprnt.c: 1533: }
  2693                           ;doprnt.c: 1535: alldone:
  2694                           
  2695  01C4  0008               	return
  2696  01C5                     __end_ofi1_printf:	
  2697                           
  2698                           	psect	text12
  2699  0364                     __ptext12:	
  2700 ;; *************** function i1_putch *****************
  2701 ;; Defined at:
  2702 ;;		line 15 in file "USART.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  c               1    wreg     unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  c               1    0[COMMON] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1
  2716 ;;      Params:         0       0       0
  2717 ;;      Locals:         1       0       0
  2718 ;;      Temps:          0       0       0
  2719 ;;      Totals:         1       0       0
  2720 ;;Total ram usage:        1 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		i1_printf
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function i1_putch
  2731  0364                     i1_putch:	
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in i1_putch: [wreg]
  2735                           ;i1putch@c stored from wreg
  2736  0364  00F0               	movwf	i1putch@c
  2737  0365                     i1l153:	
  2738                           ;USART.c: 17: while(!TRMT);
  2739                           
  2740  0365  0023               	movlb	3	; select bank3
  2741  0366  1C9E               	btfss	30,1	;volatile
  2742  0367  2B65               	goto	i1l153
  2743                           
  2744                           ;USART.c: 18: TXREG=c;
  2745  0368  0870               	movf	i1putch@c,w
  2746  0369  009A               	movwf	26	;volatile
  2747  036A  0008               	return
  2748  036B                     __end_ofi1_putch:	
  2749                           
  2750                           	psect	text13
  2751  025B                     __ptext13:	
  2752 ;; *************** function i1___lwmod *****************
  2753 ;; Defined at:
  2754 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  divisor         2    8[COMMON] unsigned int 
  2757 ;;  dividend        2   10[COMMON] unsigned int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  __lwmod         1   13[COMMON] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2    8[COMMON] unsigned int 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1
  2769 ;;      Params:         4       0       0
  2770 ;;      Locals:         1       0       0
  2771 ;;      Temps:          1       0       0
  2772 ;;      Totals:         6       0       0
  2773 ;;Total ram usage:        6 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		i1_printf
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function i1___lwmod
  2784  025B                     i1___lwmod:	
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  2788  025B  0878               	movf	i1___lwmod@divisor,w
  2789  025C  0479               	iorwf	i1___lwmod@divisor+1,w
  2790  025D  1903               	btfsc	3,2
  2791  025E  2A82               	goto	i1l1273
  2792  025F  01FD               	clrf	i1___lwmod@counter
  2793  0260  0AFD               	incf	i1___lwmod@counter,f
  2794  0261                     i1l1263:	
  2795  0261  1BF9               	btfsc	i1___lwmod@divisor+1,7
  2796  0262  2A6D               	goto	i1l1265
  2797  0263  3001               	movlw	1
  2798  0264                     u83_25:	
  2799  0264  35F8               	lslf	i1___lwmod@divisor,f
  2800  0265  0DF9               	rlf	i1___lwmod@divisor+1,f
  2801  0266  0B89               	decfsz	9,f
  2802  0267  2A64               	goto	u83_25
  2803  0268  3001               	movlw	1
  2804  0269  00FC               	movwf	??i1___lwmod
  2805  026A  087C               	movf	??i1___lwmod,w
  2806  026B  07FD               	addwf	i1___lwmod@counter,f
  2807  026C  2A61               	goto	i1l1263
  2808  026D                     i1l1265:	
  2809  026D  0879               	movf	i1___lwmod@divisor+1,w
  2810  026E  027B               	subwf	i1___lwmod@dividend+1,w
  2811  026F  1D03               	skipz
  2812  0270  2A73               	goto	u85_25
  2813  0271  0878               	movf	i1___lwmod@divisor,w
  2814  0272  027A               	subwf	i1___lwmod@dividend,w
  2815  0273                     u85_25:	
  2816  0273  1C03               	skipc
  2817  0274  2A79               	goto	i1l1269
  2818  0275  0878               	movf	i1___lwmod@divisor,w
  2819  0276  02FA               	subwf	i1___lwmod@dividend,f
  2820  0277  0879               	movf	i1___lwmod@divisor+1,w
  2821  0278  3BFB               	subwfb	i1___lwmod@dividend+1,f
  2822  0279                     i1l1269:	
  2823  0279  3001               	movlw	1
  2824  027A                     u86_25:	
  2825  027A  36F9               	lsrf	i1___lwmod@divisor+1,f
  2826  027B  0CF8               	rrf	i1___lwmod@divisor,f
  2827  027C  0B89               	decfsz	9,f
  2828  027D  2A7A               	goto	u86_25
  2829  027E  3001               	movlw	1
  2830  027F  02FD               	subwf	i1___lwmod@counter,f
  2831  0280  1D03               	btfss	3,2
  2832  0281  2A6D               	goto	i1l1265
  2833  0282                     i1l1273:	
  2834  0282  087B               	movf	i1___lwmod@dividend+1,w
  2835  0283  00F9               	movwf	?i1___lwmod+1
  2836  0284  087A               	movf	i1___lwmod@dividend,w
  2837  0285  00F8               	movwf	?i1___lwmod
  2838  0286  0008               	return
  2839  0287                     __end_ofi1___lwmod:	
  2840                           
  2841                           	psect	text14
  2842  01FA                     __ptext14:	
  2843 ;; *************** function i1___lwdiv *****************
  2844 ;; Defined at:
  2845 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  divisor         2    0[COMMON] unsigned int 
  2848 ;;  dividend        2    2[COMMON] unsigned int 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  __lwdiv         2    5[COMMON] unsigned int 
  2851 ;;  __lwdiv         1    7[COMMON] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2    0[COMMON] unsigned int 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1
  2861 ;;      Params:         4       0       0
  2862 ;;      Locals:         3       0       0
  2863 ;;      Temps:          1       0       0
  2864 ;;      Totals:         8       0       0
  2865 ;;Total ram usage:        8 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		i1_printf
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function i1___lwdiv
  2876  01FA                     i1___lwdiv:	
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  2880  01FA  01F5               	clrf	i1___lwdiv@quotient
  2881  01FB  01F6               	clrf	i1___lwdiv@quotient+1
  2882  01FC  0870               	movf	i1___lwdiv@divisor,w
  2883  01FD  0471               	iorwf	i1___lwdiv@divisor+1,w
  2884  01FE  1903               	btfsc	3,2
  2885  01FF  2A29               	goto	i1l1251
  2886  0200  01F7               	clrf	i1___lwdiv@counter
  2887  0201  0AF7               	incf	i1___lwdiv@counter,f
  2888  0202                     i1l1239:	
  2889  0202  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  2890  0203  2A0E               	goto	i1l1241
  2891  0204  3001               	movlw	1
  2892  0205                     u76_25:	
  2893  0205  35F0               	lslf	i1___lwdiv@divisor,f
  2894  0206  0DF1               	rlf	i1___lwdiv@divisor+1,f
  2895  0207  0B89               	decfsz	9,f
  2896  0208  2A05               	goto	u76_25
  2897  0209  3001               	movlw	1
  2898  020A  00F4               	movwf	??i1___lwdiv
  2899  020B  0874               	movf	??i1___lwdiv,w
  2900  020C  07F7               	addwf	i1___lwdiv@counter,f
  2901  020D  2A02               	goto	i1l1239
  2902  020E                     i1l1241:	
  2903  020E  3001               	movlw	1
  2904  020F                     u78_25:	
  2905  020F  35F5               	lslf	i1___lwdiv@quotient,f
  2906  0210  0DF6               	rlf	i1___lwdiv@quotient+1,f
  2907  0211  0B89               	decfsz	9,f
  2908  0212  2A0F               	goto	u78_25
  2909  0213  0871               	movf	i1___lwdiv@divisor+1,w
  2910  0214  0273               	subwf	i1___lwdiv@dividend+1,w
  2911  0215  1D03               	skipz
  2912  0216  2A19               	goto	u79_25
  2913  0217  0870               	movf	i1___lwdiv@divisor,w
  2914  0218  0272               	subwf	i1___lwdiv@dividend,w
  2915  0219                     u79_25:	
  2916  0219  1C03               	skipc
  2917  021A  2A20               	goto	i1l1247
  2918  021B  0870               	movf	i1___lwdiv@divisor,w
  2919  021C  02F2               	subwf	i1___lwdiv@dividend,f
  2920  021D  0871               	movf	i1___lwdiv@divisor+1,w
  2921  021E  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  2922  021F  1475               	bsf	i1___lwdiv@quotient,0
  2923  0220                     i1l1247:	
  2924  0220  3001               	movlw	1
  2925  0221                     u80_25:	
  2926  0221  36F1               	lsrf	i1___lwdiv@divisor+1,f
  2927  0222  0CF0               	rrf	i1___lwdiv@divisor,f
  2928  0223  0B89               	decfsz	9,f
  2929  0224  2A21               	goto	u80_25
  2930  0225  3001               	movlw	1
  2931  0226  02F7               	subwf	i1___lwdiv@counter,f
  2932  0227  1D03               	btfss	3,2
  2933  0228  2A0E               	goto	i1l1241
  2934  0229                     i1l1251:	
  2935  0229  0876               	movf	i1___lwdiv@quotient+1,w
  2936  022A  00F1               	movwf	?i1___lwdiv+1
  2937  022B  0875               	movf	i1___lwdiv@quotient,w
  2938  022C  00F0               	movwf	?i1___lwdiv
  2939  022D  0008               	return
  2940  022E                     __end_ofi1___lwdiv:	
  2941                           
  2942                           	psect	text15
  2943  0331                     __ptext15:	
  2944 ;; *************** function i1_PIN6 *****************
  2945 ;; Defined at:
  2946 ;;		line 91 in file "IO_Controls.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  OnOff           1    wreg     unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  OnOff           1    1[COMMON] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1
  2960 ;;      Params:         0       0       0
  2961 ;;      Locals:         1       0       0
  2962 ;;      Temps:          1       0       0
  2963 ;;      Totals:         2       0       0
  2964 ;;Total ram usage:        2 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_ISR
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           
  2974                           ;psect for function i1_PIN6
  2975  0331                     i1_PIN6:	
  2976                           
  2977                           ;incstack = 0
  2978                           ; Regs used in i1_PIN6: [wreg+status,2]
  2979                           ;i1PIN6@OnOff stored from wreg
  2980  0331  00F1               	movwf	i1PIN6@OnOff
  2981                           
  2982                           ;IO_Controls.c: 93: portC.portCByte = PORTC;
  2983  0332  0020               	movlb	0	; select bank0
  2984  0333  080E               	movf	14,w	;volatile
  2985  0334  00F0               	movwf	??i1_PIN6
  2986  0335  0870               	movf	??i1_PIN6,w
  2987  0336  00D9               	movwf	_portC
  2988                           
  2989                           ;IO_Controls.c: 94: portC.bits.Pin6 = OnOff;
  2990  0337  0871               	movf	i1PIN6@OnOff,w
  2991  0338  3901               	andlw	1
  2992  0339  1259               	bcf	_portC,4
  2993  033A  1D03               	skipz
  2994  033B  1659               	bsf	_portC,4
  2995                           
  2996                           ;IO_Controls.c: 95: PORTC=portC.portCByte;
  2997  033C  0859               	movf	_portC,w
  2998  033D  008E               	movwf	14	;volatile
  2999  033E  0008               	return
  3000  033F                     __end_ofi1_PIN6:	
  3001                           ;IO_Controls.c: 96: return;
  3002                           
  3003                           
  3004                           	psect	text16
  3005  0371                     __ptext16:	
  3006 ;; *************** function _getch *****************
  3007 ;; Defined at:
  3008 ;;		line 21 in file "USART.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      unsigned char 
  3015 ;; Registers used:
  3016 ;;		wreg
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1
  3022 ;;      Params:         0       0       0
  3023 ;;      Locals:         0       0       0
  3024 ;;      Temps:          0       0       0
  3025 ;;      Totals:         0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_ISR
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _getch
  3037  0371                     _getch:	
  3038  0371                     i1l159:	
  3039                           ;USART.c: 24: continue;
  3040                           
  3041                           ;USART.c: 23: while(!RCIF)
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _getch: [wreg]
  3045                           
  3046  0371  0020               	movlb	0	; select bank0
  3047  0372  1E91               	btfss	17,5	;volatile
  3048  0373  2B71               	goto	i1l159
  3049                           
  3050                           ;USART.c: 25: return RCREG;
  3051  0374  0023               	movlb	3	; select bank3
  3052  0375  0819               	movf	25,w	;volatile
  3053  0376  0008               	return
  3054  0377                     __end_of_getch:	
  3055                           
  3056                           	psect	text17
  3057  02AC                     __ptext17:	
  3058 ;; *************** function _Timer1 *****************
  3059 ;; Defined at:
  3060 ;;		line 32 in file "Timer.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  2    0[COMMON] unsigned int 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1
  3074 ;;      Params:         2       0       0
  3075 ;;      Locals:         0       0       0
  3076 ;;      Temps:          2       0       0
  3077 ;;      Totals:         4       0       0
  3078 ;;Total ram usage:        4 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_ISR
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           
  3088                           ;psect for function _Timer1
  3089  02AC                     _Timer1:	
  3090                           
  3091                           ;Timer.c: 34: T1CONbits.TMR1ON = 0;
  3092                           
  3093                           ;incstack = 0
  3094                           ; Regs used in _Timer1: [wreg+status,2]
  3095  02AC  0020               	movlb	0	; select bank0
  3096  02AD  1018               	bcf	24,0	;volatile
  3097                           
  3098                           ;Timer.c: 36: temp_time = TMR1H;
  3099  02AE  0817               	movf	23,w	;volatile
  3100  02AF  00F2               	movwf	??_Timer1
  3101  02B0  01F3               	clrf	??_Timer1+1
  3102  02B1  0872               	movf	??_Timer1,w
  3103  02B2  00C6               	movwf	_temp_time
  3104  02B3  0873               	movf	??_Timer1+1,w
  3105  02B4  00C7               	movwf	_temp_time+1
  3106                           
  3107                           ;Timer.c: 37: temp_time <<= 8;
  3108  02B5  3008               	movlw	8
  3109  02B6                     u96_25:	
  3110  02B6  35C6               	lslf	_temp_time,f
  3111  02B7  0DC7               	rlf	_temp_time+1,f
  3112  02B8  0B89               	decfsz	9,f
  3113  02B9  2AB6               	goto	u96_25
  3114                           
  3115                           ;Timer.c: 38: temp_time += TMR1L;
  3116  02BA  0816               	movf	22,w	;volatile
  3117  02BB  00F2               	movwf	??_Timer1
  3118  02BC  01F3               	clrf	??_Timer1+1
  3119  02BD  0872               	movf	??_Timer1,w
  3120  02BE  07C6               	addwf	_temp_time,f
  3121  02BF  0873               	movf	??_Timer1+1,w
  3122  02C0  3DC7               	addwfc	_temp_time+1,f
  3123                           
  3124                           ;Timer.c: 40: time = temp_time;
  3125  02C1  0847               	movf	_temp_time+1,w
  3126  02C2  00C5               	movwf	_time+1
  3127  02C3  0846               	movf	_temp_time,w
  3128  02C4  00C4               	movwf	_time
  3129                           
  3130                           ;Timer.c: 42: TMR1L = 0x00;
  3131  02C5  0196               	clrf	22	;volatile
  3132                           
  3133                           ;Timer.c: 43: TMR1H = 0x00;
  3134  02C6  0197               	clrf	23	;volatile
  3135                           
  3136                           ;Timer.c: 44: temp_time = 0;
  3137  02C7  01C6               	clrf	_temp_time
  3138  02C8  01C7               	clrf	_temp_time+1
  3139                           
  3140                           ;Timer.c: 46: return time;
  3141  02C9  0845               	movf	_time+1,w
  3142  02CA  00F1               	movwf	?_Timer1+1
  3143  02CB  0844               	movf	_time,w
  3144  02CC  00F0               	movwf	?_Timer1
  3145  02CD  0008               	return
  3146  02CE                     __end_of_Timer1:	
  3147                           
  3148                           	psect	text18
  3149  033F                     __ptext18:	
  3150 ;; *************** function _PIN5 *****************
  3151 ;; Defined at:
  3152 ;;		line 83 in file "IO_Controls.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  OnOff           1    wreg     unsigned char 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  OnOff           1    1[COMMON] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1
  3166 ;;      Params:         0       0       0
  3167 ;;      Locals:         1       0       0
  3168 ;;      Temps:          1       0       0
  3169 ;;      Totals:         2       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_ISR
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _PIN5
  3181  033F                     _PIN5:	
  3182                           
  3183                           ;incstack = 0
  3184                           ; Regs used in _PIN5: [wreg+status,2]
  3185                           ;PIN5@OnOff stored from wreg
  3186  033F  00F1               	movwf	PIN5@OnOff
  3187                           
  3188                           ;IO_Controls.c: 85: portC.portCByte = PORTC;
  3189  0340  0020               	movlb	0	; select bank0
  3190  0341  080E               	movf	14,w	;volatile
  3191  0342  00F0               	movwf	??_PIN5
  3192  0343  0870               	movf	??_PIN5,w
  3193  0344  00D9               	movwf	_portC
  3194                           
  3195                           ;IO_Controls.c: 86: portC.bits.Pin5 = OnOff;
  3196  0345  0871               	movf	PIN5@OnOff,w
  3197  0346  3901               	andlw	1
  3198  0347  12D9               	bcf	_portC,5
  3199  0348  1D03               	skipz
  3200  0349  16D9               	bsf	_portC,5
  3201                           
  3202                           ;IO_Controls.c: 87: PORTC=portC.portCByte;
  3203  034A  0859               	movf	_portC,w
  3204  034B  008E               	movwf	14	;volatile
  3205  034C  0008               	return
  3206  034D                     __end_of_PIN5:	
  3207                           ;IO_Controls.c: 88: return;
  3208                           
  3209  007E                     btemp	set	126	;btemp
  3210  007E                     int$flags	set	126
  3211  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    10
    Data        2
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      61
    BANK1            32      6       6

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[4]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?i1_printf(BANK0[2]), ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_printf->i1___lwmod
    i1___lwmod->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    _ISR->i1_printf

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1516
                          _InitUSART
                          _Init_TMR1
                      _InitialiseADC
                    _InitialisePorts
                               _PIN6
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1494
                                             30 BANK0      6     4      2
                                              0 BANK1      6     6      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                             24 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     395
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _PIN6                                                 2     2      0      22
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitialisePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitialiseADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0     903
                                             14 BANK0      2     2      0
                               _PIN5
                             _Timer1
                              _getch
                             i1_PIN6
                           i1_printf
 ---------------------------------------------------------------------------------
 (4) i1_printf                                            22    18      4     859
                                              0 BANK0     14    10      4
                          i1___lwdiv
                          i1___lwmod
                            i1_putch
 ---------------------------------------------------------------------------------
 (5) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) i1_PIN6                                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Timer1                                               4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PIN5                                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitUSART
   _Init_TMR1
   _InitialiseADC
   _InitialisePorts
   _PIN6
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _ISR (ROOT)
   _PIN5
   _Timer1
   _getch
   i1_PIN6
   i1_printf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      51       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      3D       6       76.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      6       6       8       18.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      51       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Apr 06 10:19:17 2018

             __CFG_CP$OFF 0000                        l71 028A                        l74 02AB  
                     l153 035C                       l273 0117              __CFG_CPD$OFF 0000  
                     _ISR 0004              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      l1621 01CE  
                    l1623 01DA                      l1703 00DF                      l1633 01F5  
                    l1705 0057                      l1651 024D                      l1629 01EC  
                    l1645 0235                      l1647 0241                      l1655 0256  
                    l1671 008D                      l1681 00A7                      l1665 0072  
                    l1693 00D2                      l1687 00AD                      l1697 00D8  
                    _ADIE 048E                      _ADFM 04F7                      _ADON 04E8  
                    STR_1 0307                      STR_2 0377                      u1205 01D1  
                    u1225 01DB                      u1305 024E                      u1235 01E5  
                    u1245 01ED                      _LATA 010C                      _LATC 010E  
                    u1417 02F5                      u1275 0238                      u1355 00C6  
                    u1295 0247                      _RCIF 008D                      _PIN5 033F  
                    _PIN6 0323                      i1l82 0015                      i1l85 0032  
                    i1l89 003E                      _TRMT 0CF1                      _TXIF 008C  
            __CFG_WRT$OFF 0000                      _main 0287                      _time 0044  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0043             __CFG_IESO$OFF 0000  
         __end_ofi1_putch 036B    __size_of_InitialiseADC 0016                     ??_ISR 002E  
                   ?_PIN5 0070                     ?_PIN6 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _T1CON 0018           __end_of___lwdiv 01FA  
                   i1l153 0365                     i1l159 0371                     i1l273 01C4  
         __end_of___lwmod 025B                     _RCREG 0199                     _TMR1H 0017  
                   _TMR1L 0016                     _SPBRG 019B                     _PORTA 000C  
                   _PORTC 000E                     u80_25 0221                     _TRISA 008C  
                   _TRISC 008E                     u83_25 0264                     u76_25 0205  
                   u85_25 0273                     u78_25 020F                     u86_25 027A  
                   u79_25 0219                     u96_25 02B6                     _TXREG 019A  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000        i1___lwmod@dividend 007A  
                   _getch 0371           __end_of_dpowers 0307                     _count 0050  
                   _portA 005A                     _portC 0059                     _putch 035A  
                   status 0003                     wtemp0 007E        __size_ofi1___lwdiv 0034  
      __size_ofi1___lwmod 002C          __end_ofi1_printf 01C5              __end_of_PIN5 034D  
            __end_of_PIN6 0331                i1printf@ap 0028            __CFG_MCLRE$OFF 0000  
         __initialization 0044              __end_of_main 02AC                    ??_PIN5 0070  
                  ??_PIN6 0030                    ??_main 0044            __CFG_PLLEN$OFF 0000  
           _InitialiseADC 02E7                    ?_getch 0070                    _ADRESH 009C  
                  _ADRESL 009B                    _ANSELA 018C                    ?_putch 0070  
                  _ANSELC 018E                    _T1GCON 0019                    _HFIOFR 04D4  
                  u101_25 0181                    i1l1241 020E                    i1l1251 0229  
                  i1l1247 0220                    i1l1239 0202                    i1l1263 0261  
                  i1l1265 026D                    i1l1273 0282                    i1l1269 0279  
                  i1l1471 016C                    i1l1455 0150                    i1l1543 0013  
                  i1l1481 0191                    i1l1465 0166                    i1l1449 0137  
                  i1l1555 002F                    i1l1477 018B                    i1l1487 0196  
                  i1l1489 011D        __size_of_InitUSART 0013                    _INTCON 000B  
                  _FVRCON 0117                    i1_PIN6 0331                    _OSCCON 0099  
               ??i1_putch 0070        __size_of_Init_TMR1 000D                    _Timer1 02AC  
          __CFG_STVREN$ON 0000                 ??___lwdiv 0034                 ??___lwmod 003C  
                  _mydata 0058                    _printf 0051         __end_ofi1___lwdiv 022E  
          ?_InitialiseADC 0070         __end_ofi1___lwmod 0287                    putch@c 0030  
 __end_of__initialization 004E               i1printf@val 002B            __pcstackCOMMON 0070  
            __pidataBANK0 037B  __size_of_InitialisePorts 0019             __end_of_getch 0377  
           __end_of_putch 0364         __end_of_InitUSART 0323         __end_of_Init_TMR1 035A  
               PIN5@OnOff 0071                 PIN6@OnOff 0031                 ?i1_printf 0020  
                 ??_getch 0070                   ??_putch 0030                __pbssBANK0 0044  
                 ?i1_PIN6 0070                   ?_Timer1 0070                __pmaintext 0287  
              __pintentry 0004                   ?_printf 003E           ??_InitialiseADC 0030  
              ??i1_printf 0024                   i1_putch 0364           __size_ofi1_PIN6 000E  
         __size_of_Timer1 0022                   _adcData 0056                   ___lwdiv 01C5  
                 ___lwmod 022E                   __ptext1 0051                   __ptext2 035A  
                 __ptext3 022E                   __ptext4 01C5                   __ptext5 0323  
                 __ptext6 02CE                   __ptext7 02E7                   __ptext8 034D  
                 __ptext9 0310           __size_of_printf 00C7                   _negFlag 004C  
            __size_of_ISR 003F         ??_InitialisePorts 0030                 _T1CONbits 0018  
                 _dpowers 02FD         i1___lwdiv@divisor 0070         i1___lwdiv@counter 0077  
               _IOCAFbits 0393                   _posFlag 005B                 _IOCAPbits 0391  
                 clrloop0 036C      end_of_initialization 004E                _time_16bit 0054  
               _RCSTAbits 019D                   printf@c 00A5                   printf@f 003E  
               _PORTAbits 000C                _printCount 0048          __CFG_FOSC$INTOSC 0000  
               _TRISAbits 008C                 i1___lwdiv 01FA                 i1___lwmod 025B  
               _TXSTAbits 019E            __end_ofi1_PIN6 033F              i1printf@flag 0029  
            i1printf@prec 002A            __end_of_Timer1 02CE               _BAUDCONbits 019F  
       i1___lwmod@divisor 0078         i1___lwmod@counter 007D            __end_of_printf 0118  
               _InitUSART 0310       start_initialization 0044                 _Init_TMR1 034D  
             __end_of_ISR 0043                 i1printf@c 002D                 i1printf@f 0020  
              ?i1___lwdiv 0070                ?i1___lwmod 0078         __size_ofi1_printf 00AD  
                ??i1_PIN6 0070                  ??_Timer1 0072               __pdataBANK0 005B  
                ??_printf 0040                ?_InitUSART 0070                 ___latbits 0000  
              ?_Init_TMR1 0070             __pcstackBANK0 0020             __pcstackBANK1 00A0  
                ?i1_putch 0070          ___lwdiv@dividend 0032           _InitialisePorts 02CE  
             i1PIN6@OnOff 0071                  ?___lwdiv 0030                  ?___lwmod 0038  
   __end_of_InitialiseADC 02FD          ___lwdiv@quotient 0036               ??i1___lwdiv 0074  
             ??i1___lwmod 007C            __size_of_getch 0006            __size_of_putch 000A  
               clear_ram0 036B                 _sampleVal 0052                  _PIE1bits 0091  
                _PIR1bits 0011                  _GO_nDONE 04E9                 _temp_time 0046  
              _ADCON0bits 009D                 _startFlag 004E                _ADCON1bits 009E  
              printf@flag 00A1                printf@prec 00A2                 _zeroCount 004A  
             ??_InitUSART 0030               ??_Init_TMR1 0030                  i1_printf 0118  
                i1putch@c 0070   __end_of_InitialisePorts 02E7          __size_ofi1_putch 0007  
              _APFCONbits 011D          __size_of___lwdiv 0035          __size_of___lwmod 002D  
              _ANSELAbits 018C           ___lwdiv@divisor 0030           ___lwdiv@counter 0035  
                __ptext11 0118                  __ptext12 0364                  __ptext13 025B  
                __ptext14 01FA                  __ptext15 0331                  __ptext16 0371  
                __ptext17 02AC                  __ptext18 033F             __size_of_PIN5 000E  
           __size_of_PIN6 000E        i1___lwdiv@dividend 0072             __size_of_main 0025  
                int$flags 007E                 printf@val 00A3        i1___lwdiv@quotient 0075  
              _INTCONbits 000B                  intlevel1 0000          ___lwmod@dividend 003A  
        ?_InitialisePorts 0070         __CFG_CLKOUTEN$OFF 0000                  printf@ap 00A0  
           __pstringtext1 02FD             __pstringtext2 0377             __pstringtext3 0000  
              _OPTION_REG 0095           ___lwmod@divisor 0038           ___lwmod@counter 003D  
