

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 03 06:46:19 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1824
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 1.45
    60                           ; Generated 16/11/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F1824 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000E                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  008C                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  010C                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  011A                     	;# 
   149  011B                     	;# 
   150  011D                     	;# 
   151  011E                     	;# 
   152  018C                     	;# 
   153  018E                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0294                     	;# 
   197  0295                     	;# 
   198  0295                     	;# 
   199  0296                     	;# 
   200  0298                     	;# 
   201  0298                     	;# 
   202  0299                     	;# 
   203  029A                     	;# 
   204  029B                     	;# 
   205  029C                     	;# 
   206  029D                     	;# 
   207  029E                     	;# 
   208  029E                     	;# 
   209  0311                     	;# 
   210  0311                     	;# 
   211  0312                     	;# 
   212  0313                     	;# 
   213  0318                     	;# 
   214  0318                     	;# 
   215  0319                     	;# 
   216  031A                     	;# 
   217  038C                     	;# 
   218  038E                     	;# 
   219  0391                     	;# 
   220  0392                     	;# 
   221  0393                     	;# 
   222  039A                     	;# 
   223  039C                     	;# 
   224  039D                     	;# 
   225  039E                     	;# 
   226  039F                     	;# 
   227  0415                     	;# 
   228  0416                     	;# 
   229  0417                     	;# 
   230  041C                     	;# 
   231  041D                     	;# 
   232  041E                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE9                     	;# 
   239  0FEA                     	;# 
   240  0FEB                     	;# 
   241  0FED                     	;# 
   242  0FEE                     	;# 
   243  0FEF                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000E                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  008C                     	;# 
   273  008E                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010E                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0113                     	;# 
   293  0114                     	;# 
   294  0115                     	;# 
   295  0116                     	;# 
   296  0117                     	;# 
   297  0118                     	;# 
   298  0119                     	;# 
   299  011A                     	;# 
   300  011B                     	;# 
   301  011D                     	;# 
   302  011E                     	;# 
   303  018C                     	;# 
   304  018E                     	;# 
   305  0191                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0194                     	;# 
   312  0195                     	;# 
   313  0196                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019C                     	;# 
   321  019C                     	;# 
   322  019D                     	;# 
   323  019E                     	;# 
   324  019F                     	;# 
   325  020C                     	;# 
   326  020E                     	;# 
   327  0211                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0215                     	;# 
   339  0216                     	;# 
   340  0216                     	;# 
   341  0217                     	;# 
   342  0217                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0298                     	;# 
   352  0298                     	;# 
   353  0299                     	;# 
   354  029A                     	;# 
   355  029B                     	;# 
   356  029C                     	;# 
   357  029D                     	;# 
   358  029E                     	;# 
   359  029E                     	;# 
   360  0311                     	;# 
   361  0311                     	;# 
   362  0312                     	;# 
   363  0313                     	;# 
   364  0318                     	;# 
   365  0318                     	;# 
   366  0319                     	;# 
   367  031A                     	;# 
   368  038C                     	;# 
   369  038E                     	;# 
   370  0391                     	;# 
   371  0392                     	;# 
   372  0393                     	;# 
   373  039A                     	;# 
   374  039C                     	;# 
   375  039D                     	;# 
   376  039E                     	;# 
   377  039F                     	;# 
   378  0415                     	;# 
   379  0416                     	;# 
   380  0417                     	;# 
   381  041C                     	;# 
   382  041D                     	;# 
   383  041E                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000E                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  008C                     	;# 
   424  008E                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  010C                     	;# 
   440  010E                     	;# 
   441  0111                     	;# 
   442  0112                     	;# 
   443  0113                     	;# 
   444  0114                     	;# 
   445  0115                     	;# 
   446  0116                     	;# 
   447  0117                     	;# 
   448  0118                     	;# 
   449  0119                     	;# 
   450  011A                     	;# 
   451  011B                     	;# 
   452  011D                     	;# 
   453  011E                     	;# 
   454  018C                     	;# 
   455  018E                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0194                     	;# 
   463  0195                     	;# 
   464  0196                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019C                     	;# 
   472  019C                     	;# 
   473  019D                     	;# 
   474  019E                     	;# 
   475  019F                     	;# 
   476  020C                     	;# 
   477  020E                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0294                     	;# 
   499  0295                     	;# 
   500  0295                     	;# 
   501  0296                     	;# 
   502  0298                     	;# 
   503  0298                     	;# 
   504  0299                     	;# 
   505  029A                     	;# 
   506  029B                     	;# 
   507  029C                     	;# 
   508  029D                     	;# 
   509  029E                     	;# 
   510  029E                     	;# 
   511  0311                     	;# 
   512  0311                     	;# 
   513  0312                     	;# 
   514  0313                     	;# 
   515  0318                     	;# 
   516  0318                     	;# 
   517  0319                     	;# 
   518  031A                     	;# 
   519  038C                     	;# 
   520  038E                     	;# 
   521  0391                     	;# 
   522  0392                     	;# 
   523  0393                     	;# 
   524  039A                     	;# 
   525  039C                     	;# 
   526  039D                     	;# 
   527  039E                     	;# 
   528  039F                     	;# 
   529  0415                     	;# 
   530  0416                     	;# 
   531  0417                     	;# 
   532  041C                     	;# 
   533  041D                     	;# 
   534  041E                     	;# 
   535  0FE4                     	;# 
   536  0FE5                     	;# 
   537  0FE6                     	;# 
   538  0FE7                     	;# 
   539  0FE8                     	;# 
   540  0FE9                     	;# 
   541  0FEA                     	;# 
   542  0FEB                     	;# 
   543  0FED                     	;# 
   544  0FEE                     	;# 
   545  0FEF                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000E                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  008C                     	;# 
   575  008E                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0093                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010E                     	;# 
   592  0111                     	;# 
   593  0112                     	;# 
   594  0113                     	;# 
   595  0114                     	;# 
   596  0115                     	;# 
   597  0116                     	;# 
   598  0117                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  011A                     	;# 
   602  011B                     	;# 
   603  011D                     	;# 
   604  011E                     	;# 
   605  018C                     	;# 
   606  018E                     	;# 
   607  0191                     	;# 
   608  0191                     	;# 
   609  0192                     	;# 
   610  0193                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0194                     	;# 
   614  0195                     	;# 
   615  0196                     	;# 
   616  0199                     	;# 
   617  019A                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019C                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019F                     	;# 
   627  020C                     	;# 
   628  020E                     	;# 
   629  0211                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0212                     	;# 
   633  0213                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0214                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0216                     	;# 
   643  0217                     	;# 
   644  0217                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0294                     	;# 
   650  0295                     	;# 
   651  0295                     	;# 
   652  0296                     	;# 
   653  0298                     	;# 
   654  0298                     	;# 
   655  0299                     	;# 
   656  029A                     	;# 
   657  029B                     	;# 
   658  029C                     	;# 
   659  029D                     	;# 
   660  029E                     	;# 
   661  029E                     	;# 
   662  0311                     	;# 
   663  0311                     	;# 
   664  0312                     	;# 
   665  0313                     	;# 
   666  0318                     	;# 
   667  0318                     	;# 
   668  0319                     	;# 
   669  031A                     	;# 
   670  038C                     	;# 
   671  038E                     	;# 
   672  0391                     	;# 
   673  0392                     	;# 
   674  0393                     	;# 
   675  039A                     	;# 
   676  039C                     	;# 
   677  039D                     	;# 
   678  039E                     	;# 
   679  039F                     	;# 
   680  0415                     	;# 
   681  0416                     	;# 
   682  0417                     	;# 
   683  041C                     	;# 
   684  041D                     	;# 
   685  041E                     	;# 
   686  0FE4                     	;# 
   687  0FE5                     	;# 
   688  0FE6                     	;# 
   689  0FE7                     	;# 
   690  0FE8                     	;# 
   691  0FE9                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  000E                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008E                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0093                     	;# 
   730  0095                     	;# 
   731  0096                     	;# 
   732  0097                     	;# 
   733  0098                     	;# 
   734  0099                     	;# 
   735  009A                     	;# 
   736  009B                     	;# 
   737  009B                     	;# 
   738  009C                     	;# 
   739  009D                     	;# 
   740  009E                     	;# 
   741  010C                     	;# 
   742  010E                     	;# 
   743  0111                     	;# 
   744  0112                     	;# 
   745  0113                     	;# 
   746  0114                     	;# 
   747  0115                     	;# 
   748  0116                     	;# 
   749  0117                     	;# 
   750  0118                     	;# 
   751  0119                     	;# 
   752  011A                     	;# 
   753  011B                     	;# 
   754  011D                     	;# 
   755  011E                     	;# 
   756  018C                     	;# 
   757  018E                     	;# 
   758  0191                     	;# 
   759  0191                     	;# 
   760  0192                     	;# 
   761  0193                     	;# 
   762  0193                     	;# 
   763  0193                     	;# 
   764  0194                     	;# 
   765  0195                     	;# 
   766  0196                     	;# 
   767  0199                     	;# 
   768  019A                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019C                     	;# 
   774  019C                     	;# 
   775  019D                     	;# 
   776  019E                     	;# 
   777  019F                     	;# 
   778  020C                     	;# 
   779  020E                     	;# 
   780  0211                     	;# 
   781  0211                     	;# 
   782  0212                     	;# 
   783  0212                     	;# 
   784  0213                     	;# 
   785  0213                     	;# 
   786  0214                     	;# 
   787  0214                     	;# 
   788  0215                     	;# 
   789  0215                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0216                     	;# 
   793  0216                     	;# 
   794  0217                     	;# 
   795  0217                     	;# 
   796  0291                     	;# 
   797  0291                     	;# 
   798  0292                     	;# 
   799  0293                     	;# 
   800  0294                     	;# 
   801  0295                     	;# 
   802  0295                     	;# 
   803  0296                     	;# 
   804  0298                     	;# 
   805  0298                     	;# 
   806  0299                     	;# 
   807  029A                     	;# 
   808  029B                     	;# 
   809  029C                     	;# 
   810  029D                     	;# 
   811  029E                     	;# 
   812  029E                     	;# 
   813  0311                     	;# 
   814  0311                     	;# 
   815  0312                     	;# 
   816  0313                     	;# 
   817  0318                     	;# 
   818  0318                     	;# 
   819  0319                     	;# 
   820  031A                     	;# 
   821  038C                     	;# 
   822  038E                     	;# 
   823  0391                     	;# 
   824  0392                     	;# 
   825  0393                     	;# 
   826  039A                     	;# 
   827  039C                     	;# 
   828  039D                     	;# 
   829  039E                     	;# 
   830  039F                     	;# 
   831  0415                     	;# 
   832  0416                     	;# 
   833  0417                     	;# 
   834  041C                     	;# 
   835  041D                     	;# 
   836  041E                     	;# 
   837  0FE4                     	;# 
   838  0FE5                     	;# 
   839  0FE6                     	;# 
   840  0FE7                     	;# 
   841  0FE8                     	;# 
   842  0FE9                     	;# 
   843  0FEA                     	;# 
   844  0FEB                     	;# 
   845  0FED                     	;# 
   846  0FEE                     	;# 
   847  0FEF                     	;# 
   848                           
   849                           	psect	stringtext1
   850  07F7                     __pstringtext1:	
   851  07F7                     _dpowers:	
   852  07F7  3401               	retlw	1
   853  07F8  3400               	retlw	0
   854  07F9  340A               	retlw	10
   855  07FA  3400               	retlw	0
   856  07FB  3464               	retlw	100
   857  07FC  3400               	retlw	0
   858  07FD  34E8               	retlw	232
   859  07FE  3403               	retlw	3
   860  07FF  3410               	retlw	16
   861  0800  3427               	retlw	39
   862  0801                     __end_of_dpowers:	
   863  0016                     _TMR1L	set	22
   864  0017                     _TMR1H	set	23
   865  0019                     _T1GCON	set	25
   866  0018                     _T1CON	set	24
   867  000C                     _PORTA	set	12
   868  000E                     _PORTC	set	14
   869  0011                     _PIR1bits	set	17
   870  000C                     _PORTAbits	set	12
   871  0018                     _T1CONbits	set	24
   872  000B                     _INTCONbits	set	11
   873  000B                     _INTCON	set	11
   874  008C                     _TXIF	set	140
   875  00C0                     _TMR1ON	set	192
   876  008E                     _TRISC	set	142
   877  008C                     _TRISA	set	140
   878  0095                     _OPTION_REG	set	149
   879  008C                     _TRISAbits	set	140
   880  009B                     _ADRESL	set	155
   881  009C                     _ADRESH	set	156
   882  009E                     _ADCON1bits	set	158
   883  009D                     _ADCON0bits	set	157
   884  0091                     _PIE1bits	set	145
   885  0099                     _OSCCON	set	153
   886  04E9                     _GO_nDONE	set	1257
   887  048E                     _ADIE	set	1166
   888  04F7                     _ADFM	set	1271
   889  04E8                     _ADON	set	1256
   890  04D4                     _HFIOFR	set	1236
   891  010E                     _LATC	set	270
   892  010C                     _LATA	set	268
   893  011D                     _APFCON0bits	set	285
   894  0117                     _FVRCON	set	279
   895  018E                     _ANSELC	set	398
   896  018C                     _ANSELA	set	396
   897  019A                     _TXREG	set	410
   898  018C                     _ANSELAbits	set	396
   899  019B                     _SPBRG	set	411
   900  019F                     _BAUDCONbits	set	415
   901  019E                     _TXSTAbits	set	414
   902  0199                     _RCREG	set	409
   903  019D                     _RCSTAbits	set	413
   904  0CF1                     _TRMT	set	3313
   905  0391                     _IOCAPbits	set	913
   906  0393                     _IOCAFbits	set	915
   907  0801                     STR_1:	
   908  0801  3425               	retlw	37	;'%'
   909  0802  3464               	retlw	100	;'d'
   910  0803  340A               	retlw	10
   911  0804  3400               	retlw	0
   912                           
   913                           	psect	stringtext2
   914  0000                     __pstringtext2:	
   915                           
   916                           ; #config settings
   917  0000                     
   918                           	psect	cinit
   919  0074                     start_initialization:	
   920  0074                     __initialization:	
   921                           
   922                           ; Clear objects allocated to COMMON
   923  0074  01F0               	clrf	__pbssCOMMON& (0+127)
   924  0075  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   925  0076  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   926  0077  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   927  0078  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   928                           
   929                           ; Clear objects allocated to BANK0
   930  0079  3058               	movlw	low __pbssBANK0
   931  007A  0084               	movwf	4
   932  007B  3000               	movlw	high __pbssBANK0
   933  007C  0085               	movwf	5
   934  007D  3018               	movlw	24
   935  007E  318E  2699  3180   	fcall	clear_ram0
   936                           
   937                           ; Clear objects allocated to BANK1
   938  0081  30A0               	movlw	low __pbssBANK1
   939  0082  0084               	movwf	4
   940  0083  3000               	movlw	high __pbssBANK1
   941  0084  0085               	movwf	5
   942  0085  302C               	movlw	44
   943  0086  318E  2699         	fcall	clear_ram0
   944  0088                     end_of_initialization:	
   945                           ;End of C runtime variable initialization code
   946                           
   947  0088                     __end_of__initialization:	
   948  0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   949  0089  0020               	movlb	0
   950  008A  3185  2DD6         	ljmp	_main	;jump to C main() function
   951                           
   952                           	psect	bssCOMMON
   953  0070                     __pbssCOMMON:	
   954  0070                     _ADC_Test:	
   955  0070                     	ds	2
   956  0072                     _ptr:	
   957  0072                     	ds	1
   958  0073                     _portC:	
   959  0073                     	ds	1
   960  0074                     _portA:	
   961  0074                     	ds	1
   962                           
   963                           	psect	bssBANK0
   964  0058                     __pbssBANK0:	
   965  0058                     _aveTmr1Val:	
   966  0058                     	ds	4
   967  005C                     _temp_time:	
   968  005C                     	ds	2
   969  005E                     _NegCycle:	
   970  005E                     	ds	2
   971  0060                     _PosCycle:	
   972  0060                     	ds	2
   973  0062                     _tmr1Start:	
   974  0062                     	ds	2
   975  0064                     _tmr1Samples:	
   976  0064                     	ds	2
   977  0066                     _tmr1StartFlag:	
   978  0066                     	ds	2
   979  0068                     _adcSample:	
   980  0068                     	ds	2
   981  006A                     _rxByte:	
   982  006A                     	ds	1
   983  006B                     _txByte:	
   984  006B                     	ds	1
   985  006C                     _PoW:	
   986  006C                     	ds	4
   987                           
   988                           	psect	bssBANK1
   989  00A0                     __pbssBANK1:	
   990  00A0                     _Tmr1Val_Ms:	
   991  00A0                     	ds	4
   992  00A4                     _tmr1Val:	
   993  00A4                     	ds	4
   994  00A8                     _time:	
   995  00A8                     	ds	2
   996  00AA                     _cycles:	
   997  00AA                     	ds	2
   998  00AC                     _rxFlag:	
   999  00AC                     	ds	2
  1000  00AE                     _SCR_On:	
  1001  00AE                     	ds	2
  1002  00B0                     _mainTest:	
  1003  00B0                     	ds	2
  1004  00B2                     _sampleVal:	
  1005  00B2                     	ds	2
  1006  00B4                     _previousADCsample:	
  1007  00B4                     	ds	2
  1008  00B6                     _adcData:	
  1009  00B6                     	ds	2
  1010  00B8                     _rxArray:	
  1011  00B8                     	ds	20
  1012                           
  1013                           	psect	clrtext
  1014  0E99                     clear_ram0:	
  1015                           ;	Called with FSR0 containing the base address, and
  1016                           ;	WREG with the size to clear
  1017                           
  1018  0E99  0064               	clrwdt	;clear the watchdog before getting into this loop
  1019  0E9A                     clrloop0:	
  1020  0E9A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1021  0E9B  3101               	addfsr 0,1
  1022  0E9C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1023  0E9D  2E9A               	goto	clrloop0	;have we reached the end yet?
  1024  0E9E  3400               	retlw	0	;all done for this memory range, return
  1025                           
  1026                           	psect	cstackBANK1
  1027  00CC                     __pcstackBANK1:	
  1028  00CC                     ??_main:	
  1029                           
  1030                           ; 1 bytes @ 0x0
  1031  00CC                     	ds	1
  1032  00CD                     main@i:	
  1033                           
  1034                           ; 2 bytes @ 0x1
  1035  00CD                     	ds	2
  1036                           
  1037                           	psect	cstackCOMMON
  1038  0075                     __pcstackCOMMON:	
  1039  0075                     ?_isdigit:	
  1040  0075                     ?_initPIC:	
  1041                           ; 1 bit 
  1042                           
  1043  0075                     ?_ToggleGLED:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0075                     ?_pi3Connect:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0075                     ?_verifyACSignal:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0075                     ?_InitialisePorts:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0075                     ?_Init_TMR1:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0075                     ?_InitialiseADC:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0075                     ?_InitUSART:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0075                     ?_Fail_LED:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0075                     ?_empty_RX_BUFF:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0075                     ?_ADC_OPTO_Relay:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0075                     ?_setupTestParameters:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0075                     ?_PassLED:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0075                     ?_UART_TX_String:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0075                     ?_beginHighCurrentTest:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0075                     ?_SCR_Relay:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0075                     ?_SCR:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0075                     ?_TMR1Reset:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0075                     ?_UART_RX_String:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0075                     ??_UART_RX_String:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0075                     ?_ISR:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0075                     ?_putch:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0075                     ?i1_Fail_LED:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0075                     ??i1_Fail_LED:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0075                     ?i1_PassLED:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0075                     ??i1_PassLED:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0075                     ?_main:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0075                     ?i1_Timer1:	
  1122                           ; 2 bytes @ 0x0
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x0
  1126  0075                     	ds	1
  1127  0076                     i1Fail_LED@OnOff:	
  1128  0076                     i1PassLED@OnOff:	
  1129                           ; 1 bytes @ 0x1
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x1
  1133  0076                     	ds	1
  1134  0077                     ??i1_Timer1:	
  1135                           
  1136                           ; 1 bytes @ 0x2
  1137  0077                     	ds	2
  1138  0079                     ??_ISR:	
  1139                           
  1140                           ; 1 bytes @ 0x4
  1141  0079                     	ds	1
  1142                           
  1143                           	psect	cstackBANK0
  1144  0020                     __pcstackBANK0:	
  1145  0020                     ?___ftge:	
  1146  0020                     ??_initPIC:	
  1147                           ; 1 bit 
  1148                           
  1149  0020                     ??_ToggleGLED:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0020                     ??_InitialisePorts:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0020                     ??_Init_TMR1:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0020                     ??_InitialiseADC:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0020                     ??_InitUSART:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0020                     ??_Fail_LED:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0020                     ??_empty_RX_BUFF:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0020                     ?_UART_TX:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0020                     ??_ADC_OPTO_Relay:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0020                     ??_PassLED:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0020                     ??_SCR_Relay:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0020                     ??_SCR:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0020                     ??_TMR1Reset:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0020                     ??_isdigit:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0020                     ??_putch:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0020                     ?_ReadADC:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0020                     ?_Timer1:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200  0020                     ?_Timer1Read:	
  1201                           ; 2 bytes @ 0x0
  1202                           
  1203  0020                     ?___wmul:	
  1204                           ; 2 bytes @ 0x0
  1205                           
  1206  0020                     ?___lwdiv:	
  1207                           ; 2 bytes @ 0x0
  1208                           
  1209  0020                     ?___ftpack:	
  1210                           ; 2 bytes @ 0x0
  1211                           
  1212  0020                     ?___ftneg:	
  1213                           ; 3 bytes @ 0x0
  1214                           
  1215  0020                     ?___lmul:	
  1216                           ; 3 bytes @ 0x0
  1217                           
  1218  0020                     putch@c:	
  1219                           ; 4 bytes @ 0x0
  1220                           
  1221  0020                     _isdigit$1122:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0020                     UART_TX@data:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0020                     ___wmul@multiplier:	
  1228                           ; 2 bytes @ 0x0
  1229                           
  1230  0020                     ___lwdiv@divisor:	
  1231                           ; 2 bytes @ 0x0
  1232                           
  1233  0020                     ___ftpack@arg:	
  1234                           ; 2 bytes @ 0x0
  1235                           
  1236  0020                     ___ftge@ff1:	
  1237                           ; 3 bytes @ 0x0
  1238                           
  1239  0020                     ___ftneg@f1:	
  1240                           ; 3 bytes @ 0x0
  1241                           
  1242  0020                     ___lmul@multiplier:	
  1243                           ; 3 bytes @ 0x0
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x0
  1247  0020                     	ds	1
  1248  0021                     SCR@OnOff:	
  1249  0021                     ADC_OPTO_Relay@OnOff:	
  1250                           ; 1 bytes @ 0x1
  1251                           
  1252  0021                     SCR_Relay@OnOff:	
  1253                           ; 1 bytes @ 0x1
  1254                           
  1255  0021                     Fail_LED@OnOff:	
  1256                           ; 1 bytes @ 0x1
  1257                           
  1258  0021                     PassLED@OnOff:	
  1259                           ; 1 bytes @ 0x1
  1260                           
  1261  0021                     isdigit@c:	
  1262                           ; 1 bytes @ 0x1
  1263                           
  1264  0021                     empty_RX_BUFF@i:	
  1265                           ; 1 bytes @ 0x1
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x1
  1269  0021                     	ds	1
  1270  0022                     ??_UART_TX:	
  1271  0022                     ??_ReadADC:	
  1272                           ; 1 bytes @ 0x2
  1273                           
  1274  0022                     ??_Timer1:	
  1275                           ; 1 bytes @ 0x2
  1276                           
  1277  0022                     ??_UART_TX_String:	
  1278                           ; 1 bytes @ 0x2
  1279                           
  1280  0022                     ??_Timer1Read:	
  1281                           ; 1 bytes @ 0x2
  1282                           
  1283  0022                     ___wmul@multiplicand:	
  1284                           ; 1 bytes @ 0x2
  1285                           
  1286  0022                     ___lwdiv@dividend:	
  1287                           ; 2 bytes @ 0x2
  1288                           
  1289                           
  1290                           ; 2 bytes @ 0x2
  1291  0022                     	ds	1
  1292  0023                     ??_pi3Connect:	
  1293  0023                     ??___ftneg:	
  1294                           ; 1 bytes @ 0x3
  1295                           
  1296  0023                     ___ftpack@exp:	
  1297                           ; 1 bytes @ 0x3
  1298                           
  1299  0023                     ___ftge@ff2:	
  1300                           ; 1 bytes @ 0x3
  1301                           
  1302                           
  1303                           ; 3 bytes @ 0x3
  1304  0023                     	ds	1
  1305  0024                     ??_beginHighCurrentTest:	
  1306  0024                     ??___wmul:	
  1307                           ; 1 bytes @ 0x4
  1308                           
  1309  0024                     ??___lwdiv:	
  1310                           ; 1 bytes @ 0x4
  1311                           
  1312  0024                     ___ftpack@sign:	
  1313                           ; 1 bytes @ 0x4
  1314                           
  1315  0024                     ___wmul@product:	
  1316                           ; 1 bytes @ 0x4
  1317                           
  1318  0024                     ___lmul@multiplicand:	
  1319                           ; 2 bytes @ 0x4
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x4
  1323  0024                     	ds	1
  1324  0025                     ??___ftpack:	
  1325  0025                     pi3Connect@handshake:	
  1326                           ; 1 bytes @ 0x5
  1327                           
  1328  0025                     ___lwdiv@counter:	
  1329                           ; 1 bytes @ 0x5
  1330                           
  1331  0025                     UART_TX_String@i:	
  1332                           ; 1 bytes @ 0x5
  1333                           
  1334                           
  1335                           ; 2 bytes @ 0x5
  1336  0025                     	ds	1
  1337  0026                     ??___ftge:	
  1338  0026                     ?_atoi:	
  1339                           ; 1 bytes @ 0x6
  1340                           
  1341  0026                     ___lwdiv@quotient:	
  1342                           ; 2 bytes @ 0x6
  1343                           
  1344                           
  1345                           ; 2 bytes @ 0x6
  1346  0026                     	ds	1
  1347  0027                     UART_TX_String@string:	
  1348                           
  1349                           ; 1 bytes @ 0x7
  1350  0027                     	ds	1
  1351  0028                     ??_atoi:	
  1352  0028                     ??___lmul:	
  1353                           ; 1 bytes @ 0x8
  1354                           
  1355  0028                     ?___lwmod:	
  1356                           ; 1 bytes @ 0x8
  1357                           
  1358  0028                     beginHighCurrentTest@i:	
  1359                           ; 2 bytes @ 0x8
  1360                           
  1361  0028                     ___lwmod@divisor:	
  1362                           ; 2 bytes @ 0x8
  1363                           
  1364  0028                     ___lmul@product:	
  1365                           ; 2 bytes @ 0x8
  1366                           
  1367                           
  1368                           ; 4 bytes @ 0x8
  1369  0028                     	ds	2
  1370  002A                     atoi@sign:	
  1371  002A                     ___lwmod@dividend:	
  1372                           ; 1 bytes @ 0xA
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0xA
  1376  002A                     	ds	1
  1377  002B                     atoi@a:	
  1378                           
  1379                           ; 2 bytes @ 0xB
  1380  002B                     	ds	1
  1381  002C                     ??___lwmod:	
  1382  002C                     ?___lldiv:	
  1383                           ; 1 bytes @ 0xC
  1384                           
  1385  002C                     ___lldiv@divisor:	
  1386                           ; 4 bytes @ 0xC
  1387                           
  1388                           
  1389                           ; 4 bytes @ 0xC
  1390  002C                     	ds	1
  1391  002D                     atoi@s:	
  1392  002D                     ___lwmod@counter:	
  1393                           ; 1 bytes @ 0xD
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0xD
  1397  002D                     	ds	1
  1398  002E                     ?_printf:	
  1399  002E                     printf@f:	
  1400                           ; 2 bytes @ 0xE
  1401                           
  1402                           
  1403                           ; 2 bytes @ 0xE
  1404  002E                     	ds	2
  1405  0030                     ___lldiv@dividend:	
  1406                           
  1407                           ; 4 bytes @ 0x10
  1408  0030                     	ds	4
  1409  0034                     ??_printf:	
  1410  0034                     ??___lldiv:	
  1411                           ; 1 bytes @ 0x14
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x14
  1415  0034                     	ds	1
  1416  0035                     ___lldiv@quotient:	
  1417                           
  1418                           ; 4 bytes @ 0x15
  1419  0035                     	ds	3
  1420  0038                     printf@ap:	
  1421                           
  1422                           ; 1 bytes @ 0x18
  1423  0038                     	ds	1
  1424  0039                     printf@flag:	
  1425  0039                     ___lldiv@counter:	
  1426                           ; 1 bytes @ 0x19
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x19
  1430  0039                     	ds	1
  1431  003A                     ??_setupTestParameters:	
  1432  003A                     ?___lltoft:	
  1433                           ; 1 bytes @ 0x1A
  1434                           
  1435  003A                     printf@prec:	
  1436                           ; 3 bytes @ 0x1A
  1437                           
  1438  003A                     ___lltoft@c:	
  1439                           ; 1 bytes @ 0x1A
  1440                           
  1441                           
  1442                           ; 4 bytes @ 0x1A
  1443  003A                     	ds	1
  1444  003B                     printf@val:	
  1445                           
  1446                           ; 2 bytes @ 0x1B
  1447  003B                     	ds	1
  1448  003C                     setupTestParameters@handshake3:	
  1449                           
  1450                           ; 1 bytes @ 0x1C
  1451  003C                     	ds	1
  1452  003D                     printf@c:	
  1453                           
  1454                           ; 1 bytes @ 0x1D
  1455  003D                     	ds	1
  1456  003E                     ??___lltoft:	
  1457                           
  1458                           ; 1 bytes @ 0x1E
  1459  003E                     	ds	1
  1460  003F                     ___lltoft@exp:	
  1461                           
  1462                           ; 1 bytes @ 0x1F
  1463  003F                     	ds	1
  1464  0040                     ?_fabs:	
  1465  0040                     fabs@d:	
  1466                           ; 3 bytes @ 0x20
  1467                           
  1468                           
  1469                           ; 3 bytes @ 0x20
  1470  0040                     	ds	3
  1471  0043                     ??_fabs:	
  1472  0043                     ?___fttol:	
  1473                           ; 1 bytes @ 0x23
  1474                           
  1475  0043                     ___fttol@f1:	
  1476                           ; 4 bytes @ 0x23
  1477                           
  1478                           
  1479                           ; 3 bytes @ 0x23
  1480  0043                     	ds	4
  1481  0047                     ??___fttol:	
  1482                           
  1483                           ; 1 bytes @ 0x27
  1484  0047                     	ds	4
  1485  004B                     ___fttol@sign1:	
  1486                           
  1487                           ; 1 bytes @ 0x2B
  1488  004B                     	ds	1
  1489  004C                     ___fttol@lval:	
  1490                           
  1491                           ; 4 bytes @ 0x2C
  1492  004C                     	ds	4
  1493  0050                     ___fttol@exp1:	
  1494                           
  1495                           ; 1 bytes @ 0x30
  1496  0050                     	ds	1
  1497  0051                     ??_verifyACSignal:	
  1498                           
  1499                           ; 1 bytes @ 0x31
  1500  0051                     	ds	4
  1501  0055                     verifyACSignal@i:	
  1502                           
  1503                           ; 2 bytes @ 0x35
  1504  0055                     	ds	2
  1505  0057                     verifyACSignal@handshake2:	
  1506                           
  1507                           ; 1 bytes @ 0x37
  1508  0057                     	ds	1
  1509                           
  1510                           	psect	maintext
  1511  05D6                     __pmaintext:	
  1512 ;;
  1513 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1514 ;;
  1515 ;; *************** function _main *****************
  1516 ;; Defined at:
  1517 ;;		line 39 in file "newmain.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  i               2    1[BANK1 ] int 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2  130[None  ] int 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : B1F/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1531 ;;      Params:         0       0       0       0
  1532 ;;      Locals:         0       0       2       0
  1533 ;;      Temps:          0       0       1       0
  1534 ;;      Totals:         0       0       3       0
  1535 ;;Total ram usage:        3 bytes
  1536 ;; Hardware stack levels required when called:    6
  1537 ;; This function calls:
  1538 ;;		_ToggleGLED
  1539 ;;		_initPIC
  1540 ;;		_pi3Connect
  1541 ;;		_verifyACSignal
  1542 ;; This function is called by:
  1543 ;;		Startup code after reset
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _main
  1549  05D6                     _main:	
  1550                           
  1551                           ;newmain.c: 42: initPIC();
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1555  05D6  318F  2755  3185   	fcall	_initPIC
  1556                           
  1557                           ;newmain.c: 44: for(int i = 0; i < 6; i++){
  1558  05D9  0021               	movlb	1	; select bank1
  1559  05DA  01CD               	clrf	main@i^(0+128)
  1560  05DB  01CE               	clrf	(main@i+1)^(0+128)
  1561  05DC  084E               	movf	(main@i+1)^(0+128),w
  1562  05DD  3A80               	xorlw	128
  1563  05DE  00CC               	movwf	??_main^(0+128)
  1564  05DF  3080               	movlw	128
  1565  05E0  024C               	subwf	??_main^(0+128),w
  1566  05E1  1D03               	skipz
  1567  05E2  2DE5               	goto	u3625
  1568  05E3  3006               	movlw	6
  1569  05E4  024D               	subwf	main@i^(0+128),w
  1570  05E5                     u3625:	
  1571  05E5  1803               	btfsc	3,0
  1572  05E6  2E03               	goto	l3476
  1573  05E7                     l3468:	
  1574                           
  1575                           ;newmain.c: 46: ToggleGLED();
  1576  05E7  318E  26C9  3185   	fcall	_ToggleGLED
  1577                           
  1578                           ;newmain.c: 47: _delay((unsigned long)((100)*(4000000/4000.0)));
  1579  05EA  3082               	movlw	130
  1580  05EB  0021               	movlb	1	; select bank1
  1581  05EC  00CC               	movwf	??_main^(0+128)
  1582  05ED  30DD               	movlw	221
  1583  05EE                     u3647:	
  1584  05EE  0B89               	decfsz	9,f
  1585  05EF  2DEE               	goto	u3647
  1586  05F0  0BCC               	decfsz	??_main^(0+128),f
  1587  05F1  2DEE               	goto	u3647
  1588  05F2  3200               	nop2
  1589  05F3  3001               	movlw	1
  1590  05F4  0021               	movlb	1	; select bank1
  1591  05F5  07CD               	addwf	main@i^(0+128),f
  1592  05F6  3000               	movlw	0
  1593  05F7  3DCE               	addwfc	(main@i+1)^(0+128),f
  1594  05F8  084E               	movf	(main@i+1)^(0+128),w
  1595  05F9  3A80               	xorlw	128
  1596  05FA  00CC               	movwf	??_main^(0+128)
  1597  05FB  3080               	movlw	128
  1598  05FC  024C               	subwf	??_main^(0+128),w
  1599  05FD  1D03               	skipz
  1600  05FE  2E01               	goto	u3635
  1601  05FF  3006               	movlw	6
  1602  0600  024D               	subwf	main@i^(0+128),w
  1603  0601                     u3635:	
  1604  0601  1C03               	skipc
  1605  0602  2DE7               	goto	l3468
  1606  0603                     l3476:	
  1607                           
  1608                           ;newmain.c: 48: }
  1609                           ;newmain.c: 50: pi3Connect();
  1610  0603  3186  264F  3185   	fcall	_pi3Connect
  1611                           
  1612                           ;newmain.c: 51: _delay((unsigned long)((10)*(4000000/4000.0)));
  1613  0606  300D               	movlw	13
  1614  0607  0021               	movlb	1	; select bank1
  1615  0608  00CC               	movwf	??_main^(0+128)
  1616  0609  30FB               	movlw	251
  1617  060A                     u3657:	
  1618  060A  0B89               	decfsz	9,f
  1619  060B  2E0A               	goto	u3657
  1620  060C  0BCC               	decfsz	??_main^(0+128),f
  1621  060D  2E0A               	goto	u3657
  1622  060E  3200               	nop2
  1623                           
  1624                           ;newmain.c: 52: verifyACSignal();
  1625  060F  3180  208C         	fcall	_verifyACSignal
  1626                           
  1627                           ;newmain.c: 55: return (0);
  1628                           ;	Return value of _main is never used
  1629  0611  3180  2872         	ljmp	start
  1630  0613                     __end_of_main:	
  1631                           
  1632                           	psect	text1
  1633  008C                     __ptext1:	
  1634 ;; *************** function _verifyACSignal *****************
  1635 ;; Defined at:
  1636 ;;		line 120 in file "newmain.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  i               2   53[BANK0 ] int 
  1641 ;;  handshake2      1   55[BANK0 ] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1651 ;;      Params:         0       0       0       0
  1652 ;;      Locals:         0       3       0       0
  1653 ;;      Temps:          0       4       0       0
  1654 ;;      Totals:         0       7       0       0
  1655 ;;Total ram usage:        7 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    5
  1658 ;; This function calls:
  1659 ;;		_ADC_OPTO_Relay
  1660 ;;		_ReadADC
  1661 ;;		_Timer1
  1662 ;;		_ToggleGLED
  1663 ;;		_UART_TX
  1664 ;;		___fttol
  1665 ;;		___lldiv
  1666 ;;		___lltoft
  1667 ;;		_empty_RX_BUFF
  1668 ;;		_fabs
  1669 ;;		_printf
  1670 ;;		_setupTestParameters
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _verifyACSignal
  1678  008C                     _verifyACSignal:	
  1679                           
  1680                           ;newmain.c: 122: unsigned char handshake2 = '0';
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in _verifyACSignal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1684  008C  3030               	movlw	48
  1685  008D  0020               	movlb	0	; select bank0
  1686  008E  00D1               	movwf	??_verifyACSignal
  1687  008F  0851               	movf	??_verifyACSignal,w
  1688  0090  00D7               	movwf	verifyACSignal@handshake2
  1689                           
  1690                           ;newmain.c: 123: ADC_Test = 1;
  1691  0091  3001               	movlw	1
  1692  0092  00F0               	movwf	_ADC_Test	;volatile
  1693  0093  3000               	movlw	0
  1694  0094  00F1               	movwf	_ADC_Test+1	;volatile
  1695                           
  1696                           ;newmain.c: 125: PIE1bits.RCIE = 1;
  1697  0095  0021               	movlb	1	; select bank1
  1698  0096  1691               	bsf	17,5	;volatile
  1699  0097                     l3366:	
  1700                           ;newmain.c: 128: while(handshake2 != '2'){
  1701                           
  1702  0097  3032               	movlw	50
  1703  0098  0020               	movlb	0	; select bank0
  1704  0099  0657               	xorwf	verifyACSignal@handshake2,w
  1705  009A  1903               	btfsc	3,2
  1706  009B  28A3               	goto	l3368
  1707                           
  1708                           ;newmain.c: 130: handshake2 = rxArray[0];
  1709  009C  0021               	movlb	1	; select bank1
  1710  009D  0838               	movf	_rxArray^(0+128),w
  1711  009E  0020               	movlb	0	; select bank0
  1712  009F  00D1               	movwf	??_verifyACSignal
  1713  00A0  0851               	movf	??_verifyACSignal,w
  1714  00A1  00D7               	movwf	verifyACSignal@handshake2
  1715  00A2  2897               	goto	l3366
  1716  00A3                     l3368:	
  1717                           
  1718                           ;newmain.c: 131: }
  1719                           ;newmain.c: 132: rxFlag = 0;
  1720  00A3  0021               	movlb	1	; select bank1
  1721  00A4  01AC               	clrf	_rxFlag^(0+128)
  1722  00A5  01AD               	clrf	(_rxFlag+1)^(0+128)
  1723                           
  1724                           ;newmain.c: 133: empty_RX_BUFF();
  1725  00A6  3187  2770  3180   	fcall	_empty_RX_BUFF
  1726                           
  1727                           ;newmain.c: 136: _delay((unsigned long)((10)*(4000000/4000.0)));
  1728  00A9  300D               	movlw	13
  1729  00AA  0020               	movlb	0	; select bank0
  1730  00AB  00D1               	movwf	??_verifyACSignal
  1731  00AC  30FB               	movlw	251
  1732  00AD                     u3667:	
  1733  00AD  0B89               	decfsz	9,f
  1734  00AE  28AD               	goto	u3667
  1735  00AF  0BD1               	decfsz	??_verifyACSignal,f
  1736  00B0  28AD               	goto	u3667
  1737  00B1  3200               	nop2
  1738                           
  1739                           ;newmain.c: 137: UART_TX(handshake2);
  1740  00B2  0020               	movlb	0	; select bank0
  1741  00B3  0857               	movf	verifyACSignal@handshake2,w
  1742  00B4  00D1               	movwf	??_verifyACSignal
  1743  00B5  01D2               	clrf	??_verifyACSignal+1
  1744  00B6  0851               	movf	??_verifyACSignal,w
  1745  00B7  00A0               	movwf	UART_TX@data
  1746  00B8  0852               	movf	??_verifyACSignal+1,w
  1747  00B9  00A1               	movwf	UART_TX@data+1
  1748  00BA  318E  26A8  3180   	fcall	_UART_TX
  1749                           
  1750                           ;newmain.c: 138: PIE1bits.RCIE = 0;
  1751  00BD  0021               	movlb	1	; select bank1
  1752  00BE  1291               	bcf	17,5	;volatile
  1753                           
  1754                           ;newmain.c: 139: ADON=1;
  1755  00BF  141D               	bsf	29,0	;volatile
  1756  00C0                     l151:	
  1757                           ;newmain.c: 141: while(!ADON){}
  1758                           
  1759  00C0  1C1D               	btfss	29,0	;volatile
  1760  00C1  28C0               	goto	l151
  1761                           
  1762                           ;newmain.c: 142: aveTmr1Val = 0;
  1763  00C2  3000               	movlw	0
  1764  00C3  0020               	movlb	0	; select bank0
  1765  00C4  00DB               	movwf	_aveTmr1Val+3
  1766  00C5  3000               	movlw	0
  1767  00C6  00DA               	movwf	_aveTmr1Val+2
  1768  00C7  3000               	movlw	0
  1769  00C8  00D9               	movwf	_aveTmr1Val+1
  1770  00C9  3000               	movlw	0
  1771  00CA  00D8               	movwf	_aveTmr1Val
  1772  00CB                     l3410:	
  1773                           ;newmain.c: 174: else{}
  1774                           
  1775                           ;newmain.c: 173: }
  1776                           
  1777                           ;newmain.c: 146: while(tmr1Samples < 100 ){
  1778                           
  1779  00CB  3000               	movlw	0
  1780  00CC  0265               	subwf	_tmr1Samples+1,w	;volatile
  1781  00CD  3064               	movlw	100
  1782  00CE  1903               	skipnz
  1783  00CF  0264               	subwf	_tmr1Samples,w	;volatile
  1784  00D0  1803               	btfsc	3,0
  1785  00D1  2934               	goto	l162
  1786                           
  1787                           ;newmain.c: 148: adcSample = ReadADC();
  1788  00D2  3187  271B  3180   	fcall	_ReadADC
  1789  00D5  0020               	movlb	0	; select bank0
  1790  00D6  0821               	movf	?_ReadADC+1,w
  1791  00D7  00E9               	movwf	_adcSample+1
  1792  00D8  0820               	movf	?_ReadADC,w
  1793  00D9  00E8               	movwf	_adcSample
  1794                           
  1795                           ;newmain.c: 150: if((adcSample > 512) && (tmr1Start == 0)) {
  1796  00DA  3002               	movlw	2
  1797  00DB  0269               	subwf	_adcSample+1,w
  1798  00DC  3001               	movlw	1
  1799  00DD  1903               	skipnz
  1800  00DE  0268               	subwf	_adcSample,w
  1801  00DF  1C03               	skipc
  1802  00E0  2926               	goto	l3404
  1803  00E1  0862               	movf	_tmr1Start,w	;volatile
  1804  00E2  0463               	iorwf	_tmr1Start+1,w	;volatile
  1805  00E3  1D03               	btfss	3,2
  1806  00E4  2926               	goto	l3404
  1807                           
  1808                           ;newmain.c: 152: if(tmr1StartFlag == 0) {
  1809  00E5  0866               	movf	_tmr1StartFlag,w	;volatile
  1810  00E6  0467               	iorwf	_tmr1StartFlag+1,w	;volatile
  1811  00E7  1D03               	btfss	3,2
  1812  00E8  28EF               	goto	l3394
  1813                           
  1814                           ;newmain.c: 154: T1CONbits.TMR1ON = 1;
  1815  00E9  1418               	bsf	24,0	;volatile
  1816                           
  1817                           ;newmain.c: 155: tmr1StartFlag = 1;
  1818  00EA  3001               	movlw	1
  1819  00EB  00E6               	movwf	_tmr1StartFlag	;volatile
  1820  00EC  3000               	movlw	0
  1821  00ED  00E7               	movwf	_tmr1StartFlag+1	;volatile
  1822                           
  1823                           ;newmain.c: 156: }
  1824  00EE  2921               	goto	l3402
  1825  00EF                     l3394:	
  1826                           
  1827                           ;newmain.c: 157: else {
  1828                           ;newmain.c: 159: tmr1Val = Timer1();
  1829  00EF  318F  27E4  3180   	fcall	_Timer1
  1830  00F2  0020               	movlb	0	; select bank0
  1831  00F3  0820               	movf	?_Timer1,w
  1832  00F4  0021               	movlb	1	; select bank1
  1833  00F5  00A4               	movwf	_tmr1Val^(0+128)
  1834  00F6  0020               	movlb	0	; select bank0
  1835  00F7  0821               	movf	?_Timer1+1,w
  1836  00F8  0021               	movlb	1	; select bank1
  1837  00F9  00A5               	movwf	(_tmr1Val^(0+128)+1)
  1838  00FA  01A6               	clrf	(_tmr1Val^(0+128)+2)
  1839  00FB  01A7               	clrf	(_tmr1Val^(0+128)+3)
  1840                           
  1841                           ;newmain.c: 160: aveTmr1Val = aveTmr1Val + tmr1Val;
  1842  00FC  0020               	movlb	0	; select bank0
  1843  00FD  0858               	movf	_aveTmr1Val,w
  1844  00FE  0021               	movlb	1	; select bank1
  1845  00FF  0724               	addwf	_tmr1Val^(0+128),w
  1846  0100  0020               	movlb	0	; select bank0
  1847  0101  00D1               	movwf	??_verifyACSignal
  1848  0102  0859               	movf	_aveTmr1Val+1,w
  1849  0103  0021               	movlb	1	; select bank1
  1850  0104  3D25               	addwfc	(_tmr1Val+1)^(0+128),w
  1851  0105  0020               	movlb	0	; select bank0
  1852  0106  00D2               	movwf	??_verifyACSignal+1
  1853  0107  085A               	movf	_aveTmr1Val+2,w
  1854  0108  0021               	movlb	1	; select bank1
  1855  0109  3D26               	addwfc	(_tmr1Val+2)^(0+128),w
  1856  010A  0020               	movlb	0	; select bank0
  1857  010B  00D3               	movwf	??_verifyACSignal+2
  1858  010C  085B               	movf	_aveTmr1Val+3,w
  1859  010D  0021               	movlb	1	; select bank1
  1860  010E  3D27               	addwfc	(_tmr1Val+3)^(0+128),w
  1861  010F  0020               	movlb	0	; select bank0
  1862  0110  00D4               	movwf	??_verifyACSignal+3
  1863  0111  0854               	movf	??_verifyACSignal+3,w
  1864  0112  00DB               	movwf	_aveTmr1Val+3
  1865  0113  0853               	movf	??_verifyACSignal+2,w
  1866  0114  00DA               	movwf	_aveTmr1Val+2
  1867  0115  0852               	movf	??_verifyACSignal+1,w
  1868  0116  00D9               	movwf	_aveTmr1Val+1
  1869  0117  0851               	movf	??_verifyACSignal,w
  1870  0118  00D8               	movwf	_aveTmr1Val
  1871                           
  1872                           ;newmain.c: 162: tmr1Samples = tmr1Samples + 1 ;
  1873  0119  0864               	movf	_tmr1Samples,w	;volatile
  1874  011A  3E01               	addlw	1
  1875  011B  00E4               	movwf	_tmr1Samples	;volatile
  1876  011C  3000               	movlw	0
  1877  011D  3D65               	addwfc	_tmr1Samples+1,w	;volatile
  1878  011E  00E5               	movwf	_tmr1Samples+1	;volatile
  1879                           
  1880                           ;newmain.c: 163: tmr1StartFlag = 0;
  1881  011F  01E6               	clrf	_tmr1StartFlag	;volatile
  1882  0120  01E7               	clrf	_tmr1StartFlag+1	;volatile
  1883  0121                     l3402:	
  1884                           
  1885                           ;newmain.c: 164: }
  1886                           ;newmain.c: 167: tmr1Start = 1;
  1887  0121  3001               	movlw	1
  1888  0122  00E2               	movwf	_tmr1Start	;volatile
  1889  0123  3000               	movlw	0
  1890  0124  00E3               	movwf	_tmr1Start+1	;volatile
  1891                           
  1892                           ;newmain.c: 168: }
  1893  0125  28CB               	goto	l3410
  1894  0126                     l3404:	
  1895                           
  1896                           ;newmain.c: 169: else if((adcSample < 128) && (tmr1Start == 1)) {
  1897  0126  3000               	movlw	0
  1898  0127  0269               	subwf	_adcSample+1,w
  1899  0128  3080               	movlw	128
  1900  0129  1903               	skipnz
  1901  012A  0268               	subwf	_adcSample,w
  1902  012B  1803               	skipnc
  1903  012C  28CB               	goto	l3410
  1904  012D  0362               	decf	_tmr1Start,w	;volatile
  1905  012E  0463               	iorwf	_tmr1Start+1,w	;volatile
  1906  012F  1D03               	btfss	3,2
  1907  0130  28CB               	goto	l3410
  1908                           
  1909                           ;newmain.c: 172: tmr1Start = 0;
  1910  0131  01E2               	clrf	_tmr1Start	;volatile
  1911  0132  01E3               	clrf	_tmr1Start+1	;volatile
  1912  0133  28CB               	goto	l3410
  1913  0134                     l162:	
  1914                           
  1915                           ;newmain.c: 175: }
  1916                           ;newmain.c: 177: ADON=0;
  1917  0134  0021               	movlb	1	; select bank1
  1918  0135  101D               	bcf	29,0	;volatile
  1919                           
  1920                           ;newmain.c: 178: tmr1Samples = 0;
  1921  0136  0020               	movlb	0	; select bank0
  1922  0137  01E4               	clrf	_tmr1Samples	;volatile
  1923  0138  01E5               	clrf	_tmr1Samples+1	;volatile
  1924                           
  1925                           ;newmain.c: 179: tmr1Val = 0;
  1926  0139  3000               	movlw	0
  1927  013A  0021               	movlb	1	; select bank1
  1928  013B  00A7               	movwf	(_tmr1Val+3)^(0+128)
  1929  013C  3000               	movlw	0
  1930  013D  00A6               	movwf	(_tmr1Val+2)^(0+128)
  1931  013E  3000               	movlw	0
  1932  013F  00A5               	movwf	(_tmr1Val+1)^(0+128)
  1933  0140  3000               	movlw	0
  1934  0141  00A4               	movwf	_tmr1Val^(0+128)
  1935                           
  1936                           ;newmain.c: 180: aveTmr1Val = fabs((double)(aveTmr1Val/100));
  1937  0142  0020               	movlb	0	; select bank0
  1938  0143  085B               	movf	_aveTmr1Val+3,w
  1939  0144  00B3               	movwf	___lldiv@dividend+3
  1940  0145  085A               	movf	_aveTmr1Val+2,w
  1941  0146  00B2               	movwf	___lldiv@dividend+2
  1942  0147  0859               	movf	_aveTmr1Val+1,w
  1943  0148  00B1               	movwf	___lldiv@dividend+1
  1944  0149  0858               	movf	_aveTmr1Val,w
  1945  014A  00B0               	movwf	___lldiv@dividend
  1946  014B  3000               	movlw	0
  1947  014C  00AF               	movwf	___lldiv@divisor+3
  1948  014D  3000               	movlw	0
  1949  014E  00AE               	movwf	___lldiv@divisor+2
  1950  014F  3000               	movlw	0
  1951  0150  00AD               	movwf	___lldiv@divisor+1
  1952  0151  3064               	movlw	100
  1953  0152  00AC               	movwf	___lldiv@divisor
  1954  0153  3185  2583  3180   	fcall	___lldiv
  1955  0156  0020               	movlb	0	; select bank0
  1956  0157  082F               	movf	?___lldiv+3,w
  1957  0158  00BD               	movwf	___lltoft@c+3
  1958  0159  082E               	movf	?___lldiv+2,w
  1959  015A  00BC               	movwf	___lltoft@c+2
  1960  015B  082D               	movf	?___lldiv+1,w
  1961  015C  00BB               	movwf	___lltoft@c+1
  1962  015D  082C               	movf	?___lldiv,w
  1963  015E  00BA               	movwf	___lltoft@c
  1964  015F  3187  2746  3180   	fcall	___lltoft
  1965  0162  0020               	movlb	0	; select bank0
  1966  0163  083A               	movf	?___lltoft,w
  1967  0164  00C0               	movwf	fabs@d
  1968  0165  083B               	movf	?___lltoft+1,w
  1969  0166  00C1               	movwf	fabs@d+1
  1970  0167  083C               	movf	?___lltoft+2,w
  1971  0168  00C2               	movwf	fabs@d+2
  1972  0169  3187  27B8  3180   	fcall	_fabs
  1973  016C  0020               	movlb	0	; select bank0
  1974  016D  0840               	movf	?_fabs,w
  1975  016E  00C3               	movwf	___fttol@f1
  1976  016F  0841               	movf	?_fabs+1,w
  1977  0170  00C4               	movwf	___fttol@f1+1
  1978  0171  0842               	movf	?_fabs+2,w
  1979  0172  00C5               	movwf	___fttol@f1+2
  1980  0173  3184  242C  3180   	fcall	___fttol
  1981  0176  0020               	movlb	0	; select bank0
  1982  0177  0846               	movf	?___fttol+3,w
  1983  0178  00DB               	movwf	_aveTmr1Val+3
  1984  0179  0845               	movf	?___fttol+2,w
  1985  017A  00DA               	movwf	_aveTmr1Val+2
  1986  017B  0844               	movf	?___fttol+1,w
  1987  017C  00D9               	movwf	_aveTmr1Val+1
  1988  017D  0843               	movf	?___fttol,w
  1989  017E  00D8               	movwf	_aveTmr1Val
  1990                           
  1991                           ;newmain.c: 184: if((aveTmr1Val >= 4750) && (aveTmr1Val <= 5250)){
  1992  017F  085B               	movf	_aveTmr1Val+3,w
  1993  0180  1D03               	btfss	3,2
  1994  0181  298B               	goto	l3420
  1995  0182  085A               	movf	_aveTmr1Val+2,w
  1996  0183  1D03               	btfss	3,2
  1997  0184  298B               	goto	l3420
  1998  0185  308E               	movlw	142
  1999  0186  0258               	subwf	_aveTmr1Val,w
  2000  0187  3012               	movlw	18
  2001  0188  3B59               	subwfb	_aveTmr1Val+1,w
  2002  0189  1C03               	btfss	3,0
  2003  018A  29A0               	goto	l3426
  2004  018B                     l3420:	
  2005  018B  085B               	movf	_aveTmr1Val+3,w
  2006  018C  1D03               	btfss	3,2
  2007  018D  29A0               	goto	l3426
  2008  018E  085A               	movf	_aveTmr1Val+2,w
  2009  018F  1D03               	btfss	3,2
  2010  0190  29A0               	goto	l3426
  2011  0191  3083               	movlw	131
  2012  0192  0258               	subwf	_aveTmr1Val,w
  2013  0193  3014               	movlw	20
  2014  0194  3B59               	subwfb	_aveTmr1Val+1,w
  2015  0195  1803               	btfsc	3,0
  2016  0196  29A0               	goto	l3426
  2017                           
  2018                           ;newmain.c: 186: txByte = '1';
  2019  0197  3031               	movlw	49
  2020  0198  00D1               	movwf	??_verifyACSignal
  2021  0199  0851               	movf	??_verifyACSignal,w
  2022  019A  00EB               	movwf	_txByte
  2023                           
  2024                           ;newmain.c: 188: ADC_OPTO_Relay(1);
  2025  019B  3001               	movlw	1
  2026  019C  318F  271C  3180   	fcall	_ADC_OPTO_Relay
  2027                           
  2028                           ;newmain.c: 190: }
  2029  019F  29A5               	goto	l3428
  2030  01A0                     l3426:	
  2031                           
  2032                           ;newmain.c: 191: else{
  2033                           ;newmain.c: 193: txByte = '0';
  2034  01A0  3030               	movlw	48
  2035  01A1  0020               	movlb	0	; select bank0
  2036  01A2  00D1               	movwf	??_verifyACSignal
  2037  01A3  0851               	movf	??_verifyACSignal,w
  2038  01A4  00EB               	movwf	_txByte
  2039  01A5                     l3428:	
  2040                           
  2041                           ;newmain.c: 194: }
  2042                           ;newmain.c: 196: PIE1bits.RCIE = 1;
  2043  01A5  0021               	movlb	1	; select bank1
  2044  01A6  1691               	bsf	17,5	;volatile
  2045                           
  2046                           ;newmain.c: 200: UART_TX(txByte);
  2047  01A7  0020               	movlb	0	; select bank0
  2048  01A8  086B               	movf	_txByte,w
  2049  01A9  00D1               	movwf	??_verifyACSignal
  2050  01AA  01D2               	clrf	??_verifyACSignal+1
  2051  01AB  0851               	movf	??_verifyACSignal,w
  2052  01AC  00A0               	movwf	UART_TX@data
  2053  01AD  0852               	movf	??_verifyACSignal+1,w
  2054  01AE  00A1               	movwf	UART_TX@data+1
  2055  01AF  318E  26A8  3180   	fcall	_UART_TX
  2056                           
  2057                           ;newmain.c: 201: _delay((unsigned long)((1800)*(4000000/4000.0)));
  2058  01B2  300A               	movlw	10
  2059  01B3  0020               	movlb	0	; select bank0
  2060  01B4  00D2               	movwf	??_verifyACSignal+1
  2061  01B5  3022               	movlw	34
  2062  01B6  00D1               	movwf	??_verifyACSignal
  2063  01B7  30A1               	movlw	161
  2064  01B8                     u3677:	
  2065  01B8  0B89               	decfsz	9,f
  2066  01B9  29B8               	goto	u3677
  2067  01BA  0BD1               	decfsz	??_verifyACSignal,f
  2068  01BB  29B8               	goto	u3677
  2069  01BC  0BD2               	decfsz	??_verifyACSignal+1,f
  2070  01BD  29B8               	goto	u3677
  2071                           
  2072                           ;newmain.c: 203: printf("%d\n", aveTmr1Val);
  2073  01BE  3001               	movlw	low (STR_1| (0+32768))
  2074  01BF  0020               	movlb	0	; select bank0
  2075  01C0  00AE               	movwf	printf@f
  2076  01C1  3088               	movlw	high (STR_1| (0+32768))
  2077  01C2  00AF               	movwf	printf@f+1
  2078  01C3  085B               	movf	_aveTmr1Val+3,w
  2079  01C4  00B3               	movwf	?_printf+5
  2080  01C5  085A               	movf	_aveTmr1Val+2,w
  2081  01C6  00B2               	movwf	?_printf+4
  2082  01C7  0859               	movf	_aveTmr1Val+1,w
  2083  01C8  00B1               	movwf	?_printf+3
  2084  01C9  0858               	movf	_aveTmr1Val,w
  2085  01CA  00B0               	movwf	?_printf+2
  2086  01CB  3182  22EA  3180   	fcall	_printf
  2087                           
  2088                           ;newmain.c: 205: empty_RX_BUFF();
  2089  01CE  3187  2770  3180   	fcall	_empty_RX_BUFF
  2090                           
  2091                           ;newmain.c: 207: if((aveTmr1Val >= 4750) && (aveTmr1Val <= 5250)){
  2092  01D1  0020               	movlb	0	; select bank0
  2093  01D2  085B               	movf	_aveTmr1Val+3,w
  2094  01D3  1D03               	btfss	3,2
  2095  01D4  29DE               	goto	l3440
  2096  01D5  085A               	movf	_aveTmr1Val+2,w
  2097  01D6  1D03               	btfss	3,2
  2098  01D7  29DE               	goto	l3440
  2099  01D8  308E               	movlw	142
  2100  01D9  0258               	subwf	_aveTmr1Val,w
  2101  01DA  3012               	movlw	18
  2102  01DB  3B59               	subwfb	_aveTmr1Val+1,w
  2103  01DC  1C03               	btfss	3,0
  2104  01DD  0008               	return
  2105  01DE                     l3440:	
  2106  01DE  085B               	movf	_aveTmr1Val+3,w
  2107  01DF  1D03               	btfss	3,2
  2108  01E0  0008               	return
  2109  01E1  085A               	movf	_aveTmr1Val+2,w
  2110  01E2  1D03               	btfss	3,2
  2111  01E3  0008               	return
  2112  01E4  3083               	movlw	131
  2113  01E5  0258               	subwf	_aveTmr1Val,w
  2114  01E6  3014               	movlw	20
  2115  01E7  3B59               	subwfb	_aveTmr1Val+1,w
  2116  01E8  1803               	btfsc	3,0
  2117  01E9  0008               	return
  2118                           
  2119                           ;newmain.c: 210: ADC_Test = 0;
  2120  01EA  01F0               	clrf	_ADC_Test	;volatile
  2121  01EB  01F1               	clrf	_ADC_Test+1	;volatile
  2122                           
  2123                           ;newmain.c: 212: for(int i = 0; i < 6; i++){
  2124  01EC  01D5               	clrf	verifyACSignal@i
  2125  01ED  01D6               	clrf	verifyACSignal@i+1
  2126  01EE  0856               	movf	verifyACSignal@i+1,w
  2127  01EF  3A80               	xorlw	128
  2128  01F0  00D1               	movwf	??_verifyACSignal
  2129  01F1  3080               	movlw	128
  2130  01F2  0251               	subwf	??_verifyACSignal,w
  2131  01F3  1D03               	skipz
  2132  01F4  29F7               	goto	u3605
  2133  01F5  3006               	movlw	6
  2134  01F6  0255               	subwf	verifyACSignal@i,w
  2135  01F7                     u3605:	
  2136  01F7  1803               	btfsc	3,0
  2137  01F8  2A15               	goto	l3456
  2138  01F9                     l3448:	
  2139                           
  2140                           ;newmain.c: 214: ToggleGLED();
  2141  01F9  318E  26C9  3180   	fcall	_ToggleGLED
  2142                           
  2143                           ;newmain.c: 215: _delay((unsigned long)((100)*(4000000/4000.0)));
  2144  01FC  3082               	movlw	130
  2145  01FD  0020               	movlb	0	; select bank0
  2146  01FE  00D1               	movwf	??_verifyACSignal
  2147  01FF  30DD               	movlw	221
  2148  0200                     u3687:	
  2149  0200  0B89               	decfsz	9,f
  2150  0201  2A00               	goto	u3687
  2151  0202  0BD1               	decfsz	??_verifyACSignal,f
  2152  0203  2A00               	goto	u3687
  2153  0204  3200               	nop2
  2154  0205  3001               	movlw	1
  2155  0206  0020               	movlb	0	; select bank0
  2156  0207  07D5               	addwf	verifyACSignal@i,f
  2157  0208  3000               	movlw	0
  2158  0209  3DD6               	addwfc	verifyACSignal@i+1,f
  2159  020A  0856               	movf	verifyACSignal@i+1,w
  2160  020B  3A80               	xorlw	128
  2161  020C  00D1               	movwf	??_verifyACSignal
  2162  020D  3080               	movlw	128
  2163  020E  0251               	subwf	??_verifyACSignal,w
  2164  020F  1D03               	skipz
  2165  0210  2A13               	goto	u3615
  2166  0211  3006               	movlw	6
  2167  0212  0255               	subwf	verifyACSignal@i,w
  2168  0213                     u3615:	
  2169  0213  1C03               	skipc
  2170  0214  29F9               	goto	l3448
  2171  0215                     l3456:	
  2172                           
  2173                           ;newmain.c: 216: }
  2174                           ;newmain.c: 218: ADC_OPTO_Relay(1);
  2175  0215  3001               	movlw	1
  2176  0216  318F  271C  3180   	fcall	_ADC_OPTO_Relay
  2177                           
  2178                           ;newmain.c: 220: setupTestParameters();
  2179  0219  3182  221C         	fcall	_setupTestParameters
  2180                           
  2181                           ;newmain.c: 221: }
  2182  021B  0008               	return
  2183  021C                     __end_of_verifyACSignal:	
  2184                           ;newmain.c: 225: return;
  2185                           
  2186                           ;newmain.c: 222: else{}
  2187                           
  2188                           
  2189                           	psect	text2
  2190  021C                     __ptext2:	
  2191 ;; *************** function _setupTestParameters *****************
  2192 ;; Defined at:
  2193 ;;		line 228 in file "newmain.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  handshake3      1   28[BANK0 ] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2207 ;;      Params:         0       0       0       0
  2208 ;;      Locals:         0       1       0       0
  2209 ;;      Temps:          0       2       0       0
  2210 ;;      Totals:         0       3       0       0
  2211 ;;Total ram usage:        3 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    4
  2214 ;; This function calls:
  2215 ;;		_PassLED
  2216 ;;		_UART_TX
  2217 ;;		_UART_TX_String
  2218 ;;		___lldiv
  2219 ;;		___lmul
  2220 ;;		_atoi
  2221 ;;		_beginHighCurrentTest
  2222 ;;		_empty_RX_BUFF
  2223 ;; This function is called by:
  2224 ;;		_verifyACSignal
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _setupTestParameters
  2230  021C                     _setupTestParameters:	
  2231                           
  2232                           ;newmain.c: 231: INTCONbits.PEIE = 1;
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _setupTestParameters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2236  021C  170B               	bsf	11,6	;volatile
  2237                           
  2238                           ;newmain.c: 234: RCSTAbits.CREN = 0; RCSTAbits.CREN = 1;
  2239  021D  0023               	movlb	3	; select bank3
  2240  021E  121D               	bcf	29,4	;volatile
  2241  021F  161D               	bsf	29,4	;volatile
  2242                           
  2243                           ;newmain.c: 236: unsigned char handshake3 = '0';
  2244  0220  3030               	movlw	48
  2245  0221  0020               	movlb	0	; select bank0
  2246  0222  00BA               	movwf	??_setupTestParameters
  2247  0223  083A               	movf	??_setupTestParameters,w
  2248  0224  00BC               	movwf	setupTestParameters@handshake3
  2249                           
  2250                           ;newmain.c: 238: PassLED(1);
  2251  0225  3001               	movlw	1
  2252  0226  318F  270E  3182   	fcall	_PassLED
  2253  0229                     l3224:	
  2254                           ;newmain.c: 240: while(handshake3 != '3'){
  2255                           
  2256  0229  3033               	movlw	51
  2257  022A  0020               	movlb	0	; select bank0
  2258  022B  063C               	xorwf	setupTestParameters@handshake3,w
  2259  022C  1903               	btfsc	3,2
  2260  022D  2A35               	goto	l3226
  2261                           
  2262                           ;newmain.c: 242: handshake3 = rxArray[0];
  2263  022E  0021               	movlb	1	; select bank1
  2264  022F  0838               	movf	_rxArray^(0+128),w
  2265  0230  0020               	movlb	0	; select bank0
  2266  0231  00BA               	movwf	??_setupTestParameters
  2267  0232  083A               	movf	??_setupTestParameters,w
  2268  0233  00BC               	movwf	setupTestParameters@handshake3
  2269  0234  2A29               	goto	l3224
  2270  0235                     l3226:	
  2271                           
  2272                           ;newmain.c: 243: }
  2273                           ;newmain.c: 244: rxFlag = 0;
  2274  0235  0021               	movlb	1	; select bank1
  2275  0236  01AC               	clrf	_rxFlag^(0+128)
  2276  0237  01AD               	clrf	(_rxFlag+1)^(0+128)
  2277                           
  2278                           ;newmain.c: 245: PassLED(0);
  2279  0238  3000               	movlw	0
  2280  0239  318F  270E  3182   	fcall	_PassLED
  2281                           
  2282                           ;newmain.c: 247: _delay((unsigned long)((10)*(4000000/4000.0)));
  2283  023C  300D               	movlw	13
  2284  023D  0020               	movlb	0	; select bank0
  2285  023E  00BA               	movwf	??_setupTestParameters
  2286  023F  30FB               	movlw	251
  2287  0240                     u3697:	
  2288  0240  0B89               	decfsz	9,f
  2289  0241  2A40               	goto	u3697
  2290  0242  0BBA               	decfsz	??_setupTestParameters,f
  2291  0243  2A40               	goto	u3697
  2292  0244  3200               	nop2
  2293                           
  2294                           ;newmain.c: 248: UART_TX(rxArray[0]);
  2295  0245  0021               	movlb	1	; select bank1
  2296  0246  0838               	movf	_rxArray^(0+128),w
  2297  0247  0020               	movlb	0	; select bank0
  2298  0248  00BA               	movwf	??_setupTestParameters
  2299  0249  01BB               	clrf	??_setupTestParameters+1
  2300  024A  083A               	movf	??_setupTestParameters,w
  2301  024B  00A0               	movwf	UART_TX@data
  2302  024C  083B               	movf	??_setupTestParameters+1,w
  2303  024D  00A1               	movwf	UART_TX@data+1
  2304  024E  318E  26A8  3182   	fcall	_UART_TX
  2305                           
  2306                           ;newmain.c: 249: empty_RX_BUFF();
  2307  0251  3187  2770  3182   	fcall	_empty_RX_BUFF
  2308  0254                     l3236:	
  2309                           ;newmain.c: 253: while(rxArray[0] == '\0'){}
  2310                           
  2311  0254  0021               	movlb	1	; select bank1
  2312  0255  0838               	movf	_rxArray^(0+128),w
  2313  0256  1903               	btfsc	3,2
  2314  0257  2A54               	goto	l3236
  2315                           
  2316                           ;newmain.c: 254: rxFlag = 0;
  2317  0258  01AC               	clrf	_rxFlag^(0+128)
  2318  0259  01AD               	clrf	(_rxFlag+1)^(0+128)
  2319                           
  2320                           ;newmain.c: 256: _delay((unsigned long)((10)*(4000000/4000.0)));
  2321  025A  300D               	movlw	13
  2322  025B  0020               	movlb	0	; select bank0
  2323  025C  00BA               	movwf	??_setupTestParameters
  2324  025D  30FB               	movlw	251
  2325  025E                     u3707:	
  2326  025E  0B89               	decfsz	9,f
  2327  025F  2A5E               	goto	u3707
  2328  0260  0BBA               	decfsz	??_setupTestParameters,f
  2329  0261  2A5E               	goto	u3707
  2330  0262  3200               	nop2
  2331                           
  2332                           ;newmain.c: 257: UART_TX_String(rxArray);
  2333  0263  30B8               	movlw	(low (_rxArray| 0))& (0+255)
  2334  0264  3187  2795  3182   	fcall	_UART_TX_String
  2335                           
  2336                           ;newmain.c: 259: PoW = atoi(rxArray);
  2337  0267  30B8               	movlw	(low (_rxArray| 0))& (0+255)
  2338  0268  3184  24B3  3182   	fcall	_atoi
  2339  026B  0020               	movlb	0	; select bank0
  2340  026C  0826               	movf	?_atoi,w
  2341  026D  00EC               	movwf	_PoW
  2342  026E  0827               	movf	?_atoi+1,w
  2343  026F  00ED               	movwf	_PoW+1
  2344  0270  0D89               	rlf	9,f
  2345  0271  3B89               	subwfb	9,f
  2346  0272  0989               	comf	9,f
  2347  0273  00EE               	movwf	_PoW+2
  2348  0274  00EF               	movwf	_PoW+3
  2349                           
  2350                           ;newmain.c: 261: empty_RX_BUFF();
  2351  0275  3187  2770  3182   	fcall	_empty_RX_BUFF
  2352  0278                     l3248:	
  2353                           ;newmain.c: 264: while(rxArray[0] == '\0'){}
  2354                           
  2355  0278  0021               	movlb	1	; select bank1
  2356  0279  0838               	movf	_rxArray^(0+128),w
  2357  027A  1903               	btfsc	3,2
  2358  027B  2A78               	goto	l3248
  2359                           
  2360                           ;newmain.c: 265: rxFlag = 0;
  2361  027C  01AC               	clrf	_rxFlag^(0+128)
  2362  027D  01AD               	clrf	(_rxFlag+1)^(0+128)
  2363                           
  2364                           ;newmain.c: 267: _delay((unsigned long)((10)*(4000000/4000.0)));
  2365  027E  300D               	movlw	13
  2366  027F  0020               	movlb	0	; select bank0
  2367  0280  00BA               	movwf	??_setupTestParameters
  2368  0281  30FB               	movlw	251
  2369  0282                     u3717:	
  2370  0282  0B89               	decfsz	9,f
  2371  0283  2A82               	goto	u3717
  2372  0284  0BBA               	decfsz	??_setupTestParameters,f
  2373  0285  2A82               	goto	u3717
  2374  0286  3200               	nop2
  2375                           
  2376                           ;newmain.c: 268: UART_TX_String(rxArray);
  2377  0287  30B8               	movlw	(low (_rxArray| 0))& (0+255)
  2378  0288  3187  2795  3182   	fcall	_UART_TX_String
  2379                           
  2380                           ;newmain.c: 269: cycles = atoi(rxArray);
  2381  028B  30B8               	movlw	(low (_rxArray| 0))& (0+255)
  2382  028C  3184  24B3  3182   	fcall	_atoi
  2383  028F  0020               	movlb	0	; select bank0
  2384  0290  0827               	movf	?_atoi+1,w
  2385  0291  0021               	movlb	1	; select bank1
  2386  0292  00AB               	movwf	(_cycles+1)^(0+128)
  2387  0293  0020               	movlb	0	; select bank0
  2388  0294  0826               	movf	?_atoi,w
  2389  0295  0021               	movlb	1	; select bank1
  2390  0296  00AA               	movwf	_cycles^(0+128)
  2391                           
  2392                           ;newmain.c: 271: empty_RX_BUFF();
  2393  0297  3187  2770  3182   	fcall	_empty_RX_BUFF
  2394                           
  2395                           ;newmain.c: 274: PoW = ((PoW*100)/360);
  2396  029A  3000               	movlw	0
  2397  029B  0020               	movlb	0	; select bank0
  2398  029C  00AF               	movwf	___lldiv@divisor+3
  2399  029D  3000               	movlw	0
  2400  029E  00AE               	movwf	___lldiv@divisor+2
  2401  029F  3001               	movlw	1
  2402  02A0  00AD               	movwf	___lldiv@divisor+1
  2403  02A1  3068               	movlw	104
  2404  02A2  00AC               	movwf	___lldiv@divisor
  2405  02A3  086F               	movf	_PoW+3,w
  2406  02A4  00A3               	movwf	___lmul@multiplier+3
  2407  02A5  086E               	movf	_PoW+2,w
  2408  02A6  00A2               	movwf	___lmul@multiplier+2
  2409  02A7  086D               	movf	_PoW+1,w
  2410  02A8  00A1               	movwf	___lmul@multiplier+1
  2411  02A9  086C               	movf	_PoW,w
  2412  02AA  00A0               	movwf	___lmul@multiplier
  2413  02AB  3000               	movlw	0
  2414  02AC  00A7               	movwf	___lmul@multiplicand+3
  2415  02AD  3000               	movlw	0
  2416  02AE  00A6               	movwf	___lmul@multiplicand+2
  2417  02AF  3000               	movlw	0
  2418  02B0  00A5               	movwf	___lmul@multiplicand+1
  2419  02B1  3064               	movlw	100
  2420  02B2  00A4               	movwf	___lmul@multiplicand
  2421  02B3  3186  26BE  3182   	fcall	___lmul
  2422  02B6  0020               	movlb	0	; select bank0
  2423  02B7  0823               	movf	?___lmul+3,w
  2424  02B8  00B3               	movwf	___lldiv@dividend+3
  2425  02B9  0822               	movf	?___lmul+2,w
  2426  02BA  00B2               	movwf	___lldiv@dividend+2
  2427  02BB  0821               	movf	?___lmul+1,w
  2428  02BC  00B1               	movwf	___lldiv@dividend+1
  2429  02BD  0820               	movf	?___lmul,w
  2430  02BE  00B0               	movwf	___lldiv@dividend
  2431  02BF  3185  2583  3182   	fcall	___lldiv
  2432  02C2  0020               	movlb	0	; select bank0
  2433  02C3  082F               	movf	?___lldiv+3,w
  2434  02C4  00EF               	movwf	_PoW+3
  2435  02C5  082E               	movf	?___lldiv+2,w
  2436  02C6  00EE               	movwf	_PoW+2
  2437  02C7  082D               	movf	?___lldiv+1,w
  2438  02C8  00ED               	movwf	_PoW+1
  2439  02C9  082C               	movf	?___lldiv,w
  2440  02CA  00EC               	movwf	_PoW
  2441                           
  2442                           ;newmain.c: 275: PoW = ((10000/100)*PoW);
  2443  02CB  086F               	movf	_PoW+3,w
  2444  02CC  00A3               	movwf	___lmul@multiplier+3
  2445  02CD  086E               	movf	_PoW+2,w
  2446  02CE  00A2               	movwf	___lmul@multiplier+2
  2447  02CF  086D               	movf	_PoW+1,w
  2448  02D0  00A1               	movwf	___lmul@multiplier+1
  2449  02D1  086C               	movf	_PoW,w
  2450  02D2  00A0               	movwf	___lmul@multiplier
  2451  02D3  3000               	movlw	0
  2452  02D4  00A7               	movwf	___lmul@multiplicand+3
  2453  02D5  3000               	movlw	0
  2454  02D6  00A6               	movwf	___lmul@multiplicand+2
  2455  02D7  3000               	movlw	0
  2456  02D8  00A5               	movwf	___lmul@multiplicand+1
  2457  02D9  3064               	movlw	100
  2458  02DA  00A4               	movwf	___lmul@multiplicand
  2459  02DB  3186  26BE  3182   	fcall	___lmul
  2460  02DE  0020               	movlb	0	; select bank0
  2461  02DF  0823               	movf	?___lmul+3,w
  2462  02E0  00EF               	movwf	_PoW+3
  2463  02E1  0822               	movf	?___lmul+2,w
  2464  02E2  00EE               	movwf	_PoW+2
  2465  02E3  0821               	movf	?___lmul+1,w
  2466  02E4  00ED               	movwf	_PoW+1
  2467  02E5  0820               	movf	?___lmul,w
  2468  02E6  00EC               	movwf	_PoW
  2469                           
  2470                           ;newmain.c: 278: beginHighCurrentTest();
  2471  02E7  3183  23A2         	fcall	_beginHighCurrentTest
  2472  02E9  0008               	return
  2473  02EA                     __end_of_setupTestParameters:	
  2474                           ;newmain.c: 280: return;
  2475                           
  2476                           
  2477                           	psect	text3
  2478  03A2                     __ptext3:	
  2479 ;; *************** function _beginHighCurrentTest *****************
  2480 ;; Defined at:
  2481 ;;		line 284 in file "newmain.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  i               2    8[BANK0 ] int 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2495 ;;      Params:         0       0       0       0
  2496 ;;      Locals:         0       2       0       0
  2497 ;;      Temps:          0       4       0       0
  2498 ;;      Totals:         0       6       0       0
  2499 ;;Total ram usage:        6 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    3
  2502 ;; This function calls:
  2503 ;;		_ADC_OPTO_Relay
  2504 ;;		_SCR
  2505 ;;		_SCR_Relay
  2506 ;;		_TMR1Reset
  2507 ;;		_Timer1Read
  2508 ;; This function is called by:
  2509 ;;		_setupTestParameters
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _beginHighCurrentTest
  2515  03A2                     _beginHighCurrentTest:	
  2516                           
  2517                           ;newmain.c: 286: mainTest = 1;
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _beginHighCurrentTest: [wreg+status,2+status,0+pclath+cstack]
  2521  03A2  3001               	movlw	1
  2522  03A3  0021               	movlb	1	; select bank1
  2523  03A4  00B0               	movwf	_mainTest^(0+128)	;volatile
  2524  03A5  3000               	movlw	0
  2525  03A6  00B1               	movwf	(_mainTest^(0+128)+1)	;volatile
  2526                           
  2527                           ;newmain.c: 287: PIE1bits.RCIE = 0;
  2528  03A7  1291               	bcf	17,5	;volatile
  2529                           
  2530                           ;newmain.c: 301: if(PoW > 5000)
  2531  03A8  0020               	movlb	0	; select bank0
  2532  03A9  086F               	movf	_PoW+3,w
  2533  03AA  1D03               	btfss	3,2
  2534  03AB  2BB5               	goto	l2850
  2535  03AC  086E               	movf	_PoW+2,w
  2536  03AD  1D03               	btfss	3,2
  2537  03AE  2BB5               	goto	l2850
  2538  03AF  3089               	movlw	137
  2539  03B0  026C               	subwf	_PoW,w
  2540  03B1  3013               	movlw	19
  2541  03B2  3B6D               	subwfb	_PoW+1,w
  2542  03B3  1C03               	btfss	3,0
  2543  03B4  2BBF               	goto	l2854
  2544  03B5                     l2850:	
  2545                           
  2546                           ;newmain.c: 302: {
  2547                           ;newmain.c: 304: SCR_Relay(1);
  2548  03B5  3001               	movlw	1
  2549  03B6  318F  2738  3183   	fcall	_SCR_Relay
  2550                           
  2551                           ;newmain.c: 305: NegCycle = 1;
  2552  03B9  3001               	movlw	1
  2553  03BA  0020               	movlb	0	; select bank0
  2554  03BB  00DE               	movwf	_NegCycle	;volatile
  2555  03BC  3000               	movlw	0
  2556  03BD  00DF               	movwf	_NegCycle+1	;volatile
  2557                           
  2558                           ;newmain.c: 307: }
  2559  03BE  2BD4               	goto	l2860
  2560  03BF                     l2854:	
  2561                           
  2562                           ;newmain.c: 308: else if (PoW < 4999){
  2563  03BF  086F               	movf	_PoW+3,w
  2564  03C0  1D03               	btfss	3,2
  2565  03C1  2BD4               	goto	l2860
  2566  03C2  086E               	movf	_PoW+2,w
  2567  03C3  1D03               	btfss	3,2
  2568  03C4  2BD4               	goto	l2860
  2569  03C5  3087               	movlw	135
  2570  03C6  026C               	subwf	_PoW,w
  2571  03C7  3013               	movlw	19
  2572  03C8  3B6D               	subwfb	_PoW+1,w
  2573  03C9  1803               	btfsc	3,0
  2574  03CA  2BD4               	goto	l2860
  2575                           
  2576                           ;newmain.c: 310: SCR_Relay(0);
  2577  03CB  3000               	movlw	0
  2578  03CC  318F  2738  3183   	fcall	_SCR_Relay
  2579                           
  2580                           ;newmain.c: 311: PosCycle = 1;
  2581  03CF  3001               	movlw	1
  2582  03D0  0020               	movlb	0	; select bank0
  2583  03D1  00E0               	movwf	_PosCycle	;volatile
  2584  03D2  3000               	movlw	0
  2585  03D3  00E1               	movwf	_PosCycle+1	;volatile
  2586  03D4                     l2860:	
  2587                           
  2588                           ;newmain.c: 317: }
  2589                           ;newmain.c: 320: for(int i = 0; i < cycles; i++){
  2590  03D4  01A8               	clrf	beginHighCurrentTest@i
  2591  03D5  01A9               	clrf	beginHighCurrentTest@i+1
  2592  03D6                     l2874:	
  2593  03D6  0021               	movlb	1	; select bank1
  2594  03D7  082B               	movf	(_cycles+1)^(0+128),w
  2595  03D8  0020               	movlb	0	; select bank0
  2596  03D9  0229               	subwf	beginHighCurrentTest@i+1,w
  2597  03DA  1D03               	skipz
  2598  03DB  2BE0               	goto	u2765
  2599  03DC  0021               	movlb	1	; select bank1
  2600  03DD  082A               	movf	_cycles^(0+128),w
  2601  03DE  0020               	movlb	0	; select bank0
  2602  03DF  0228               	subwf	beginHighCurrentTest@i,w
  2603  03E0                     u2765:	
  2604  03E0  1803               	btfsc	3,0
  2605  03E1  2C1C               	goto	l2876
  2606                           
  2607                           ;newmain.c: 324: INTCONbits.INTE = 1;
  2608  03E2  160B               	bsf	11,4	;volatile
  2609                           
  2610                           ;newmain.c: 325: INTCONbits.IOCIE = 1;
  2611  03E3  158B               	bsf	11,3	;volatile
  2612  03E4                     l2864:	
  2613                           ;newmain.c: 327: while(SCR_On <= PoW)
  2614                           
  2615  03E4  0021               	movlb	1	; select bank1
  2616  03E5  082E               	movf	_SCR_On^(0+128),w	;volatile
  2617  03E6  0020               	movlb	0	; select bank0
  2618  03E7  00A4               	movwf	??_beginHighCurrentTest
  2619  03E8  0021               	movlb	1	; select bank1
  2620  03E9  082F               	movf	(_SCR_On+1)^(0+128),w	;volatile
  2621  03EA  0020               	movlb	0	; select bank0
  2622  03EB  00A5               	movwf	??_beginHighCurrentTest+1
  2623  03EC  01A6               	clrf	??_beginHighCurrentTest+2
  2624  03ED  01A7               	clrf	??_beginHighCurrentTest+3
  2625  03EE  0827               	movf	??_beginHighCurrentTest+3,w
  2626  03EF  026F               	subwf	_PoW+3,w
  2627  03F0  1D03               	skipz
  2628  03F1  2BFC               	goto	u2755
  2629  03F2  0826               	movf	??_beginHighCurrentTest+2,w
  2630  03F3  026E               	subwf	_PoW+2,w
  2631  03F4  1D03               	skipz
  2632  03F5  2BFC               	goto	u2755
  2633  03F6  0825               	movf	??_beginHighCurrentTest+1,w
  2634  03F7  026D               	subwf	_PoW+1,w
  2635  03F8  1D03               	skipz
  2636  03F9  2BFC               	goto	u2755
  2637  03FA  0824               	movf	??_beginHighCurrentTest,w
  2638  03FB  026C               	subwf	_PoW,w
  2639  03FC                     u2755:	
  2640  03FC  1C03               	btfss	3,0
  2641  03FD  2C0A               	goto	l191
  2642                           
  2643                           ;newmain.c: 328: {
  2644                           ;newmain.c: 329: SCR_On = Timer1Read();
  2645  03FE  318F  27AF  3183   	fcall	_Timer1Read
  2646  0401  0020               	movlb	0	; select bank0
  2647  0402  0821               	movf	?_Timer1Read+1,w
  2648  0403  0021               	movlb	1	; select bank1
  2649  0404  00AF               	movwf	(_SCR_On+1)^(0+128)	;volatile
  2650  0405  0020               	movlb	0	; select bank0
  2651  0406  0820               	movf	?_Timer1Read,w
  2652  0407  0021               	movlb	1	; select bank1
  2653  0408  00AE               	movwf	_SCR_On^(0+128)	;volatile
  2654  0409  2BE4               	goto	l2864
  2655  040A                     l191:	
  2656                           
  2657                           ;newmain.c: 330: }
  2658                           ;newmain.c: 331: INTCONbits.INTE = 0;
  2659  040A  120B               	bcf	11,4	;volatile
  2660                           
  2661                           ;newmain.c: 332: INTCONbits.IOCIE = 0;
  2662  040B  118B               	bcf	11,3	;volatile
  2663                           
  2664                           ;newmain.c: 333: SCR(1);
  2665  040C  3001               	movlw	1
  2666  040D  318F  272A  3183   	fcall	_SCR
  2667                           
  2668                           ;newmain.c: 334: SCR_On = 0;
  2669  0410  0021               	movlb	1	; select bank1
  2670  0411  01AE               	clrf	_SCR_On^(0+128)	;volatile
  2671  0412  01AF               	clrf	(_SCR_On+1)^(0+128)	;volatile
  2672                           
  2673                           ;newmain.c: 335: TMR1Reset();
  2674  0413  318E  2694  3183   	fcall	_TMR1Reset
  2675  0416  3001               	movlw	1
  2676  0417  0020               	movlb	0	; select bank0
  2677  0418  07A8               	addwf	beginHighCurrentTest@i,f
  2678  0419  3000               	movlw	0
  2679  041A  3DA9               	addwfc	beginHighCurrentTest@i+1,f
  2680  041B  2BD6               	goto	l2874
  2681  041C                     l2876:	
  2682                           
  2683                           ;newmain.c: 336: }
  2684                           ;newmain.c: 338: NegCycle = 0;
  2685  041C  01DE               	clrf	_NegCycle	;volatile
  2686  041D  01DF               	clrf	_NegCycle+1	;volatile
  2687                           
  2688                           ;newmain.c: 339: PosCycle = 0;
  2689  041E  01E0               	clrf	_PosCycle	;volatile
  2690  041F  01E1               	clrf	_PosCycle+1	;volatile
  2691                           
  2692                           ;newmain.c: 340: SCR(0);
  2693  0420  3000               	movlw	0
  2694  0421  318F  272A  3183   	fcall	_SCR
  2695                           
  2696                           ;newmain.c: 341: SCR_Relay(0);
  2697  0424  3000               	movlw	0
  2698  0425  318F  2738  3183   	fcall	_SCR_Relay
  2699                           
  2700                           ;newmain.c: 342: ADC_OPTO_Relay(0);
  2701  0428  3000               	movlw	0
  2702  0429  318F  271C         	fcall	_ADC_OPTO_Relay
  2703  042B  0008               	return
  2704  042C                     __end_of_beginHighCurrentTest:	
  2705                           ;newmain.c: 345: return;
  2706                           
  2707                           
  2708                           	psect	text4
  2709  0FAF                     __ptext4:	
  2710 ;; *************** function _Timer1Read *****************
  2711 ;; Defined at:
  2712 ;;		line 45 in file "Timer.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  2    0[BANK0 ] unsigned int 
  2719 ;; Registers used:
  2720 ;;		wreg
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2726 ;;      Params:         0       2       0       0
  2727 ;;      Locals:         0       0       0       0
  2728 ;;      Temps:          0       2       0       0
  2729 ;;      Totals:         0       4       0       0
  2730 ;;Total ram usage:        4 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    2
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_beginHighCurrentTest
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _Timer1Read
  2742  0FAF                     _Timer1Read:	
  2743                           
  2744                           ;Timer.c: 47: temp_time = TMR1H;
  2745                           
  2746                           ;incstack = 0
  2747                           ; Regs used in _Timer1Read: [wreg]
  2748  0FAF  0020               	movlb	0	; select bank0
  2749  0FB0  0817               	movf	23,w	;volatile
  2750  0FB1  00A2               	movwf	??_Timer1Read
  2751  0FB2  01A3               	clrf	??_Timer1Read+1
  2752  0FB3  0822               	movf	??_Timer1Read,w
  2753  0FB4  00DC               	movwf	_temp_time
  2754  0FB5  0823               	movf	??_Timer1Read+1,w
  2755  0FB6  00DD               	movwf	_temp_time+1
  2756                           
  2757                           ;Timer.c: 48: temp_time <<= 8;
  2758  0FB7  3008               	movlw	8
  2759  0FB8                     u2575:	
  2760  0FB8  35DC               	lslf	_temp_time,f
  2761  0FB9  0DDD               	rlf	_temp_time+1,f
  2762  0FBA  0B89               	decfsz	9,f
  2763  0FBB  2FB8               	goto	u2575
  2764                           
  2765                           ;Timer.c: 49: temp_time += TMR1L;
  2766  0FBC  0816               	movf	22,w	;volatile
  2767  0FBD  00A2               	movwf	??_Timer1Read
  2768  0FBE  01A3               	clrf	??_Timer1Read+1
  2769  0FBF  0822               	movf	??_Timer1Read,w
  2770  0FC0  07DC               	addwf	_temp_time,f
  2771  0FC1  0823               	movf	??_Timer1Read+1,w
  2772  0FC2  3DDD               	addwfc	_temp_time+1,f
  2773                           
  2774                           ;Timer.c: 51: return temp_time;
  2775  0FC3  085D               	movf	_temp_time+1,w
  2776  0FC4  00A1               	movwf	?_Timer1Read+1
  2777  0FC5  085C               	movf	_temp_time,w
  2778  0FC6  00A0               	movwf	?_Timer1Read
  2779  0FC7  0008               	return
  2780  0FC8                     __end_of_Timer1Read:	
  2781                           
  2782                           	psect	text5
  2783  0E94                     __ptext5:	
  2784 ;; *************** function _TMR1Reset *****************
  2785 ;; Defined at:
  2786 ;;		line 54 in file "Timer.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		status,2
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2800 ;;      Params:         0       0       0       0
  2801 ;;      Locals:         0       0       0       0
  2802 ;;      Temps:          0       0       0       0
  2803 ;;      Totals:         0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    2
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_beginHighCurrentTest
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _TMR1Reset
  2816  0E94                     _TMR1Reset:	
  2817                           
  2818                           ;Timer.c: 56: TMR1ON = 0;
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _TMR1Reset: [status,2]
  2822  0E94  0020               	movlb	0	; select bank0
  2823  0E95  1018               	bcf	24,0	;volatile
  2824                           
  2825                           ;Timer.c: 57: TMR1L = 0x00;
  2826  0E96  0196               	clrf	22	;volatile
  2827                           
  2828                           ;Timer.c: 58: TMR1H = 0x00;
  2829  0E97  0197               	clrf	23	;volatile
  2830  0E98  0008               	return
  2831  0E99                     __end_of_TMR1Reset:	
  2832                           
  2833                           	psect	text6
  2834  0F38                     __ptext6:	
  2835 ;; *************** function _SCR_Relay *****************
  2836 ;; Defined at:
  2837 ;;		line 97 in file "IO_Controls.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  OnOff           1    wreg     unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  OnOff           1    1[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2851 ;;      Params:         0       0       0       0
  2852 ;;      Locals:         0       1       0       0
  2853 ;;      Temps:          0       1       0       0
  2854 ;;      Totals:         0       2       0       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_beginHighCurrentTest
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _SCR_Relay
  2867  0F38                     _SCR_Relay:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _SCR_Relay: [wreg+status,2]
  2871                           ;SCR_Relay@OnOff stored from wreg
  2872  0F38  0020               	movlb	0	; select bank0
  2873  0F39  00A1               	movwf	SCR_Relay@OnOff
  2874                           
  2875                           ;IO_Controls.c: 99: portC.portCByte = PORTC;
  2876  0F3A  080E               	movf	14,w	;volatile
  2877  0F3B  00A0               	movwf	??_SCR_Relay
  2878  0F3C  0820               	movf	??_SCR_Relay,w
  2879  0F3D  00F3               	movwf	_portC
  2880                           
  2881                           ;IO_Controls.c: 100: portC.bits.SCR_Relay = OnOff;
  2882  0F3E  0821               	movf	SCR_Relay@OnOff,w
  2883  0F3F  3901               	andlw	1
  2884  0F40  10F3               	bcf	_portC,1
  2885  0F41  1D03               	skipz
  2886  0F42  14F3               	bsf	_portC,1
  2887                           
  2888                           ;IO_Controls.c: 101: PORTC=portC.portCByte;
  2889  0F43  0873               	movf	_portC,w
  2890  0F44  008E               	movwf	14	;volatile
  2891  0F45  0008               	return
  2892  0F46                     __end_of_SCR_Relay:	
  2893                           ;IO_Controls.c: 102: return;
  2894                           
  2895                           
  2896                           	psect	text7
  2897  0F2A                     __ptext7:	
  2898 ;; *************** function _SCR *****************
  2899 ;; Defined at:
  2900 ;;		line 52 in file "IO_Controls.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  OnOff           1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  OnOff           1    1[BANK0 ] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2914 ;;      Params:         0       0       0       0
  2915 ;;      Locals:         0       1       0       0
  2916 ;;      Temps:          0       1       0       0
  2917 ;;      Totals:         0       2       0       0
  2918 ;;Total ram usage:        2 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    2
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_beginHighCurrentTest
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _SCR
  2930  0F2A                     _SCR:	
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in _SCR: [wreg+status,2]
  2934                           ;SCR@OnOff stored from wreg
  2935  0F2A  0020               	movlb	0	; select bank0
  2936  0F2B  00A1               	movwf	SCR@OnOff
  2937                           
  2938                           ;IO_Controls.c: 54: portC.portCByte = PORTC;
  2939  0F2C  080E               	movf	14,w	;volatile
  2940  0F2D  00A0               	movwf	??_SCR
  2941  0F2E  0820               	movf	??_SCR,w
  2942  0F2F  00F3               	movwf	_portC
  2943                           
  2944                           ;IO_Controls.c: 55: portC.bits.SCR = OnOff;
  2945  0F30  0821               	movf	SCR@OnOff,w
  2946  0F31  3901               	andlw	1
  2947  0F32  1173               	bcf	_portC,2
  2948  0F33  1D03               	skipz
  2949  0F34  1573               	bsf	_portC,2
  2950                           
  2951                           ;IO_Controls.c: 56: PORTC = portC.portCByte;
  2952  0F35  0873               	movf	_portC,w
  2953  0F36  008E               	movwf	14	;volatile
  2954  0F37  0008               	return
  2955  0F38                     __end_of_SCR:	
  2956                           ;IO_Controls.c: 57: return;
  2957                           
  2958                           
  2959                           	psect	text8
  2960  0F1C                     __ptext8:	
  2961 ;; *************** function _ADC_OPTO_Relay *****************
  2962 ;; Defined at:
  2963 ;;		line 75 in file "IO_Controls.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  OnOff           1    wreg     unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  OnOff           1    1[BANK0 ] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2977 ;;      Params:         0       0       0       0
  2978 ;;      Locals:         0       1       0       0
  2979 ;;      Temps:          0       1       0       0
  2980 ;;      Totals:         0       2       0       0
  2981 ;;Total ram usage:        2 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    2
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_verifyACSignal
  2988 ;;		_beginHighCurrentTest
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _ADC_OPTO_Relay
  2994  0F1C                     _ADC_OPTO_Relay:	
  2995                           
  2996                           ;incstack = 0
  2997                           ; Regs used in _ADC_OPTO_Relay: [wreg+status,2]
  2998                           ;ADC_OPTO_Relay@OnOff stored from wreg
  2999  0F1C  0020               	movlb	0	; select bank0
  3000  0F1D  00A1               	movwf	ADC_OPTO_Relay@OnOff
  3001                           
  3002                           ;IO_Controls.c: 77: portC.portCByte = PORTC;
  3003  0F1E  080E               	movf	14,w	;volatile
  3004  0F1F  00A0               	movwf	??_ADC_OPTO_Relay
  3005  0F20  0820               	movf	??_ADC_OPTO_Relay,w
  3006  0F21  00F3               	movwf	_portC
  3007                           
  3008                           ;IO_Controls.c: 78: portC.bits.ADC_OPTORelay = OnOff;
  3009  0F22  0821               	movf	ADC_OPTO_Relay@OnOff,w
  3010  0F23  3901               	andlw	1
  3011  0F24  1273               	bcf	_portC,4
  3012  0F25  1D03               	skipz
  3013  0F26  1673               	bsf	_portC,4
  3014                           
  3015                           ;IO_Controls.c: 79: PORTC=portC.portCByte;
  3016  0F27  0873               	movf	_portC,w
  3017  0F28  008E               	movwf	14	;volatile
  3018  0F29  0008               	return
  3019  0F2A                     __end_of_ADC_OPTO_Relay:	
  3020                           ;IO_Controls.c: 80: return;
  3021                           
  3022                           
  3023                           	psect	text9
  3024  04B3                     __ptext9:	
  3025 ;; *************** function _atoi *****************
  3026 ;; Defined at:
  3027 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  s               1    wreg     PTR const unsigned char 
  3030 ;;		 -> rxArray(20), 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  3033 ;;		 -> rxArray(20), 
  3034 ;;  a               2   11[BANK0 ] int 
  3035 ;;  sign            1   10[BANK0 ] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  2    6[BANK0 ] int 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3045 ;;      Params:         0       2       0       0
  3046 ;;      Locals:         0       4       0       0
  3047 ;;      Temps:          0       2       0       0
  3048 ;;      Totals:         0       8       0       0
  3049 ;;Total ram usage:        8 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    3
  3052 ;; This function calls:
  3053 ;;		___wmul
  3054 ;;		_isdigit
  3055 ;; This function is called by:
  3056 ;;		_setupTestParameters
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _atoi
  3062  04B3                     _atoi:	
  3063                           
  3064                           ;incstack = 0
  3065                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3066                           ;atoi@s stored from wreg
  3067  04B3  0020               	movlb	0	; select bank0
  3068  04B4  00AD               	movwf	atoi@s
  3069  04B5                     l2814:	
  3070  04B5  082D               	movf	atoi@s,w
  3071  04B6  0086               	movwf	6
  3072  04B7  0187               	clrf	7
  3073  04B8  3020               	movlw	32
  3074  04B9  0601               	xorwf	1,w
  3075  04BA  1D03               	btfss	3,2
  3076  04BB  2CC1               	goto	l2816
  3077  04BC                     l2812:	
  3078  04BC  3001               	movlw	1
  3079  04BD  00A8               	movwf	??_atoi
  3080  04BE  0828               	movf	??_atoi,w
  3081  04BF  07AD               	addwf	atoi@s,f
  3082  04C0  2CB5               	goto	l2814
  3083  04C1                     l2816:	
  3084  04C1  082D               	movf	atoi@s,w
  3085  04C2  0086               	movwf	6
  3086  04C3  0187               	clrf	7
  3087  04C4  3009               	movlw	9
  3088  04C5  0601               	xorwf	1,w
  3089  04C6  1903               	btfsc	3,2
  3090  04C7  2CBC               	goto	l2812
  3091  04C8  01AB               	clrf	atoi@a
  3092  04C9  01AC               	clrf	atoi@a+1
  3093  04CA  01AA               	clrf	atoi@sign
  3094  04CB  082D               	movf	atoi@s,w
  3095  04CC  0086               	movwf	6
  3096  04CD  0187               	clrf	7
  3097  04CE  302D               	movlw	45
  3098  04CF  0601               	xorwf	1,w
  3099  04D0  1D03               	btfss	3,2
  3100  04D1  2CD7               	goto	l2824
  3101  04D2  3001               	movlw	1
  3102  04D3  00A8               	movwf	??_atoi
  3103  04D4  0828               	movf	??_atoi,w
  3104  04D5  07AA               	addwf	atoi@sign,f
  3105  04D6  2CDE               	goto	l2830
  3106  04D7                     l2824:	
  3107  04D7  082D               	movf	atoi@s,w
  3108  04D8  0086               	movwf	6
  3109  04D9  0187               	clrf	7
  3110  04DA  302B               	movlw	43
  3111  04DB  0601               	xorwf	1,w
  3112  04DC  1D03               	btfss	3,2
  3113  04DD  2CE2               	goto	l2832
  3114  04DE                     l2830:	
  3115  04DE  3001               	movlw	1
  3116  04DF  00A8               	movwf	??_atoi
  3117  04E0  0828               	movf	??_atoi,w
  3118  04E1  07AD               	addwf	atoi@s,f
  3119  04E2                     l2832:	
  3120  04E2  082D               	movf	atoi@s,w
  3121  04E3  0086               	movwf	6
  3122  04E4  0187               	clrf	7
  3123  04E5  0801               	movf	1,w
  3124  04E6  318F  2746  3184   	fcall	_isdigit
  3125  04E9  1C03               	btfss	3,0
  3126  04EA  2D09               	goto	l2834
  3127  04EB  0020               	movlb	0	; select bank0
  3128  04EC  082C               	movf	atoi@a+1,w
  3129  04ED  00A1               	movwf	___wmul@multiplier+1
  3130  04EE  082B               	movf	atoi@a,w
  3131  04EF  00A0               	movwf	___wmul@multiplier
  3132  04F0  300A               	movlw	10
  3133  04F1  00A2               	movwf	___wmul@multiplicand
  3134  04F2  3000               	movlw	0
  3135  04F3  00A3               	movwf	___wmul@multiplicand+1
  3136  04F4  3187  27DB  3184   	fcall	___wmul
  3137  04F7  0020               	movlb	0	; select bank0
  3138  04F8  082D               	movf	atoi@s,w
  3139  04F9  0086               	movwf	6
  3140  04FA  0187               	clrf	7
  3141  04FB  0801               	movf	1,w
  3142  04FC  0720               	addwf	?___wmul,w
  3143  04FD  00A8               	movwf	??_atoi
  3144  04FE  0821               	movf	?___wmul+1,w
  3145  04FF  1803               	skipnc
  3146  0500  0A21               	incf	?___wmul+1,w
  3147  0501  00A9               	movwf	??_atoi+1
  3148  0502  0828               	movf	??_atoi,w
  3149  0503  3ED0               	addlw	208
  3150  0504  00AB               	movwf	atoi@a
  3151  0505  30FF               	movlw	255
  3152  0506  3D29               	addwfc	??_atoi+1,w
  3153  0507  00AC               	movwf	atoi@a+1
  3154  0508  2CDE               	goto	l2830
  3155  0509                     l2834:	
  3156  0509  0020               	movlb	0	; select bank0
  3157  050A  082A               	movf	atoi@sign,w
  3158  050B  1903               	btfsc	3,2
  3159  050C  2D19               	goto	l2840
  3160  050D  092B               	comf	atoi@a,w
  3161  050E  00A8               	movwf	??_atoi
  3162  050F  092C               	comf	atoi@a+1,w
  3163  0510  00A9               	movwf	??_atoi+1
  3164  0511  0AA8               	incf	??_atoi,f
  3165  0512  1903               	skipnz
  3166  0513  0AA9               	incf	??_atoi+1,f
  3167  0514  0828               	movf	??_atoi,w
  3168  0515  00A6               	movwf	?_atoi
  3169  0516  0829               	movf	??_atoi+1,w
  3170  0517  00A7               	movwf	?_atoi+1
  3171  0518  0008               	return
  3172  0519                     l2840:	
  3173  0519  082C               	movf	atoi@a+1,w
  3174  051A  00A7               	movwf	?_atoi+1
  3175  051B  082B               	movf	atoi@a,w
  3176  051C  00A6               	movwf	?_atoi
  3177  051D  0008               	return
  3178  051E                     __end_of_atoi:	
  3179                           
  3180                           	psect	text10
  3181  0F46                     __ptext10:	
  3182 ;; *************** function _isdigit *****************
  3183 ;; Defined at:
  3184 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  c               1    wreg     unsigned char 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  c               1    1[BANK0 ] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3198 ;;      Params:         0       0       0       0
  3199 ;;      Locals:         0       2       0       0
  3200 ;;      Temps:          0       0       0       0
  3201 ;;      Totals:         0       2       0       0
  3202 ;;Total ram usage:        2 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    2
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_atoi
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           
  3213                           ;psect for function _isdigit
  3214  0F46                     _isdigit:	
  3215                           
  3216                           ;incstack = 0
  3217                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3218                           ;isdigit@c stored from wreg
  3219  0F46  0020               	movlb	0	; select bank0
  3220  0F47  00A1               	movwf	isdigit@c
  3221  0F48  01A0               	clrf	_isdigit$1122
  3222  0F49  303A               	movlw	58
  3223  0F4A  0221               	subwf	isdigit@c,w
  3224  0F4B  1803               	skipnc
  3225  0F4C  2F53               	goto	l2776
  3226  0F4D  3030               	movlw	48
  3227  0F4E  0221               	subwf	isdigit@c,w
  3228  0F4F  1C03               	skipc
  3229  0F50  2F53               	goto	l2776
  3230  0F51  01A0               	clrf	_isdigit$1122
  3231  0F52  0AA0               	incf	_isdigit$1122,f
  3232  0F53                     l2776:	
  3233  0F53  0C20               	rrf	_isdigit$1122,w
  3234  0F54  0008               	return
  3235  0F55                     __end_of_isdigit:	
  3236                           
  3237                           	psect	text11
  3238  07DB                     __ptext11:	
  3239 ;; *************** function ___wmul *****************
  3240 ;; Defined at:
  3241 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3244 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  product         2    4[BANK0 ] unsigned int 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  2    0[BANK0 ] unsigned int 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3256 ;;      Params:         0       4       0       0
  3257 ;;      Locals:         0       2       0       0
  3258 ;;      Temps:          0       0       0       0
  3259 ;;      Totals:         0       6       0       0
  3260 ;;Total ram usage:        6 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    2
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_atoi
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function ___wmul
  3272  07DB                     ___wmul:	
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3276  07DB  0020               	movlb	0	; select bank0
  3277  07DC  01A4               	clrf	___wmul@product
  3278  07DD  01A5               	clrf	___wmul@product+1
  3279  07DE                     l2756:	
  3280  07DE  1C20               	btfss	___wmul@multiplier,0
  3281  07DF  2FE4               	goto	l544
  3282  07E0  0822               	movf	___wmul@multiplicand,w
  3283  07E1  07A4               	addwf	___wmul@product,f
  3284  07E2  0823               	movf	___wmul@multiplicand+1,w
  3285  07E3  3DA5               	addwfc	___wmul@product+1,f
  3286  07E4                     l544:	
  3287  07E4  3001               	movlw	1
  3288  07E5                     u2595:	
  3289  07E5  35A2               	lslf	___wmul@multiplicand,f
  3290  07E6  0DA3               	rlf	___wmul@multiplicand+1,f
  3291  07E7  0B89               	decfsz	9,f
  3292  07E8  2FE5               	goto	u2595
  3293  07E9  3001               	movlw	1
  3294  07EA                     u2605:	
  3295  07EA  36A1               	lsrf	___wmul@multiplier+1,f
  3296  07EB  0CA0               	rrf	___wmul@multiplier,f
  3297  07EC  0B89               	decfsz	9,f
  3298  07ED  2FEA               	goto	u2605
  3299  07EE  0820               	movf	___wmul@multiplier,w
  3300  07EF  0421               	iorwf	___wmul@multiplier+1,w
  3301  07F0  1D03               	btfss	3,2
  3302  07F1  2FDE               	goto	l2756
  3303  07F2  0825               	movf	___wmul@product+1,w
  3304  07F3  00A1               	movwf	?___wmul+1
  3305  07F4  0824               	movf	___wmul@product,w
  3306  07F5  00A0               	movwf	?___wmul
  3307  07F6  0008               	return
  3308  07F7                     __end_of___wmul:	
  3309                           
  3310                           	psect	text12
  3311  06BE                     __ptext12:	
  3312 ;; *************** function ___lmul *****************
  3313 ;; Defined at:
  3314 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3317 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  product         4    8[BANK0 ] unsigned long 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  4    0[BANK0 ] unsigned long 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3329 ;;      Params:         0       8       0       0
  3330 ;;      Locals:         0       4       0       0
  3331 ;;      Temps:          0       0       0       0
  3332 ;;      Totals:         0      12       0       0
  3333 ;;Total ram usage:       12 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    2
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_setupTestParameters
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function ___lmul
  3345  06BE                     ___lmul:	
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3349  06BE  3000               	movlw	0
  3350  06BF  0020               	movlb	0	; select bank0
  3351  06C0  00AB               	movwf	___lmul@product+3
  3352  06C1  3000               	movlw	0
  3353  06C2  00AA               	movwf	___lmul@product+2
  3354  06C3  3000               	movlw	0
  3355  06C4  00A9               	movwf	___lmul@product+1
  3356  06C5  3000               	movlw	0
  3357  06C6  00A8               	movwf	___lmul@product
  3358  06C7                     l2892:	
  3359  06C7  1C20               	btfss	___lmul@multiplier,0
  3360  06C8  2ED1               	goto	l2896
  3361  06C9  0824               	movf	___lmul@multiplicand,w
  3362  06CA  07A8               	addwf	___lmul@product,f
  3363  06CB  0825               	movf	___lmul@multiplicand+1,w
  3364  06CC  3DA9               	addwfc	___lmul@product+1,f
  3365  06CD  0826               	movf	___lmul@multiplicand+2,w
  3366  06CE  3DAA               	addwfc	___lmul@product+2,f
  3367  06CF  0827               	movf	___lmul@multiplicand+3,w
  3368  06D0  3DAB               	addwfc	___lmul@product+3,f
  3369  06D1                     l2896:	
  3370  06D1  3001               	movlw	1
  3371  06D2                     u2795:	
  3372  06D2  35A4               	lslf	___lmul@multiplicand,f
  3373  06D3  0DA5               	rlf	___lmul@multiplicand+1,f
  3374  06D4  0DA6               	rlf	___lmul@multiplicand+2,f
  3375  06D5  0DA7               	rlf	___lmul@multiplicand+3,f
  3376  06D6  0B89               	decfsz	9,f
  3377  06D7  2ED2               	goto	u2795
  3378  06D8  3001               	movlw	1
  3379  06D9                     u2805:	
  3380  06D9  36A3               	lsrf	___lmul@multiplier+3,f
  3381  06DA  0CA2               	rrf	___lmul@multiplier+2,f
  3382  06DB  0CA1               	rrf	___lmul@multiplier+1,f
  3383  06DC  0CA0               	rrf	___lmul@multiplier,f
  3384  06DD  0B89               	decfsz	9,f
  3385  06DE  2ED9               	goto	u2805
  3386  06DF  0823               	movf	___lmul@multiplier+3,w
  3387  06E0  0422               	iorwf	___lmul@multiplier+2,w
  3388  06E1  0421               	iorwf	___lmul@multiplier+1,w
  3389  06E2  0420               	iorwf	___lmul@multiplier,w
  3390  06E3  1D03               	skipz
  3391  06E4  2EC7               	goto	l2892
  3392  06E5  082B               	movf	___lmul@product+3,w
  3393  06E6  00A3               	movwf	?___lmul+3
  3394  06E7  082A               	movf	___lmul@product+2,w
  3395  06E8  00A2               	movwf	?___lmul+2
  3396  06E9  0829               	movf	___lmul@product+1,w
  3397  06EA  00A1               	movwf	?___lmul+1
  3398  06EB  0828               	movf	___lmul@product,w
  3399  06EC  00A0               	movwf	?___lmul
  3400  06ED  0008               	return
  3401  06EE                     __end_of___lmul:	
  3402                           
  3403                           	psect	text13
  3404  0583                     __ptext13:	
  3405 ;; *************** function ___lldiv *****************
  3406 ;; Defined at:
  3407 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  divisor         4   12[BANK0 ] unsigned long 
  3410 ;;  dividend        4   16[BANK0 ] unsigned long 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  quotient        4   21[BANK0 ] unsigned long 
  3413 ;;  counter         1   25[BANK0 ] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  4   12[BANK0 ] unsigned long 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3423 ;;      Params:         0       8       0       0
  3424 ;;      Locals:         0       5       0       0
  3425 ;;      Temps:          0       1       0       0
  3426 ;;      Totals:         0      14       0       0
  3427 ;;Total ram usage:       14 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    2
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_verifyACSignal
  3434 ;;		_setupTestParameters
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function ___lldiv
  3440  0583                     ___lldiv:	
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3444  0583  3000               	movlw	0
  3445  0584  0020               	movlb	0	; select bank0
  3446  0585  00B8               	movwf	___lldiv@quotient+3
  3447  0586  3000               	movlw	0
  3448  0587  00B7               	movwf	___lldiv@quotient+2
  3449  0588  3000               	movlw	0
  3450  0589  00B6               	movwf	___lldiv@quotient+1
  3451  058A  3000               	movlw	0
  3452  058B  00B5               	movwf	___lldiv@quotient
  3453  058C  082F               	movf	___lldiv@divisor+3,w
  3454  058D  042E               	iorwf	___lldiv@divisor+2,w
  3455  058E  042D               	iorwf	___lldiv@divisor+1,w
  3456  058F  042C               	iorwf	___lldiv@divisor,w
  3457  0590  1903               	skipnz
  3458  0591  2DCD               	goto	l2984
  3459  0592  01B9               	clrf	___lldiv@counter
  3460  0593  0AB9               	incf	___lldiv@counter,f
  3461  0594                     l2970:	
  3462  0594  1BAF               	btfsc	___lldiv@divisor+3,7
  3463  0595  2DA2               	goto	l2972
  3464  0596  3001               	movlw	1
  3465  0597                     u2995:	
  3466  0597  35AC               	lslf	___lldiv@divisor,f
  3467  0598  0DAD               	rlf	___lldiv@divisor+1,f
  3468  0599  0DAE               	rlf	___lldiv@divisor+2,f
  3469  059A  0DAF               	rlf	___lldiv@divisor+3,f
  3470  059B  0B89               	decfsz	9,f
  3471  059C  2D97               	goto	u2995
  3472  059D  3001               	movlw	1
  3473  059E  00B4               	movwf	??___lldiv
  3474  059F  0834               	movf	??___lldiv,w
  3475  05A0  07B9               	addwf	___lldiv@counter,f
  3476  05A1  2D94               	goto	l2970
  3477  05A2                     l2972:	
  3478  05A2  3001               	movlw	1
  3479  05A3                     u3015:	
  3480  05A3  35B5               	lslf	___lldiv@quotient,f
  3481  05A4  0DB6               	rlf	___lldiv@quotient+1,f
  3482  05A5  0DB7               	rlf	___lldiv@quotient+2,f
  3483  05A6  0DB8               	rlf	___lldiv@quotient+3,f
  3484  05A7  0B89               	decfsz	9,f
  3485  05A8  2DA3               	goto	u3015
  3486  05A9  082F               	movf	___lldiv@divisor+3,w
  3487  05AA  0233               	subwf	___lldiv@dividend+3,w
  3488  05AB  1D03               	skipz
  3489  05AC  2DB7               	goto	u3025
  3490  05AD  082E               	movf	___lldiv@divisor+2,w
  3491  05AE  0232               	subwf	___lldiv@dividend+2,w
  3492  05AF  1D03               	skipz
  3493  05B0  2DB7               	goto	u3025
  3494  05B1  082D               	movf	___lldiv@divisor+1,w
  3495  05B2  0231               	subwf	___lldiv@dividend+1,w
  3496  05B3  1D03               	skipz
  3497  05B4  2DB7               	goto	u3025
  3498  05B5  082C               	movf	___lldiv@divisor,w
  3499  05B6  0230               	subwf	___lldiv@dividend,w
  3500  05B7                     u3025:	
  3501  05B7  1C03               	skipc
  3502  05B8  2DC2               	goto	l2980
  3503  05B9  082C               	movf	___lldiv@divisor,w
  3504  05BA  02B0               	subwf	___lldiv@dividend,f
  3505  05BB  082D               	movf	___lldiv@divisor+1,w
  3506  05BC  3BB1               	subwfb	___lldiv@dividend+1,f
  3507  05BD  082E               	movf	___lldiv@divisor+2,w
  3508  05BE  3BB2               	subwfb	___lldiv@dividend+2,f
  3509  05BF  082F               	movf	___lldiv@divisor+3,w
  3510  05C0  3BB3               	subwfb	___lldiv@dividend+3,f
  3511  05C1  1435               	bsf	___lldiv@quotient,0
  3512  05C2                     l2980:	
  3513  05C2  3001               	movlw	1
  3514  05C3                     u3035:	
  3515  05C3  36AF               	lsrf	___lldiv@divisor+3,f
  3516  05C4  0CAE               	rrf	___lldiv@divisor+2,f
  3517  05C5  0CAD               	rrf	___lldiv@divisor+1,f
  3518  05C6  0CAC               	rrf	___lldiv@divisor,f
  3519  05C7  0B89               	decfsz	9,f
  3520  05C8  2DC3               	goto	u3035
  3521  05C9  3001               	movlw	1
  3522  05CA  02B9               	subwf	___lldiv@counter,f
  3523  05CB  1D03               	btfss	3,2
  3524  05CC  2DA2               	goto	l2972
  3525  05CD                     l2984:	
  3526  05CD  0838               	movf	___lldiv@quotient+3,w
  3527  05CE  00AF               	movwf	?___lldiv+3
  3528  05CF  0837               	movf	___lldiv@quotient+2,w
  3529  05D0  00AE               	movwf	?___lldiv+2
  3530  05D1  0836               	movf	___lldiv@quotient+1,w
  3531  05D2  00AD               	movwf	?___lldiv+1
  3532  05D3  0835               	movf	___lldiv@quotient,w
  3533  05D4  00AC               	movwf	?___lldiv
  3534  05D5  0008               	return
  3535  05D6                     __end_of___lldiv:	
  3536                           
  3537                           	psect	text14
  3538  0795                     __ptext14:	
  3539 ;; *************** function _UART_TX_String *****************
  3540 ;; Defined at:
  3541 ;;		line 63 in file "USART.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  string          1    wreg     PTR unsigned char 
  3544 ;;		 -> rxArray(20), 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  string          1    7[BANK0 ] PTR unsigned char 
  3547 ;;		 -> rxArray(20), 
  3548 ;;  i               2    5[BANK0 ] int 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3558 ;;      Params:         0       0       0       0
  3559 ;;      Locals:         0       3       0       0
  3560 ;;      Temps:          0       3       0       0
  3561 ;;      Totals:         0       6       0       0
  3562 ;;Total ram usage:        6 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    3
  3565 ;; This function calls:
  3566 ;;		_UART_TX
  3567 ;; This function is called by:
  3568 ;;		_setupTestParameters
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _UART_TX_String
  3574  0795                     _UART_TX_String:	
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _UART_TX_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3578                           ;UART_TX_String@string stored from wreg
  3579  0795  0020               	movlb	0	; select bank0
  3580  0796  00A7               	movwf	UART_TX_String@string
  3581                           
  3582                           ;USART.c: 65: int i;
  3583                           ;USART.c: 66: for(i=0;string[i]!='\0';i++)
  3584  0797  01A5               	clrf	UART_TX_String@i
  3585  0798  01A6               	clrf	UART_TX_String@i+1
  3586  0799                     l2808:	
  3587  0799  0825               	movf	UART_TX_String@i,w
  3588  079A  0727               	addwf	UART_TX_String@string,w
  3589  079B  00A2               	movwf	??_UART_TX_String
  3590  079C  0822               	movf	??_UART_TX_String,w
  3591  079D  0086               	movwf	6
  3592  079E  0187               	clrf	7
  3593  079F  0801               	movf	1,w
  3594  07A0  1903               	btfsc	3,2
  3595  07A1  0008               	return
  3596                           
  3597                           ;USART.c: 67: UART_TX(string[i]);
  3598  07A2  0825               	movf	UART_TX_String@i,w
  3599  07A3  0727               	addwf	UART_TX_String@string,w
  3600  07A4  00A2               	movwf	??_UART_TX_String
  3601  07A5  0822               	movf	??_UART_TX_String,w
  3602  07A6  0086               	movwf	6
  3603  07A7  0187               	clrf	7
  3604  07A8  0801               	movf	1,w
  3605  07A9  00A3               	movwf	??_UART_TX_String+1
  3606  07AA  01A4               	clrf	??_UART_TX_String+2
  3607  07AB  0823               	movf	??_UART_TX_String+1,w
  3608  07AC  00A0               	movwf	UART_TX@data
  3609  07AD  0824               	movf	??_UART_TX_String+2,w
  3610  07AE  00A1               	movwf	UART_TX@data+1
  3611  07AF  318E  26A8  3187   	fcall	_UART_TX
  3612  07B2  3001               	movlw	1
  3613  07B3  0020               	movlb	0	; select bank0
  3614  07B4  07A5               	addwf	UART_TX_String@i,f
  3615  07B5  3000               	movlw	0
  3616  07B6  3DA6               	addwfc	UART_TX_String@i+1,f
  3617  07B7  2F99               	goto	l2808
  3618  07B8                     __end_of_UART_TX_String:	
  3619                           
  3620                           	psect	text15
  3621  0F0E                     __ptext15:	
  3622 ;; *************** function _PassLED *****************
  3623 ;; Defined at:
  3624 ;;		line 141 in file "IO_Controls.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  OnOff           1    wreg     unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  OnOff           1    1[BANK0 ] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3638 ;;      Params:         0       0       0       0
  3639 ;;      Locals:         0       1       0       0
  3640 ;;      Temps:          0       1       0       0
  3641 ;;      Totals:         0       2       0       0
  3642 ;;Total ram usage:        2 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    2
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_setupTestParameters
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _PassLED
  3654  0F0E                     _PassLED:	
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in _PassLED: [wreg+status,2]
  3658                           ;PassLED@OnOff stored from wreg
  3659  0F0E  0020               	movlb	0	; select bank0
  3660  0F0F  00A1               	movwf	PassLED@OnOff
  3661                           
  3662                           ;IO_Controls.c: 143: portA.portAByte = PORTA;
  3663  0F10  080C               	movf	12,w	;volatile
  3664  0F11  00A0               	movwf	??_PassLED
  3665  0F12  0820               	movf	??_PassLED,w
  3666  0F13  00F4               	movwf	_portA
  3667                           
  3668                           ;IO_Controls.c: 144: portA.bits.PassLED = OnOff;
  3669  0F14  0821               	movf	PassLED@OnOff,w
  3670  0F15  3901               	andlw	1
  3671  0F16  12F4               	bcf	_portA,5
  3672  0F17  1D03               	skipz
  3673  0F18  16F4               	bsf	_portA,5
  3674                           
  3675                           ;IO_Controls.c: 145: PORTA=portA.portAByte;
  3676  0F19  0874               	movf	_portA,w
  3677  0F1A  008C               	movwf	12	;volatile
  3678  0F1B  0008               	return
  3679  0F1C                     __end_of_PassLED:	
  3680                           ;IO_Controls.c: 146: return;
  3681                           
  3682                           
  3683                           	psect	text16
  3684  02EA                     __ptext16:	
  3685 ;; *************** function _printf *****************
  3686 ;; Defined at:
  3687 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3690 ;;		 -> STR_1(4), 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  tmpval          4    0        struct .
  3693 ;;  val             2   27[BANK0 ] unsigned int 
  3694 ;;  cp              2    0        PTR const unsigned char 
  3695 ;;  len             2    0        unsigned int 
  3696 ;;  c               1   29[BANK0 ] char 
  3697 ;;  prec            1   26[BANK0 ] char 
  3698 ;;  flag            1   25[BANK0 ] unsigned char 
  3699 ;;  ap              1   24[BANK0 ] PTR void [1]
  3700 ;;		 -> ?_printf(2), 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  2   14[BANK0 ] int 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3710 ;;      Params:         0       6       0       0
  3711 ;;      Locals:         0       6       0       0
  3712 ;;      Temps:          0       4       0       0
  3713 ;;      Totals:         0      16       0       0
  3714 ;;Total ram usage:       16 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    3
  3717 ;; This function calls:
  3718 ;;		___lwdiv
  3719 ;;		___lwmod
  3720 ;;		_putch
  3721 ;; This function is called by:
  3722 ;;		_verifyACSignal
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           
  3727                           ;psect for function _printf
  3728  02EA                     _printf:	
  3729                           
  3730                           ;doprnt.c: 466: va_list ap;
  3731                           ;doprnt.c: 499: signed char c;
  3732                           ;doprnt.c: 506: signed char prec;
  3733                           ;doprnt.c: 508: unsigned char flag;
  3734                           ;doprnt.c: 523: union {
  3735                           ;doprnt.c: 524: unsigned long vd;
  3736                           ;doprnt.c: 525: double integ;
  3737                           ;doprnt.c: 526: } tmpval;
  3738                           ;doprnt.c: 528: unsigned int val;
  3739                           ;doprnt.c: 529: unsigned len;
  3740                           ;doprnt.c: 530: const char * cp;
  3741                           ;doprnt.c: 533: *ap = __va_start();
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3745  02EA  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3746  02EB  0020               	movlb	0	; select bank0
  3747  02EC  00B4               	movwf	??_printf
  3748  02ED  0834               	movf	??_printf,w
  3749  02EE  00B8               	movwf	printf@ap
  3750  02EF                     l3214:	
  3751                           ;doprnt.c: 536: while(c = *f++) {
  3752                           
  3753  02EF  0020               	movlb	0	; select bank0
  3754  02F0  082F               	movf	printf@f+1,w
  3755  02F1  00B5               	movwf	??_printf+1
  3756  02F2  082E               	movf	printf@f,w
  3757  02F3  00B4               	movwf	??_printf
  3758  02F4  0AAE               	incf	printf@f,f
  3759  02F5  1903               	skipnz
  3760  02F6  0AAF               	incf	printf@f+1,f
  3761  02F7  0834               	movf	??_printf,w
  3762  02F8  0084               	movwf	4
  3763  02F9  0835               	movf	??_printf+1,w
  3764  02FA  0085               	movwf	5
  3765  02FB  0800               	movf	0,w	;code access
  3766  02FC  00B6               	movwf	??_printf+2
  3767  02FD  0836               	movf	??_printf+2,w
  3768  02FE  00BD               	movwf	printf@c
  3769  02FF  083D               	movf	printf@c,w
  3770  0300  1903               	btfsc	3,2
  3771  0301  0008               	return
  3772                           
  3773                           ;doprnt.c: 538: if(c != '%')
  3774  0302  3025               	movlw	37
  3775  0303  063D               	xorwf	printf@c,w
  3776  0304  1903               	btfsc	3,2
  3777  0305  2B0B               	goto	l3174
  3778                           
  3779                           ;doprnt.c: 540: {
  3780                           ;doprnt.c: 541: (putch(c) );
  3781  0306  083D               	movf	printf@c,w
  3782  0307  318E  26B2  3182   	fcall	_putch
  3783                           
  3784                           ;doprnt.c: 542: continue;
  3785  030A  2AEF               	goto	l3214
  3786  030B                     l3174:	
  3787                           
  3788                           ;doprnt.c: 543: }
  3789                           ;doprnt.c: 548: flag = 0;
  3790  030B  0020               	movlb	0	; select bank0
  3791  030C  01B9               	clrf	printf@flag
  3792                           
  3793                           ;doprnt.c: 822: }
  3794                           
  3795                           ;doprnt.c: 813: continue;
  3796                           
  3797                           ;doprnt.c: 802: default:
  3798                           
  3799                           ;doprnt.c: 698: case 'i':
  3800                           ;doprnt.c: 699: break;
  3801                           
  3802                           ;doprnt.c: 697: case 'd':
  3803                           
  3804                           ;doprnt.c: 638: goto alldone;
  3805                           
  3806                           ;doprnt.c: 637: case 0:
  3807                           
  3808                           ;doprnt.c: 635: switch(c = *f++) {
  3809  030D  082F               	movf	printf@f+1,w
  3810  030E  00B5               	movwf	??_printf+1
  3811  030F  082E               	movf	printf@f,w
  3812  0310  00B4               	movwf	??_printf
  3813  0311  0AAE               	incf	printf@f,f
  3814  0312  1903               	skipnz
  3815  0313  0AAF               	incf	printf@f+1,f
  3816  0314  0834               	movf	??_printf,w
  3817  0315  0084               	movwf	4
  3818  0316  0835               	movf	??_printf+1,w
  3819  0317  0085               	movwf	5
  3820  0318  0800               	movf	0,w	;code access
  3821  0319  00BD               	movwf	printf@c
  3822                           
  3823                           ; Switch size 1, requested type "space"
  3824                           ; Number of cases is 3, Range of values is 0 to 105
  3825                           ; switch strategies available:
  3826                           ; Name         Instructions Cycles
  3827                           ; simple_byte           10     6 (average)
  3828                           ; direct_byte          218     6 (fixed)
  3829                           ; jumptable            260     6 (fixed)
  3830                           ;	Chosen strategy is simple_byte
  3831  031A  3A00               	xorlw	0	; case 0
  3832  031B  1903               	skipnz
  3833  031C  2BA1               	goto	l460
  3834  031D  3A64               	xorlw	100	; case 100
  3835  031E  1903               	skipnz
  3836  031F  2B24               	goto	l3180
  3837  0320  3A0D               	xorlw	13	; case 105
  3838  0321  1903               	skipnz
  3839  0322  2B24               	goto	l3180
  3840  0323  2AEF               	goto	l3214
  3841  0324                     l3180:	
  3842                           
  3843                           ;doprnt.c: 1253: {
  3844                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3845  0324  0838               	movf	printf@ap,w
  3846  0325  0086               	movwf	6
  3847  0326  0187               	clrf	7
  3848  0327  3F40               	moviw [0]fsr1
  3849  0328  00BB               	movwf	printf@val
  3850  0329  3F41               	moviw [1]fsr1
  3851  032A  00BC               	movwf	printf@val+1
  3852  032B  3002               	movlw	2
  3853  032C  00B4               	movwf	??_printf
  3854  032D  0834               	movf	??_printf,w
  3855  032E  07B8               	addwf	printf@ap,f
  3856                           
  3857                           ;doprnt.c: 1261: if((int)val < 0) {
  3858  032F  1FBC               	btfss	printf@val+1,7
  3859  0330  2B3A               	goto	l3190
  3860                           
  3861                           ;doprnt.c: 1262: flag |= 0x03;
  3862  0331  3003               	movlw	3
  3863  0332  00B4               	movwf	??_printf
  3864  0333  0834               	movf	??_printf,w
  3865  0334  04B9               	iorwf	printf@flag,f
  3866                           
  3867                           ;doprnt.c: 1263: val = -val;
  3868  0335  09BB               	comf	printf@val,f
  3869  0336  09BC               	comf	printf@val+1,f
  3870  0337  0ABB               	incf	printf@val,f
  3871  0338  1903               	skipnz
  3872  0339  0ABC               	incf	printf@val+1,f
  3873  033A                     l3190:	
  3874                           
  3875                           ;doprnt.c: 1264: }
  3876                           ;doprnt.c: 1266: }
  3877                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3878  033A  01BD               	clrf	printf@c
  3879  033B  0ABD               	incf	printf@c,f
  3880  033C  3005               	movlw	5
  3881  033D  063D               	xorwf	printf@c,w
  3882  033E  1903               	btfsc	3,2
  3883  033F  2B5F               	goto	l3202
  3884  0340                     l3196:	
  3885                           
  3886                           ;doprnt.c: 1306: if(val < dpowers[c])
  3887  0340  083D               	movf	printf@c,w
  3888  0341  00B4               	movwf	??_printf
  3889  0342  01B5               	clrf	??_printf+1
  3890  0343  35B4               	lslf	??_printf,f
  3891  0344  0DB5               	rlf	??_printf+1,f
  3892  0345  30F7               	movlw	low (_dpowers| (0+32768))
  3893  0346  0734               	addwf	??_printf,w
  3894  0347  0084               	movwf	4
  3895  0348  3087               	movlw	high (_dpowers| (0+32768))
  3896  0349  3D35               	addwfc	??_printf+1,w
  3897  034A  0085               	movwf	5
  3898  034B  3F00               	moviw [0]fsr0
  3899  034C  00B6               	movwf	??_printf+2
  3900  034D  3F01               	moviw [1]fsr0
  3901  034E  00B7               	movwf	??_printf+3
  3902  034F  0837               	movf	??_printf+3,w
  3903  0350  023C               	subwf	printf@val+1,w
  3904  0351  1D03               	skipz
  3905  0352  2B55               	goto	u3265
  3906  0353  0836               	movf	??_printf+2,w
  3907  0354  023B               	subwf	printf@val,w
  3908  0355                     u3265:	
  3909  0355  1C03               	btfss	3,0
  3910  0356  2B5F               	goto	l3202
  3911                           
  3912                           ;doprnt.c: 1307: break;
  3913  0357  3001               	movlw	1
  3914  0358  00B4               	movwf	??_printf
  3915  0359  0834               	movf	??_printf,w
  3916  035A  07BD               	addwf	printf@c,f
  3917  035B  3005               	movlw	5
  3918  035C  063D               	xorwf	printf@c,w
  3919  035D  1D03               	btfss	3,2
  3920  035E  2B40               	goto	l3196
  3921  035F                     l3202:	
  3922                           
  3923                           ;doprnt.c: 1422: {
  3924                           ;doprnt.c: 1438: if(flag & 0x03)
  3925  035F  0839               	movf	printf@flag,w
  3926  0360  3903               	andlw	3
  3927  0361  1903               	btfsc	3,2
  3928  0362  2B67               	goto	l3206
  3929                           
  3930                           ;doprnt.c: 1439: (putch('-') );
  3931  0363  302D               	movlw	45
  3932  0364  318E  26B2  3182   	fcall	_putch
  3933  0367                     l3206:	
  3934                           
  3935                           ;doprnt.c: 1469: }
  3936                           ;doprnt.c: 1472: prec = c;
  3937  0367  0020               	movlb	0	; select bank0
  3938  0368  083D               	movf	printf@c,w
  3939  0369  00B4               	movwf	??_printf
  3940  036A  0834               	movf	??_printf,w
  3941  036B  00BA               	movwf	printf@prec
  3942  036C                     l3212:	
  3943                           ;doprnt.c: 1474: while(prec--) {
  3944                           
  3945  036C  30FF               	movlw	255
  3946  036D  0020               	movlb	0	; select bank0
  3947  036E  00B4               	movwf	??_printf
  3948  036F  0834               	movf	??_printf,w
  3949  0370  07BA               	addwf	printf@prec,f
  3950  0371  0A3A               	incf	printf@prec,w
  3951  0372  1903               	btfsc	3,2
  3952  0373  2AEF               	goto	l3214
  3953                           
  3954                           ;doprnt.c: 1478: {
  3955                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3956  0374  300A               	movlw	10
  3957  0375  00A8               	movwf	___lwmod@divisor
  3958  0376  3000               	movlw	0
  3959  0377  00A9               	movwf	___lwmod@divisor+1
  3960  0378  083A               	movf	printf@prec,w
  3961  0379  00B4               	movwf	??_printf
  3962  037A  01B5               	clrf	??_printf+1
  3963  037B  35B4               	lslf	??_printf,f
  3964  037C  0DB5               	rlf	??_printf+1,f
  3965  037D  30F7               	movlw	low (_dpowers| (0+32768))
  3966  037E  0734               	addwf	??_printf,w
  3967  037F  0084               	movwf	4
  3968  0380  3087               	movlw	high (_dpowers| (0+32768))
  3969  0381  3D35               	addwfc	??_printf+1,w
  3970  0382  0085               	movwf	5
  3971  0383  3F00               	moviw [0]fsr0
  3972  0384  00A0               	movwf	___lwdiv@divisor
  3973  0385  3F01               	moviw [1]fsr0
  3974  0386  00A1               	movwf	___lwdiv@divisor+1
  3975  0387  083C               	movf	printf@val+1,w
  3976  0388  00A3               	movwf	___lwdiv@dividend+1
  3977  0389  083B               	movf	printf@val,w
  3978  038A  00A2               	movwf	___lwdiv@dividend
  3979  038B  3186  2689  3182   	fcall	___lwdiv
  3980  038E  0020               	movlb	0	; select bank0
  3981  038F  0821               	movf	?___lwdiv+1,w
  3982  0390  00AB               	movwf	___lwmod@dividend+1
  3983  0391  0820               	movf	?___lwdiv,w
  3984  0392  00AA               	movwf	___lwmod@dividend
  3985  0393  3186  26EE  3182   	fcall	___lwmod
  3986  0396  0020               	movlb	0	; select bank0
  3987  0397  0828               	movf	?___lwmod,w
  3988  0398  3E30               	addlw	48
  3989  0399  00B6               	movwf	??_printf+2
  3990  039A  0836               	movf	??_printf+2,w
  3991  039B  00BD               	movwf	printf@c
  3992                           
  3993                           ;doprnt.c: 1523: }
  3994                           ;doprnt.c: 1524: (putch(c) );
  3995  039C  083D               	movf	printf@c,w
  3996  039D  318E  26B2  3182   	fcall	_putch
  3997  03A0  2B6C               	goto	l3212
  3998  03A1                     l460:	
  3999                           ;doprnt.c: 1540: return 0;
  4000                           ;	Return value of _printf is never used
  4001                           
  4002                           ;doprnt.c: 1525: }
  4003                           ;doprnt.c: 1533: }
  4004                           ;doprnt.c: 1535: alldone:
  4005                           
  4006  03A1  0008               	return
  4007  03A2                     __end_of_printf:	
  4008                           
  4009                           	psect	text17
  4010  0EB2                     __ptext17:	
  4011 ;; *************** function _putch *****************
  4012 ;; Defined at:
  4013 ;;		line 98 in file "USART.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  c               1    wreg     unsigned char 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  c               1    0[BANK0 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4027 ;;      Params:         0       0       0       0
  4028 ;;      Locals:         0       1       0       0
  4029 ;;      Temps:          0       0       0       0
  4030 ;;      Totals:         0       1       0       0
  4031 ;;Total ram usage:        1 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    2
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_printf
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function _putch
  4043  0EB2                     _putch:	
  4044                           
  4045                           ;incstack = 0
  4046                           ; Regs used in _putch: [wreg]
  4047                           ;putch@c stored from wreg
  4048  0EB2  0020               	movlb	0	; select bank0
  4049  0EB3  00A0               	movwf	putch@c
  4050  0EB4                     l316:	
  4051                           ;USART.c: 102: continue;
  4052                           
  4053                           ;USART.c: 100: while(!TRMT)
  4054                           
  4055  0EB4  0023               	movlb	3	; select bank3
  4056  0EB5  1C9E               	btfss	30,1	;volatile
  4057  0EB6  2EB4               	goto	l316
  4058                           
  4059                           ;USART.c: 103: TXREG = c;
  4060  0EB7  0020               	movlb	0	; select bank0
  4061  0EB8  0820               	movf	putch@c,w
  4062  0EB9  0023               	movlb	3	; select bank3
  4063  0EBA  009A               	movwf	26	;volatile
  4064  0EBB  0008               	return
  4065  0EBC                     __end_of_putch:	
  4066                           
  4067                           	psect	text18
  4068  06EE                     __ptext18:	
  4069 ;; *************** function ___lwmod *****************
  4070 ;; Defined at:
  4071 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  divisor         2    8[BANK0 ] unsigned int 
  4074 ;;  dividend        2   10[BANK0 ] unsigned int 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  counter         1   13[BANK0 ] unsigned char 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  2    8[BANK0 ] unsigned int 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4086 ;;      Params:         0       4       0       0
  4087 ;;      Locals:         0       1       0       0
  4088 ;;      Temps:          0       1       0       0
  4089 ;;      Totals:         0       6       0       0
  4090 ;;Total ram usage:        6 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    2
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_printf
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           
  4101                           ;psect for function ___lwmod
  4102  06EE                     ___lwmod:	
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4106  06EE  0020               	movlb	0	; select bank0
  4107  06EF  0828               	movf	___lwmod@divisor,w
  4108  06F0  0429               	iorwf	___lwmod@divisor+1,w
  4109  06F1  1903               	btfsc	3,2
  4110  06F2  2F16               	goto	l3032
  4111  06F3  01AD               	clrf	___lwmod@counter
  4112  06F4  0AAD               	incf	___lwmod@counter,f
  4113  06F5                     l3022:	
  4114  06F5  1BA9               	btfsc	___lwmod@divisor+1,7
  4115  06F6  2F01               	goto	l3024
  4116  06F7  3001               	movlw	1
  4117  06F8                     u3135:	
  4118  06F8  35A8               	lslf	___lwmod@divisor,f
  4119  06F9  0DA9               	rlf	___lwmod@divisor+1,f
  4120  06FA  0B89               	decfsz	9,f
  4121  06FB  2EF8               	goto	u3135
  4122  06FC  3001               	movlw	1
  4123  06FD  00AC               	movwf	??___lwmod
  4124  06FE  082C               	movf	??___lwmod,w
  4125  06FF  07AD               	addwf	___lwmod@counter,f
  4126  0700  2EF5               	goto	l3022
  4127  0701                     l3024:	
  4128  0701  0829               	movf	___lwmod@divisor+1,w
  4129  0702  022B               	subwf	___lwmod@dividend+1,w
  4130  0703  1D03               	skipz
  4131  0704  2F07               	goto	u3155
  4132  0705  0828               	movf	___lwmod@divisor,w
  4133  0706  022A               	subwf	___lwmod@dividend,w
  4134  0707                     u3155:	
  4135  0707  1C03               	skipc
  4136  0708  2F0D               	goto	l3028
  4137  0709  0828               	movf	___lwmod@divisor,w
  4138  070A  02AA               	subwf	___lwmod@dividend,f
  4139  070B  0829               	movf	___lwmod@divisor+1,w
  4140  070C  3BAB               	subwfb	___lwmod@dividend+1,f
  4141  070D                     l3028:	
  4142  070D  3001               	movlw	1
  4143  070E                     u3165:	
  4144  070E  36A9               	lsrf	___lwmod@divisor+1,f
  4145  070F  0CA8               	rrf	___lwmod@divisor,f
  4146  0710  0B89               	decfsz	9,f
  4147  0711  2F0E               	goto	u3165
  4148  0712  3001               	movlw	1
  4149  0713  02AD               	subwf	___lwmod@counter,f
  4150  0714  1D03               	btfss	3,2
  4151  0715  2F01               	goto	l3024
  4152  0716                     l3032:	
  4153  0716  082B               	movf	___lwmod@dividend+1,w
  4154  0717  00A9               	movwf	?___lwmod+1
  4155  0718  082A               	movf	___lwmod@dividend,w
  4156  0719  00A8               	movwf	?___lwmod
  4157  071A  0008               	return
  4158  071B                     __end_of___lwmod:	
  4159                           
  4160                           	psect	text19
  4161  0689                     __ptext19:	
  4162 ;; *************** function ___lwdiv *****************
  4163 ;; Defined at:
  4164 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  divisor         2    0[BANK0 ] unsigned int 
  4167 ;;  dividend        2    2[BANK0 ] unsigned int 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  quotient        2    6[BANK0 ] unsigned int 
  4170 ;;  counter         1    5[BANK0 ] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  2    0[BANK0 ] unsigned int 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4180 ;;      Params:         0       4       0       0
  4181 ;;      Locals:         0       3       0       0
  4182 ;;      Temps:          0       1       0       0
  4183 ;;      Totals:         0       8       0       0
  4184 ;;Total ram usage:        8 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    2
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_printf
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function ___lwdiv
  4196  0689                     ___lwdiv:	
  4197                           
  4198                           ;incstack = 0
  4199                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4200  0689  0020               	movlb	0	; select bank0
  4201  068A  01A6               	clrf	___lwdiv@quotient
  4202  068B  01A7               	clrf	___lwdiv@quotient+1
  4203  068C  0820               	movf	___lwdiv@divisor,w
  4204  068D  0421               	iorwf	___lwdiv@divisor+1,w
  4205  068E  1903               	btfsc	3,2
  4206  068F  2EB9               	goto	l3010
  4207  0690  01A5               	clrf	___lwdiv@counter
  4208  0691  0AA5               	incf	___lwdiv@counter,f
  4209  0692                     l2998:	
  4210  0692  1BA1               	btfsc	___lwdiv@divisor+1,7
  4211  0693  2E9E               	goto	l3000
  4212  0694  3001               	movlw	1
  4213  0695                     u3065:	
  4214  0695  35A0               	lslf	___lwdiv@divisor,f
  4215  0696  0DA1               	rlf	___lwdiv@divisor+1,f
  4216  0697  0B89               	decfsz	9,f
  4217  0698  2E95               	goto	u3065
  4218  0699  3001               	movlw	1
  4219  069A  00A4               	movwf	??___lwdiv
  4220  069B  0824               	movf	??___lwdiv,w
  4221  069C  07A5               	addwf	___lwdiv@counter,f
  4222  069D  2E92               	goto	l2998
  4223  069E                     l3000:	
  4224  069E  3001               	movlw	1
  4225  069F                     u3085:	
  4226  069F  35A6               	lslf	___lwdiv@quotient,f
  4227  06A0  0DA7               	rlf	___lwdiv@quotient+1,f
  4228  06A1  0B89               	decfsz	9,f
  4229  06A2  2E9F               	goto	u3085
  4230  06A3  0821               	movf	___lwdiv@divisor+1,w
  4231  06A4  0223               	subwf	___lwdiv@dividend+1,w
  4232  06A5  1D03               	skipz
  4233  06A6  2EA9               	goto	u3095
  4234  06A7  0820               	movf	___lwdiv@divisor,w
  4235  06A8  0222               	subwf	___lwdiv@dividend,w
  4236  06A9                     u3095:	
  4237  06A9  1C03               	skipc
  4238  06AA  2EB0               	goto	l3006
  4239  06AB  0820               	movf	___lwdiv@divisor,w
  4240  06AC  02A2               	subwf	___lwdiv@dividend,f
  4241  06AD  0821               	movf	___lwdiv@divisor+1,w
  4242  06AE  3BA3               	subwfb	___lwdiv@dividend+1,f
  4243  06AF  1426               	bsf	___lwdiv@quotient,0
  4244  06B0                     l3006:	
  4245  06B0  3001               	movlw	1
  4246  06B1                     u3105:	
  4247  06B1  36A1               	lsrf	___lwdiv@divisor+1,f
  4248  06B2  0CA0               	rrf	___lwdiv@divisor,f
  4249  06B3  0B89               	decfsz	9,f
  4250  06B4  2EB1               	goto	u3105
  4251  06B5  3001               	movlw	1
  4252  06B6  02A5               	subwf	___lwdiv@counter,f
  4253  06B7  1D03               	btfss	3,2
  4254  06B8  2E9E               	goto	l3000
  4255  06B9                     l3010:	
  4256  06B9  0827               	movf	___lwdiv@quotient+1,w
  4257  06BA  00A1               	movwf	?___lwdiv+1
  4258  06BB  0826               	movf	___lwdiv@quotient,w
  4259  06BC  00A0               	movwf	?___lwdiv
  4260  06BD  0008               	return
  4261  06BE                     __end_of___lwdiv:	
  4262                           
  4263                           	psect	text20
  4264  07B8                     __ptext20:	
  4265 ;; *************** function _fabs *****************
  4266 ;; Defined at:
  4267 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  d               3   32[BANK0 ] unsigned int 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  3   32[BANK0 ] unsigned int 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, pclath, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4281 ;;      Params:         0       3       0       0
  4282 ;;      Locals:         0       0       0       0
  4283 ;;      Temps:          0       0       0       0
  4284 ;;      Totals:         0       3       0       0
  4285 ;;Total ram usage:        3 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    3
  4288 ;; This function calls:
  4289 ;;		___ftge
  4290 ;;		___ftneg
  4291 ;; This function is called by:
  4292 ;;		_verifyACSignal
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _fabs
  4298  07B8                     _fabs:	
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
  4302  07B8  0020               	movlb	0	; select bank0
  4303  07B9  0840               	movf	fabs@d,w
  4304  07BA  00A0               	movwf	___ftge@ff1
  4305  07BB  0841               	movf	fabs@d+1,w
  4306  07BC  00A1               	movwf	___ftge@ff1+1
  4307  07BD  0842               	movf	fabs@d+2,w
  4308  07BE  00A2               	movwf	___ftge@ff1+2
  4309  07BF  3000               	movlw	0
  4310  07C0  00A3               	movwf	___ftge@ff2
  4311  07C1  3000               	movlw	0
  4312  07C2  00A4               	movwf	___ftge@ff2+1
  4313  07C3  3000               	movlw	0
  4314  07C4  00A5               	movwf	___ftge@ff2+2
  4315  07C5  3186  2613  3187   	fcall	___ftge
  4316  07C8  1803               	btfsc	3,0
  4317  07C9  0008               	return
  4318  07CA  0020               	movlb	0	; select bank0
  4319  07CB  0840               	movf	fabs@d,w
  4320  07CC  00A0               	movwf	___ftneg@f1
  4321  07CD  0841               	movf	fabs@d+1,w
  4322  07CE  00A1               	movwf	___ftneg@f1+1
  4323  07CF  0842               	movf	fabs@d+2,w
  4324  07D0  00A2               	movwf	___ftneg@f1+2
  4325  07D1  318E  269F         	fcall	___ftneg
  4326  07D3  0020               	movlb	0	; select bank0
  4327  07D4  0820               	movf	?___ftneg,w
  4328  07D5  00C0               	movwf	?_fabs
  4329  07D6  0821               	movf	?___ftneg+1,w
  4330  07D7  00C1               	movwf	?_fabs+1
  4331  07D8  0822               	movf	?___ftneg+2,w
  4332  07D9  00C2               	movwf	?_fabs+2
  4333  07DA  0008               	return
  4334  07DB                     __end_of_fabs:	
  4335                           
  4336                           	psect	text21
  4337  0E9F                     __ptext21:	
  4338 ;; *************** function ___ftneg *****************
  4339 ;; Defined at:
  4340 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  f1              3    0[BANK0 ] float 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  3    0[BANK0 ] float 
  4347 ;; Registers used:
  4348 ;;		wreg
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4354 ;;      Params:         0       3       0       0
  4355 ;;      Locals:         0       0       0       0
  4356 ;;      Temps:          0       0       0       0
  4357 ;;      Totals:         0       3       0       0
  4358 ;;Total ram usage:        3 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    2
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_fabs
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function ___ftneg
  4370  0E9F                     ___ftneg:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in ___ftneg: [wreg]
  4374  0E9F  0020               	movlb	0	; select bank0
  4375  0EA0  0822               	movf	___ftneg@f1+2,w
  4376  0EA1  0421               	iorwf	___ftneg@f1+1,w
  4377  0EA2  0420               	iorwf	___ftneg@f1,w
  4378  0EA3  1903               	skipnz
  4379  0EA4  0008               	return
  4380  0EA5  3080               	movlw	128
  4381  0EA6  06A2               	xorwf	___ftneg@f1+2,f
  4382  0EA7  0008               	return
  4383  0EA8                     __end_of___ftneg:	
  4384                           
  4385                           	psect	text22
  4386  0613                     __ptext22:	
  4387 ;; *************** function ___ftge *****************
  4388 ;; Defined at:
  4389 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  ff1             3    0[BANK0 ] float 
  4392 ;;  ff2             3    3[BANK0 ] float 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;		None               void
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4404 ;;      Params:         0       6       0       0
  4405 ;;      Locals:         0       0       0       0
  4406 ;;      Temps:          0       3       0       0
  4407 ;;      Totals:         0       9       0       0
  4408 ;;Total ram usage:        9 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    2
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_fabs
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           
  4419                           ;psect for function ___ftge
  4420  0613                     ___ftge:	
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4424  0613  0020               	movlb	0	; select bank0
  4425  0614  1FA2               	btfss	___ftge@ff1+2,7
  4426  0615  2E2A               	goto	l2940
  4427  0616  0920               	comf	___ftge@ff1,w
  4428  0617  00A6               	movwf	??___ftge
  4429  0618  0921               	comf	___ftge@ff1+1,w
  4430  0619  00A7               	movwf	??___ftge+1
  4431  061A  0922               	comf	___ftge@ff1+2,w
  4432  061B  00A8               	movwf	??___ftge+2
  4433  061C  0AA6               	incf	??___ftge,f
  4434  061D  1903               	skipnz
  4435  061E  0AA7               	incf	??___ftge+1,f
  4436  061F  1903               	skipnz
  4437  0620  0AA8               	incf	??___ftge+2,f
  4438  0621  3000               	movlw	0
  4439  0622  0726               	addwf	??___ftge,w
  4440  0623  00A0               	movwf	___ftge@ff1
  4441  0624  3000               	movlw	0
  4442  0625  3D27               	addwfc	??___ftge+1,w
  4443  0626  00A1               	movwf	___ftge@ff1+1
  4444  0627  3080               	movlw	128
  4445  0628  3D28               	addwfc	??___ftge+2,w
  4446  0629  00A2               	movwf	___ftge@ff1+2
  4447  062A                     l2940:	
  4448  062A  1FA5               	btfss	___ftge@ff2+2,7
  4449  062B  2E40               	goto	l2944
  4450  062C  0923               	comf	___ftge@ff2,w
  4451  062D  00A6               	movwf	??___ftge
  4452  062E  0924               	comf	___ftge@ff2+1,w
  4453  062F  00A7               	movwf	??___ftge+1
  4454  0630  0925               	comf	___ftge@ff2+2,w
  4455  0631  00A8               	movwf	??___ftge+2
  4456  0632  0AA6               	incf	??___ftge,f
  4457  0633  1903               	skipnz
  4458  0634  0AA7               	incf	??___ftge+1,f
  4459  0635  1903               	skipnz
  4460  0636  0AA8               	incf	??___ftge+2,f
  4461  0637  3000               	movlw	0
  4462  0638  0726               	addwf	??___ftge,w
  4463  0639  00A3               	movwf	___ftge@ff2
  4464  063A  3000               	movlw	0
  4465  063B  3D27               	addwfc	??___ftge+1,w
  4466  063C  00A4               	movwf	___ftge@ff2+1
  4467  063D  3080               	movlw	128
  4468  063E  3D28               	addwfc	??___ftge+2,w
  4469  063F  00A5               	movwf	___ftge@ff2+2
  4470  0640                     l2944:	
  4471  0640  3080               	movlw	128
  4472  0641  06A2               	xorwf	___ftge@ff1+2,f
  4473  0642  3080               	movlw	128
  4474  0643  06A5               	xorwf	___ftge@ff2+2,f
  4475  0644  0825               	movf	___ftge@ff2+2,w
  4476  0645  0222               	subwf	___ftge@ff1+2,w
  4477  0646  1D03               	skipz
  4478  0647  0008               	return
  4479  0648  0824               	movf	___ftge@ff2+1,w
  4480  0649  0221               	subwf	___ftge@ff1+1,w
  4481  064A  1D03               	skipz
  4482  064B  0008               	return
  4483  064C  0823               	movf	___ftge@ff2,w
  4484  064D  0220               	subwf	___ftge@ff1,w
  4485  064E  0008               	return
  4486  064F                     __end_of___ftge:	
  4487                           
  4488                           	psect	text23
  4489  0746                     __ptext23:	
  4490 ;; *************** function ___lltoft *****************
  4491 ;; Defined at:
  4492 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  c               4   26[BANK0 ] unsigned long 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  exp             1   31[BANK0 ] unsigned char 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  3   26[BANK0 ] float 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, pclath, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4506 ;;      Params:         0       4       0       0
  4507 ;;      Locals:         0       1       0       0
  4508 ;;      Temps:          0       1       0       0
  4509 ;;      Totals:         0       6       0       0
  4510 ;;Total ram usage:        6 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    3
  4513 ;; This function calls:
  4514 ;;		___ftpack
  4515 ;; This function is called by:
  4516 ;;		_verifyACSignal
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function ___lltoft
  4522  0746                     ___lltoft:	
  4523                           
  4524                           ;incstack = 0
  4525                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4526  0746  308E               	movlw	142
  4527  0747  0020               	movlb	0	; select bank0
  4528  0748  00BE               	movwf	??___lltoft
  4529  0749  083E               	movf	??___lltoft,w
  4530  074A  00BF               	movwf	___lltoft@exp
  4531  074B                     l3314:	
  4532  074B  30FF               	movlw	255
  4533  074C  053D               	andwf	___lltoft@c+3,w
  4534  074D  1903               	btfsc	3,2
  4535  074E  2F5B               	goto	l3316
  4536  074F  3001               	movlw	1
  4537  0750                     u3445:	
  4538  0750  36BD               	lsrf	___lltoft@c+3,f
  4539  0751  0CBC               	rrf	___lltoft@c+2,f
  4540  0752  0CBB               	rrf	___lltoft@c+1,f
  4541  0753  0CBA               	rrf	___lltoft@c,f
  4542  0754  0B89               	decfsz	9,f
  4543  0755  2F50               	goto	u3445
  4544  0756  3001               	movlw	1
  4545  0757  00BE               	movwf	??___lltoft
  4546  0758  083E               	movf	??___lltoft,w
  4547  0759  07BF               	addwf	___lltoft@exp,f
  4548  075A  2F4B               	goto	l3314
  4549  075B                     l3316:	
  4550  075B  083A               	movf	___lltoft@c,w
  4551  075C  00A0               	movwf	___ftpack@arg
  4552  075D  083B               	movf	___lltoft@c+1,w
  4553  075E  00A1               	movwf	___ftpack@arg+1
  4554  075F  083C               	movf	___lltoft@c+2,w
  4555  0760  00A2               	movwf	___ftpack@arg+2
  4556  0761  083F               	movf	___lltoft@exp,w
  4557  0762  00BE               	movwf	??___lltoft
  4558  0763  083E               	movf	??___lltoft,w
  4559  0764  00A3               	movwf	___ftpack@exp
  4560  0765  01A4               	clrf	___ftpack@sign
  4561  0766  3185  251E         	fcall	___ftpack
  4562  0768  0020               	movlb	0	; select bank0
  4563  0769  0820               	movf	?___ftpack,w
  4564  076A  00BA               	movwf	?___lltoft
  4565  076B  0821               	movf	?___ftpack+1,w
  4566  076C  00BB               	movwf	?___lltoft+1
  4567  076D  0822               	movf	?___ftpack+2,w
  4568  076E  00BC               	movwf	?___lltoft+2
  4569  076F  0008               	return
  4570  0770                     __end_of___lltoft:	
  4571                           
  4572                           	psect	text24
  4573  051E                     __ptext24:	
  4574 ;; *************** function ___ftpack *****************
  4575 ;; Defined at:
  4576 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  arg             3    0[BANK0 ] unsigned um
  4579 ;;  exp             1    3[BANK0 ] unsigned char 
  4580 ;;  sign            1    4[BANK0 ] unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  3    0[BANK0 ] float 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4592 ;;      Params:         0       5       0       0
  4593 ;;      Locals:         0       0       0       0
  4594 ;;      Temps:          0       3       0       0
  4595 ;;      Totals:         0       8       0       0
  4596 ;;Total ram usage:        8 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    2
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		___lltoft
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           
  4607                           ;psect for function ___ftpack
  4608  051E                     ___ftpack:	
  4609                           
  4610                           ;incstack = 0
  4611                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4612  051E  0020               	movlb	0	; select bank0
  4613  051F  0823               	movf	___ftpack@exp,w
  4614  0520  1903               	btfsc	3,2
  4615  0521  2D27               	goto	l2908
  4616  0522  0822               	movf	___ftpack@arg+2,w
  4617  0523  0421               	iorwf	___ftpack@arg+1,w
  4618  0524  0420               	iorwf	___ftpack@arg,w
  4619  0525  1D03               	skipz
  4620  0526  2D38               	goto	l2914
  4621  0527                     l2908:	
  4622  0527  3000               	movlw	0
  4623  0528  00A0               	movwf	?___ftpack
  4624  0529  3000               	movlw	0
  4625  052A  00A1               	movwf	?___ftpack+1
  4626  052B  3000               	movlw	0
  4627  052C  00A2               	movwf	?___ftpack+2
  4628  052D  0008               	return
  4629  052E                     l2912:	
  4630  052E  3001               	movlw	1
  4631  052F  00A5               	movwf	??___ftpack
  4632  0530  0825               	movf	??___ftpack,w
  4633  0531  07A3               	addwf	___ftpack@exp,f
  4634  0532  3001               	movlw	1
  4635  0533                     u2845:	
  4636  0533  36A2               	lsrf	___ftpack@arg+2,f
  4637  0534  0CA1               	rrf	___ftpack@arg+1,f
  4638  0535  0CA0               	rrf	___ftpack@arg,f
  4639  0536  0B89               	decfsz	9,f
  4640  0537  2D33               	goto	u2845
  4641  0538                     l2914:	
  4642  0538  30FE               	movlw	254
  4643  0539  0522               	andwf	___ftpack@arg+2,w
  4644  053A  1903               	btfsc	3,2
  4645  053B  2D51               	goto	l724
  4646  053C  2D2E               	goto	l2912
  4647  053D                     l2916:	
  4648  053D  3001               	movlw	1
  4649  053E  00A5               	movwf	??___ftpack
  4650  053F  0825               	movf	??___ftpack,w
  4651  0540  07A3               	addwf	___ftpack@exp,f
  4652  0541  3001               	movlw	1
  4653  0542  07A0               	addwf	___ftpack@arg,f
  4654  0543  3000               	movlw	0
  4655  0544  1803               	skipnc
  4656  0545  3001               	movlw	1
  4657  0546  07A1               	addwf	___ftpack@arg+1,f
  4658  0547  3000               	movlw	0
  4659  0548  1803               	skipnc
  4660  0549  3001               	movlw	1
  4661  054A  07A2               	addwf	___ftpack@arg+2,f
  4662  054B  3001               	movlw	1
  4663  054C                     u2865:	
  4664  054C  36A2               	lsrf	___ftpack@arg+2,f
  4665  054D  0CA1               	rrf	___ftpack@arg+1,f
  4666  054E  0CA0               	rrf	___ftpack@arg,f
  4667  054F  0B89               	decfsz	9,f
  4668  0550  2D4C               	goto	u2865
  4669  0551                     l724:	
  4670  0551  30FF               	movlw	255
  4671  0552  0522               	andwf	___ftpack@arg+2,w
  4672  0553  1903               	btfsc	3,2
  4673  0554  2D5E               	goto	l2924
  4674  0555  2D3D               	goto	l2916
  4675  0556                     l2922:	
  4676  0556  3001               	movlw	1
  4677  0557  02A3               	subwf	___ftpack@exp,f
  4678  0558  3001               	movlw	1
  4679  0559                     u2885:	
  4680  0559  35A0               	lslf	___ftpack@arg,f
  4681  055A  0DA1               	rlf	___ftpack@arg+1,f
  4682  055B  0DA2               	rlf	___ftpack@arg+2,f
  4683  055C  0B89               	decfsz	9,f
  4684  055D  2D59               	goto	u2885
  4685  055E                     l2924:	
  4686  055E  1BA1               	btfsc	___ftpack@arg+1,7
  4687  055F  2D64               	goto	l731
  4688  0560  3002               	movlw	2
  4689  0561  0223               	subwf	___ftpack@exp,w
  4690  0562  1803               	skipnc
  4691  0563  2D56               	goto	l2922
  4692  0564                     l731:	
  4693  0564  1823               	btfsc	___ftpack@exp,0
  4694  0565  2D6C               	goto	l732
  4695  0566  30FF               	movlw	255
  4696  0567  05A0               	andwf	___ftpack@arg,f
  4697  0568  307F               	movlw	127
  4698  0569  05A1               	andwf	___ftpack@arg+1,f
  4699  056A  30FF               	movlw	255
  4700  056B  05A2               	andwf	___ftpack@arg+2,f
  4701  056C                     l732:	
  4702  056C  1003               	clrc
  4703  056D  0CA3               	rrf	___ftpack@exp,f
  4704  056E  0823               	movf	___ftpack@exp,w
  4705  056F  00A5               	movwf	??___ftpack
  4706  0570  01A6               	clrf	??___ftpack+1
  4707  0571  01A7               	clrf	??___ftpack+2
  4708  0572  3010               	movlw	16
  4709  0573                     u2925:	
  4710  0573  35A5               	lslf	??___ftpack,f
  4711  0574  0DA6               	rlf	??___ftpack+1,f
  4712  0575  0DA7               	rlf	??___ftpack+2,f
  4713  0576  0B89               	decfsz	9,f
  4714  0577  2D73               	goto	u2925
  4715  0578  0825               	movf	??___ftpack,w
  4716  0579  04A0               	iorwf	___ftpack@arg,f
  4717  057A  0826               	movf	??___ftpack+1,w
  4718  057B  04A1               	iorwf	___ftpack@arg+1,f
  4719  057C  0827               	movf	??___ftpack+2,w
  4720  057D  04A2               	iorwf	___ftpack@arg+2,f
  4721  057E  0824               	movf	___ftpack@sign,w
  4722  057F  1903               	btfsc	3,2
  4723  0580  0008               	return
  4724  0581  17A2               	bsf	___ftpack@arg+2,7
  4725  0582  0008               	return
  4726  0583                     __end_of___ftpack:	
  4727                           
  4728                           	psect	text25
  4729  042C                     __ptext25:	
  4730 ;; *************** function ___fttol *****************
  4731 ;; Defined at:
  4732 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  f1              3   35[BANK0 ] float 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  lval            4   44[BANK0 ] unsigned long 
  4737 ;;  exp1            1   48[BANK0 ] unsigned char 
  4738 ;;  sign1           1   43[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  4   35[BANK0 ] long 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4748 ;;      Params:         0       4       0       0
  4749 ;;      Locals:         0       6       0       0
  4750 ;;      Temps:          0       4       0       0
  4751 ;;      Totals:         0      14       0       0
  4752 ;;Total ram usage:       14 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    2
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_verifyACSignal
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           
  4763                           ;psect for function ___fttol
  4764  042C                     ___fttol:	
  4765                           
  4766                           ;incstack = 0
  4767                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4768  042C  0020               	movlb	0	; select bank0
  4769  042D  0843               	movf	___fttol@f1,w
  4770  042E  00C7               	movwf	??___fttol
  4771  042F  0844               	movf	___fttol@f1+1,w
  4772  0430  00C8               	movwf	??___fttol+1
  4773  0431  0845               	movf	___fttol@f1+2,w
  4774  0432  00C9               	movwf	??___fttol+2
  4775  0433  1003               	clrc
  4776  0434  0D48               	rlf	??___fttol+1,w
  4777  0435  0D49               	rlf	??___fttol+2,w
  4778  0436  00CA               	movwf	??___fttol+3
  4779  0437  084A               	movf	??___fttol+3,w
  4780  0438  00D0               	movwf	___fttol@exp1
  4781  0439  0850               	movf	___fttol@exp1,w
  4782  043A  1D03               	btfss	3,2
  4783  043B  2C45               	goto	l3274
  4784  043C  3000               	movlw	0
  4785  043D  00C6               	movwf	?___fttol+3
  4786  043E  3000               	movlw	0
  4787  043F  00C5               	movwf	?___fttol+2
  4788  0440  3000               	movlw	0
  4789  0441  00C4               	movwf	?___fttol+1
  4790  0442  3000               	movlw	0
  4791  0443  00C3               	movwf	?___fttol
  4792  0444  0008               	return
  4793  0445                     l3274:	
  4794  0445  0843               	movf	___fttol@f1,w
  4795  0446  00C7               	movwf	??___fttol
  4796  0447  0844               	movf	___fttol@f1+1,w
  4797  0448  00C8               	movwf	??___fttol+1
  4798  0449  0845               	movf	___fttol@f1+2,w
  4799  044A  00C9               	movwf	??___fttol+2
  4800  044B  3017               	movlw	23
  4801  044C                     u3355:	
  4802  044C  36C9               	lsrf	??___fttol+2,f
  4803  044D  0CC8               	rrf	??___fttol+1,f
  4804  044E  0CC7               	rrf	??___fttol,f
  4805  044F  0B89               	decfsz	9,f
  4806  0450  2C4C               	goto	u3355
  4807  0451  0847               	movf	??___fttol,w
  4808  0452  00CA               	movwf	??___fttol+3
  4809  0453  084A               	movf	??___fttol+3,w
  4810  0454  00CB               	movwf	___fttol@sign1
  4811  0455  17C4               	bsf	___fttol@f1+1,7
  4812  0456  30FF               	movlw	255
  4813  0457  05C3               	andwf	___fttol@f1,f
  4814  0458  30FF               	movlw	255
  4815  0459  05C4               	andwf	___fttol@f1+1,f
  4816  045A  3000               	movlw	0
  4817  045B  05C5               	andwf	___fttol@f1+2,f
  4818  045C  0843               	movf	___fttol@f1,w
  4819  045D  00CC               	movwf	___fttol@lval
  4820  045E  0844               	movf	___fttol@f1+1,w
  4821  045F  00CD               	movwf	___fttol@lval+1
  4822  0460  0845               	movf	___fttol@f1+2,w
  4823  0461  00CE               	movwf	___fttol@lval+2
  4824  0462  01CF               	clrf	___fttol@lval+3
  4825  0463  308E               	movlw	142
  4826  0464  02D0               	subwf	___fttol@exp1,f
  4827  0465  1FD0               	btfss	___fttol@exp1,7
  4828  0466  2C83               	goto	l3294
  4829  0467  0850               	movf	___fttol@exp1,w
  4830  0468  3A80               	xorlw	128
  4831  0469  3E8F               	addlw	143
  4832  046A  1803               	skipnc
  4833  046B  2C75               	goto	l3292
  4834  046C  3000               	movlw	0
  4835  046D  00C6               	movwf	?___fttol+3
  4836  046E  3000               	movlw	0
  4837  046F  00C5               	movwf	?___fttol+2
  4838  0470  3000               	movlw	0
  4839  0471  00C4               	movwf	?___fttol+1
  4840  0472  3000               	movlw	0
  4841  0473  00C3               	movwf	?___fttol
  4842  0474  0008               	return
  4843  0475                     l3292:	
  4844  0475  3001               	movlw	1
  4845  0476                     u3385:	
  4846  0476  36CF               	lsrf	___fttol@lval+3,f
  4847  0477  0CCE               	rrf	___fttol@lval+2,f
  4848  0478  0CCD               	rrf	___fttol@lval+1,f
  4849  0479  0CCC               	rrf	___fttol@lval,f
  4850  047A  0B89               	decfsz	9,f
  4851  047B  2C76               	goto	u3385
  4852  047C  3001               	movlw	1
  4853  047D  00C7               	movwf	??___fttol
  4854  047E  0847               	movf	??___fttol,w
  4855  047F  07D0               	addwf	___fttol@exp1,f
  4856  0480  1903               	btfsc	3,2
  4857  0481  2C9C               	goto	l3302
  4858  0482  2C75               	goto	l3292
  4859  0483                     l3294:	
  4860  0483  3018               	movlw	24
  4861  0484  0250               	subwf	___fttol@exp1,w
  4862  0485  1C03               	skipc
  4863  0486  2C99               	goto	l815
  4864  0487  3000               	movlw	0
  4865  0488  00C6               	movwf	?___fttol+3
  4866  0489  3000               	movlw	0
  4867  048A  00C5               	movwf	?___fttol+2
  4868  048B  3000               	movlw	0
  4869  048C  00C4               	movwf	?___fttol+1
  4870  048D  3000               	movlw	0
  4871  048E  00C3               	movwf	?___fttol
  4872  048F  0008               	return
  4873  0490                     l3300:	
  4874  0490  3001               	movlw	1
  4875  0491                     u3415:	
  4876  0491  35CC               	lslf	___fttol@lval,f
  4877  0492  0DCD               	rlf	___fttol@lval+1,f
  4878  0493  0DCE               	rlf	___fttol@lval+2,f
  4879  0494  0DCF               	rlf	___fttol@lval+3,f
  4880  0495  0B89               	decfsz	9,f
  4881  0496  2C91               	goto	u3415
  4882  0497  3001               	movlw	1
  4883  0498  02D0               	subwf	___fttol@exp1,f
  4884  0499                     l815:	
  4885  0499  0850               	movf	___fttol@exp1,w
  4886  049A  1D03               	btfss	3,2
  4887  049B  2C90               	goto	l3300
  4888  049C                     l3302:	
  4889  049C  084B               	movf	___fttol@sign1,w
  4890  049D  1903               	btfsc	3,2
  4891  049E  2CAA               	goto	l3306
  4892  049F  09CC               	comf	___fttol@lval,f
  4893  04A0  09CD               	comf	___fttol@lval+1,f
  4894  04A1  09CE               	comf	___fttol@lval+2,f
  4895  04A2  09CF               	comf	___fttol@lval+3,f
  4896  04A3  0ACC               	incf	___fttol@lval,f
  4897  04A4  1903               	skipnz
  4898  04A5  0ACD               	incf	___fttol@lval+1,f
  4899  04A6  1903               	skipnz
  4900  04A7  0ACE               	incf	___fttol@lval+2,f
  4901  04A8  1903               	skipnz
  4902  04A9  0ACF               	incf	___fttol@lval+3,f
  4903  04AA                     l3306:	
  4904  04AA  084F               	movf	___fttol@lval+3,w
  4905  04AB  00C6               	movwf	?___fttol+3
  4906  04AC  084E               	movf	___fttol@lval+2,w
  4907  04AD  00C5               	movwf	?___fttol+2
  4908  04AE  084D               	movf	___fttol@lval+1,w
  4909  04AF  00C4               	movwf	?___fttol+1
  4910  04B0  084C               	movf	___fttol@lval,w
  4911  04B1  00C3               	movwf	?___fttol
  4912  04B2  0008               	return
  4913  04B3                     __end_of___fttol:	
  4914                           
  4915                           	psect	text26
  4916  0EC9                     __ptext26:	
  4917 ;; *************** function _ToggleGLED *****************
  4918 ;; Defined at:
  4919 ;;		line 149 in file "IO_Controls.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4933 ;;      Params:         0       0       0       0
  4934 ;;      Locals:         0       0       0       0
  4935 ;;      Temps:          0       1       0       0
  4936 ;;      Totals:         0       1       0       0
  4937 ;;Total ram usage:        1 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    2
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_main
  4944 ;;		_verifyACSignal
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function _ToggleGLED
  4950  0EC9                     _ToggleGLED:	
  4951                           
  4952                           ;IO_Controls.c: 151: portA.portAByte = PORTA;
  4953                           
  4954                           ;incstack = 0
  4955                           ; Regs used in _ToggleGLED: [wreg]
  4956  0EC9  0020               	movlb	0	; select bank0
  4957  0ECA  080C               	movf	12,w	;volatile
  4958  0ECB  00A0               	movwf	??_ToggleGLED
  4959  0ECC  0820               	movf	??_ToggleGLED,w
  4960  0ECD  00F4               	movwf	_portA
  4961                           
  4962                           ;IO_Controls.c: 152: if(portA.bits.PassLED == 1){
  4963  0ECE  1EF4               	btfss	_portA,5
  4964  0ECF  2ED2               	goto	l384
  4965                           
  4966                           ;IO_Controls.c: 154: portA.bits.PassLED = 0;
  4967  0ED0  12F4               	bcf	_portA,5
  4968                           
  4969                           ;IO_Controls.c: 155: }
  4970  0ED1  2ED3               	goto	l3042
  4971  0ED2                     l384:	
  4972                           
  4973                           ;IO_Controls.c: 156: else{
  4974                           ;IO_Controls.c: 157: portA.bits.PassLED = 1;
  4975  0ED2  16F4               	bsf	_portA,5
  4976  0ED3                     l3042:	
  4977                           
  4978                           ;IO_Controls.c: 158: }
  4979                           ;IO_Controls.c: 159: PORTA=portA.portAByte;
  4980  0ED3  0874               	movf	_portA,w
  4981  0ED4  008C               	movwf	12	;volatile
  4982  0ED5  0008               	return
  4983  0ED6                     __end_of_ToggleGLED:	
  4984                           ;IO_Controls.c: 160: return;
  4985                           
  4986                           
  4987                           	psect	text27
  4988  0FE4                     __ptext27:	
  4989 ;; *************** function _Timer1 *****************
  4990 ;; Defined at:
  4991 ;;		line 31 in file "Timer.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  2    0[BANK0 ] unsigned int 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5005 ;;      Params:         0       2       0       0
  5006 ;;      Locals:         0       0       0       0
  5007 ;;      Temps:          0       2       0       0
  5008 ;;      Totals:         0       4       0       0
  5009 ;;Total ram usage:        4 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    2
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_verifyACSignal
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _Timer1
  5021  0FE4                     _Timer1:	
  5022                           
  5023                           ;Timer.c: 33: TMR1ON = 0;
  5024                           
  5025                           ;incstack = 0
  5026                           ; Regs used in _Timer1: [wreg+status,2]
  5027  0FE4  0020               	movlb	0	; select bank0
  5028  0FE5  1018               	bcf	24,0	;volatile
  5029                           
  5030                           ;Timer.c: 35: temp_time = TMR1H;
  5031  0FE6  0817               	movf	23,w	;volatile
  5032  0FE7  00A2               	movwf	??_Timer1
  5033  0FE8  01A3               	clrf	??_Timer1+1
  5034  0FE9  0822               	movf	??_Timer1,w
  5035  0FEA  00DC               	movwf	_temp_time
  5036  0FEB  0823               	movf	??_Timer1+1,w
  5037  0FEC  00DD               	movwf	_temp_time+1
  5038                           
  5039                           ;Timer.c: 36: temp_time <<= 8;
  5040  0FED  3008               	movlw	8
  5041  0FEE                     u3215:	
  5042  0FEE  35DC               	lslf	_temp_time,f
  5043  0FEF  0DDD               	rlf	_temp_time+1,f
  5044  0FF0  0B89               	decfsz	9,f
  5045  0FF1  2FEE               	goto	u3215
  5046                           
  5047                           ;Timer.c: 37: temp_time += TMR1L;
  5048  0FF2  0816               	movf	22,w	;volatile
  5049  0FF3  00A2               	movwf	??_Timer1
  5050  0FF4  01A3               	clrf	??_Timer1+1
  5051  0FF5  0822               	movf	??_Timer1,w
  5052  0FF6  07DC               	addwf	_temp_time,f
  5053  0FF7  0823               	movf	??_Timer1+1,w
  5054  0FF8  3DDD               	addwfc	_temp_time+1,f
  5055                           
  5056                           ;Timer.c: 39: TMR1L = 0x00;
  5057  0FF9  0196               	clrf	22	;volatile
  5058                           
  5059                           ;Timer.c: 40: TMR1H = 0x00;
  5060  0FFA  0197               	clrf	23	;volatile
  5061                           
  5062                           ;Timer.c: 42: return temp_time;
  5063  0FFB  085D               	movf	_temp_time+1,w
  5064  0FFC  00A1               	movwf	?_Timer1+1
  5065  0FFD  085C               	movf	_temp_time,w
  5066  0FFE  00A0               	movwf	?_Timer1
  5067  0FFF  0008               	return
  5068  1000                     __end_of_Timer1:	
  5069                           
  5070                           	psect	text28
  5071  071B                     __ptext28:	
  5072 ;; *************** function _ReadADC *****************
  5073 ;; Defined at:
  5074 ;;		line 33 in file "ADC.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2    0[BANK0 ] unsigned short 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5088 ;;      Params:         0       2       0       0
  5089 ;;      Locals:         0       0       0       0
  5090 ;;      Temps:          0       2       0       0
  5091 ;;      Totals:         0       4       0       0
  5092 ;;Total ram usage:        4 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    2
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_verifyACSignal
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function _ReadADC
  5104  071B                     _ReadADC:	
  5105                           
  5106                           ;ADC.c: 35: adcData = 0;
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _ReadADC: [wreg+status,2]
  5110  071B  0021               	movlb	1	; select bank1
  5111  071C  01B6               	clrf	_adcData^(0+128)
  5112  071D  01B7               	clrf	(_adcData+1)^(0+128)
  5113                           
  5114                           ;ADC.c: 37: GO_nDONE = 1;
  5115  071E  149D               	bsf	29,1	;volatile
  5116  071F                     l247:	
  5117                           ;ADC.c: 38: while (GO_nDONE){
  5118                           
  5119  071F  189D               	btfsc	29,1	;volatile
  5120  0720  2F1F               	goto	l247
  5121                           
  5122                           ;ADC.c: 39: }
  5123                           ;ADC.c: 42: adcData = (ADRESH & 0x03);
  5124  0721  081C               	movf	28,w	;volatile
  5125  0722  3903               	andlw	3
  5126  0723  0020               	movlb	0	; select bank0
  5127  0724  00A2               	movwf	??_ReadADC
  5128  0725  01A3               	clrf	??_ReadADC+1
  5129  0726  0822               	movf	??_ReadADC,w
  5130  0727  0021               	movlb	1	; select bank1
  5131  0728  00B6               	movwf	_adcData^(0+128)
  5132  0729  0020               	movlb	0	; select bank0
  5133  072A  0823               	movf	??_ReadADC+1,w
  5134  072B  0021               	movlb	1	; select bank1
  5135  072C  00B7               	movwf	(_adcData+1)^(0+128)
  5136                           
  5137                           ;ADC.c: 43: adcData<<=8;
  5138  072D  3008               	movlw	8
  5139  072E                     u3205:	
  5140  072E  35B6               	lslf	_adcData^(0+128),f
  5141  072F  0DB7               	rlf	(_adcData+1)^(0+128),f
  5142  0730  0B89               	decfsz	9,f
  5143  0731  2F2E               	goto	u3205
  5144                           
  5145                           ;ADC.c: 44: adcData+=ADRESL;
  5146  0732  081B               	movf	27,w	;volatile
  5147  0733  0020               	movlb	0	; select bank0
  5148  0734  00A2               	movwf	??_ReadADC
  5149  0735  01A3               	clrf	??_ReadADC+1
  5150  0736  0822               	movf	??_ReadADC,w
  5151  0737  0021               	movlb	1	; select bank1
  5152  0738  07B6               	addwf	_adcData^(0+128),f
  5153  0739  0020               	movlb	0	; select bank0
  5154  073A  0823               	movf	??_ReadADC+1,w
  5155  073B  0021               	movlb	1	; select bank1
  5156  073C  3DB7               	addwfc	(_adcData+1)^(0+128),f
  5157                           
  5158                           ;ADC.c: 49: GO_nDONE = 0;
  5159  073D  109D               	bcf	29,1	;volatile
  5160                           
  5161                           ;ADC.c: 51: return adcData;
  5162  073E  0837               	movf	(_adcData+1)^(0+128),w
  5163  073F  0020               	movlb	0	; select bank0
  5164  0740  00A1               	movwf	?_ReadADC+1
  5165  0741  0021               	movlb	1	; select bank1
  5166  0742  0836               	movf	_adcData^(0+128),w
  5167  0743  0020               	movlb	0	; select bank0
  5168  0744  00A0               	movwf	?_ReadADC
  5169  0745  0008               	return
  5170  0746                     __end_of_ReadADC:	
  5171                           
  5172                           	psect	text29
  5173  064F                     __ptext29:	
  5174 ;; *************** function _pi3Connect *****************
  5175 ;; Defined at:
  5176 ;;		line 91 in file "newmain.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  handshake       1    5[BANK0 ] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5190 ;;      Params:         0       0       0       0
  5191 ;;      Locals:         0       1       0       0
  5192 ;;      Temps:          0       2       0       0
  5193 ;;      Totals:         0       3       0       0
  5194 ;;Total ram usage:        3 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    3
  5197 ;; This function calls:
  5198 ;;		_Fail_LED
  5199 ;;		_UART_TX
  5200 ;;		_empty_RX_BUFF
  5201 ;; This function is called by:
  5202 ;;		_main
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           
  5207                           ;psect for function _pi3Connect
  5208  064F                     _pi3Connect:	
  5209                           
  5210                           ;newmain.c: 93: PIE1bits.RCIE = 1;
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in _pi3Connect: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5214  064F  0021               	movlb	1	; select bank1
  5215  0650  1691               	bsf	17,5	;volatile
  5216                           
  5217                           ;newmain.c: 94: INTCONbits.PEIE = 1;
  5218  0651  170B               	bsf	11,6	;volatile
  5219                           
  5220                           ;newmain.c: 96: RCSTAbits.SPEN = 1;
  5221  0652  0023               	movlb	3	; select bank3
  5222  0653  179D               	bsf	29,7	;volatile
  5223                           
  5224                           ;newmain.c: 97: RCSTAbits.CREN = 0; RCSTAbits.CREN = 1;
  5225  0654  121D               	bcf	29,4	;volatile
  5226  0655  161D               	bsf	29,4	;volatile
  5227                           
  5228                           ;newmain.c: 99: unsigned char handshake = '0';
  5229  0656  3030               	movlw	48
  5230  0657  0020               	movlb	0	; select bank0
  5231  0658  00A3               	movwf	??_pi3Connect
  5232  0659  0823               	movf	??_pi3Connect,w
  5233  065A  00A5               	movwf	pi3Connect@handshake
  5234  065B                     l3346:	
  5235                           ;newmain.c: 102: while(handshake != '1'){
  5236                           
  5237  065B  3031               	movlw	49
  5238  065C  0020               	movlb	0	; select bank0
  5239  065D  0625               	xorwf	pi3Connect@handshake,w
  5240  065E  1903               	btfsc	3,2
  5241  065F  2E6B               	goto	l3348
  5242                           
  5243                           ;newmain.c: 104: handshake = rxArray[0];
  5244  0660  0021               	movlb	1	; select bank1
  5245  0661  0838               	movf	_rxArray^(0+128),w
  5246  0662  0020               	movlb	0	; select bank0
  5247  0663  00A3               	movwf	??_pi3Connect
  5248  0664  0823               	movf	??_pi3Connect,w
  5249  0665  00A5               	movwf	pi3Connect@handshake
  5250                           
  5251                           ;newmain.c: 105: Fail_LED(1);
  5252  0666  3001               	movlw	1
  5253  0667  318F  2700  3186   	fcall	_Fail_LED
  5254  066A  2E5B               	goto	l3346
  5255  066B                     l3348:	
  5256                           
  5257                           ;newmain.c: 106: }
  5258                           ;newmain.c: 107: rxFlag = 0;
  5259  066B  0021               	movlb	1	; select bank1
  5260  066C  01AC               	clrf	_rxFlag^(0+128)
  5261  066D  01AD               	clrf	(_rxFlag+1)^(0+128)
  5262                           
  5263                           ;newmain.c: 110: empty_RX_BUFF();
  5264  066E  3187  2770  3186   	fcall	_empty_RX_BUFF
  5265                           
  5266                           ;newmain.c: 111: Fail_LED(0);
  5267  0671  3000               	movlw	0
  5268  0672  318F  2700  3186   	fcall	_Fail_LED
  5269                           
  5270                           ;newmain.c: 114: _delay((unsigned long)((10)*(4000000/4000.0)));
  5271  0675  300D               	movlw	13
  5272  0676  0020               	movlb	0	; select bank0
  5273  0677  00A3               	movwf	??_pi3Connect
  5274  0678  30FB               	movlw	251
  5275  0679                     u3727:	
  5276  0679  0B89               	decfsz	9,f
  5277  067A  2E79               	goto	u3727
  5278  067B  0BA3               	decfsz	??_pi3Connect,f
  5279  067C  2E79               	goto	u3727
  5280  067D  3200               	nop2
  5281                           
  5282                           ;newmain.c: 115: UART_TX(handshake);
  5283  067E  0020               	movlb	0	; select bank0
  5284  067F  0825               	movf	pi3Connect@handshake,w
  5285  0680  00A3               	movwf	??_pi3Connect
  5286  0681  01A4               	clrf	??_pi3Connect+1
  5287  0682  0823               	movf	??_pi3Connect,w
  5288  0683  00A0               	movwf	UART_TX@data
  5289  0684  0824               	movf	??_pi3Connect+1,w
  5290  0685  00A1               	movwf	UART_TX@data+1
  5291  0686  318E  26A8         	fcall	_UART_TX
  5292  0688  0008               	return
  5293  0689                     __end_of_pi3Connect:	
  5294                           ;newmain.c: 117: return;
  5295                           
  5296                           
  5297                           	psect	text30
  5298  0770                     __ptext30:	
  5299 ;; *************** function _empty_RX_BUFF *****************
  5300 ;; Defined at:
  5301 ;;		line 88 in file "USART.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  i               2    1[BANK0 ] int 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5315 ;;      Params:         0       0       0       0
  5316 ;;      Locals:         0       2       0       0
  5317 ;;      Temps:          0       1       0       0
  5318 ;;      Totals:         0       3       0       0
  5319 ;;Total ram usage:        3 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    2
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_pi3Connect
  5326 ;;		_verifyACSignal
  5327 ;;		_setupTestParameters
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function _empty_RX_BUFF
  5333  0770                     _empty_RX_BUFF:	
  5334                           
  5335                           ;USART.c: 90: for(int i = 0; i < 20; i++)
  5336                           
  5337                           ;incstack = 0
  5338                           ; Regs used in _empty_RX_BUFF: [wreg+fsr1l+fsr1h+status,2+status,0]
  5339  0770  0020               	movlb	0	; select bank0
  5340  0771  01A1               	clrf	empty_RX_BUFF@i
  5341  0772  01A2               	clrf	empty_RX_BUFF@i+1
  5342  0773  0822               	movf	empty_RX_BUFF@i+1,w
  5343  0774  3A80               	xorlw	128
  5344  0775  00A0               	movwf	??_empty_RX_BUFF
  5345  0776  3080               	movlw	128
  5346  0777  0220               	subwf	??_empty_RX_BUFF,w
  5347  0778  1D03               	skipz
  5348  0779  2F7C               	goto	u2645
  5349  077A  3014               	movlw	20
  5350  077B  0221               	subwf	empty_RX_BUFF@i,w
  5351  077C                     u2645:	
  5352  077C  1803               	btfsc	3,0
  5353  077D  2F93               	goto	l2792
  5354  077E                     l2786:	
  5355                           
  5356                           ;USART.c: 91: {
  5357                           ;USART.c: 93: rxArray[i] = '\0';
  5358  077E  0020               	movlb	0	; select bank0
  5359  077F  0821               	movf	empty_RX_BUFF@i,w
  5360  0780  3EB8               	addlw	(low (_rxArray| 0))& (0+255)
  5361  0781  0086               	movwf	6
  5362  0782  0187               	clrf	7
  5363  0783  0181               	clrf	1
  5364  0784  3001               	movlw	1
  5365  0785  07A1               	addwf	empty_RX_BUFF@i,f
  5366  0786  3000               	movlw	0
  5367  0787  3DA2               	addwfc	empty_RX_BUFF@i+1,f
  5368  0788  0822               	movf	empty_RX_BUFF@i+1,w
  5369  0789  3A80               	xorlw	128
  5370  078A  00A0               	movwf	??_empty_RX_BUFF
  5371  078B  3080               	movlw	128
  5372  078C  0220               	subwf	??_empty_RX_BUFF,w
  5373  078D  1D03               	skipz
  5374  078E  2F91               	goto	u2655
  5375  078F  3014               	movlw	20
  5376  0790  0221               	subwf	empty_RX_BUFF@i,w
  5377  0791                     u2655:	
  5378  0791  1C03               	skipc
  5379  0792  2F7E               	goto	l2786
  5380  0793                     l2792:	
  5381                           
  5382                           ;USART.c: 94: }
  5383                           ;USART.c: 95: ptr = 0;
  5384  0793  01F2               	clrf	_ptr
  5385  0794  0008               	return
  5386  0795                     __end_of_empty_RX_BUFF:	
  5387                           
  5388                           	psect	text31
  5389  0EA8                     __ptext31:	
  5390 ;; *************** function _UART_TX *****************
  5391 ;; Defined at:
  5392 ;;		line 48 in file "USART.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  data            2    0[BANK0 ] PTR unsigned char 
  5395 ;;		 -> RAM(4096), 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		wreg
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5407 ;;      Params:         0       2       0       0
  5408 ;;      Locals:         0       0       0       0
  5409 ;;      Temps:          0       0       0       0
  5410 ;;      Totals:         0       2       0       0
  5411 ;;Total ram usage:        2 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    2
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_pi3Connect
  5418 ;;		_verifyACSignal
  5419 ;;		_setupTestParameters
  5420 ;;		_UART_TX_String
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function _UART_TX
  5426  0EA8                     _UART_TX:	
  5427  0EA8                     l292:	
  5428                           ;USART.c: 53: continue;
  5429                           
  5430                           ;USART.c: 51: while(!TRMT)
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _UART_TX: [wreg]
  5434                           
  5435  0EA8  0023               	movlb	3	; select bank3
  5436  0EA9  1C9E               	btfss	30,1	;volatile
  5437  0EAA  2EA8               	goto	l292
  5438                           
  5439                           ;USART.c: 54: if(TXIF){
  5440  0EAB  0020               	movlb	0	; select bank0
  5441  0EAC  1E11               	btfss	17,4	;volatile
  5442  0EAD  0008               	return
  5443                           
  5444                           ;USART.c: 57: TXREG = data;
  5445  0EAE  0820               	movf	UART_TX@data,w	;volatile
  5446  0EAF  0023               	movlb	3	; select bank3
  5447  0EB0  009A               	movwf	26	;volatile
  5448  0EB1  0008               	return
  5449  0EB2                     __end_of_UART_TX:	
  5450                           ;USART.c: 58: }
  5451                           ;USART.c: 60: return;
  5452                           
  5453                           
  5454                           	psect	text32
  5455  0F00                     __ptext32:	
  5456 ;; *************** function _Fail_LED *****************
  5457 ;; Defined at:
  5458 ;;		line 119 in file "IO_Controls.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  OnOff           1    wreg     unsigned char 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  OnOff           1    1[BANK0 ] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5472 ;;      Params:         0       0       0       0
  5473 ;;      Locals:         0       1       0       0
  5474 ;;      Temps:          0       1       0       0
  5475 ;;      Totals:         0       2       0       0
  5476 ;;Total ram usage:        2 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_pi3Connect
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function _Fail_LED
  5488  0F00                     _Fail_LED:	
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in _Fail_LED: [wreg+status,2]
  5492                           ;Fail_LED@OnOff stored from wreg
  5493  0F00  0020               	movlb	0	; select bank0
  5494  0F01  00A1               	movwf	Fail_LED@OnOff
  5495                           
  5496                           ;IO_Controls.c: 121: portC.portCByte = PORTC;
  5497  0F02  080E               	movf	14,w	;volatile
  5498  0F03  00A0               	movwf	??_Fail_LED
  5499  0F04  0820               	movf	??_Fail_LED,w
  5500  0F05  00F3               	movwf	_portC
  5501                           
  5502                           ;IO_Controls.c: 122: portC.bits.Fail_LED = OnOff;
  5503  0F06  0821               	movf	Fail_LED@OnOff,w
  5504  0F07  3901               	andlw	1
  5505  0F08  12F3               	bcf	_portC,5
  5506  0F09  1D03               	skipz
  5507  0F0A  16F3               	bsf	_portC,5
  5508                           
  5509                           ;IO_Controls.c: 123: PORTC=portC.portCByte;
  5510  0F0B  0873               	movf	_portC,w
  5511  0F0C  008E               	movwf	14	;volatile
  5512  0F0D  0008               	return
  5513  0F0E                     __end_of_Fail_LED:	
  5514                           ;IO_Controls.c: 124: return;
  5515                           
  5516                           
  5517                           	psect	text33
  5518  0F55                     __ptext33:	
  5519 ;; *************** function _initPIC *****************
  5520 ;; Defined at:
  5521 ;;		line 58 in file "newmain.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0, pclath, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5535 ;;      Params:         0       0       0       0
  5536 ;;      Locals:         0       0       0       0
  5537 ;;      Temps:          0       0       0       0
  5538 ;;      Totals:         0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    3
  5542 ;; This function calls:
  5543 ;;		_InitUSART
  5544 ;;		_Init_TMR1
  5545 ;;		_InitialiseADC
  5546 ;;		_InitialisePorts
  5547 ;; This function is called by:
  5548 ;;		_main
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _initPIC
  5554  0F55                     _initPIC:	
  5555                           
  5556                           ;newmain.c: 62: OSCCON = 0b01101000;
  5557                           
  5558                           ;incstack = 0
  5559                           ; Regs used in _initPIC: [wreg+status,2+status,0+pclath+cstack]
  5560  0F55  3068               	movlw	104
  5561  0F56  0021               	movlb	1	; select bank1
  5562  0F57  0099               	movwf	25	;volatile
  5563  0F58                     l136:	
  5564                           ;newmain.c: 73: while(HFIOFR==0){
  5565                           
  5566  0F58  1E1A               	btfss	26,4	;volatile
  5567  0F59  2F58               	goto	l136
  5568                           
  5569                           ;newmain.c: 74: }
  5570                           ;newmain.c: 77: INTCON = 0b00000000;
  5571  0F5A  018B               	clrf	11	;volatile
  5572                           
  5573                           ;newmain.c: 78: INTCONbits.GIE = 0;
  5574  0F5B  138B               	bcf	11,7	;volatile
  5575                           
  5576                           ;newmain.c: 80: InitialisePorts();
  5577  0F5C  318F  277F  318F   	fcall	_InitialisePorts
  5578                           
  5579                           ;newmain.c: 81: Init_TMR1();
  5580  0F5F  318E  26BC  318F   	fcall	_Init_TMR1
  5581                           
  5582                           ;newmain.c: 82: InitialiseADC();
  5583  0F62  318F  2769  318F   	fcall	_InitialiseADC
  5584                           
  5585                           ;newmain.c: 83: InitUSART();
  5586  0F65  318F  2796         	fcall	_InitUSART
  5587                           
  5588                           ;newmain.c: 85: INTCONbits.GIE = 1;
  5589  0F67  178B               	bsf	11,7	;volatile
  5590  0F68  0008               	return
  5591  0F69                     __end_of_initPIC:	
  5592                           ;newmain.c: 87: return;
  5593                           
  5594                           
  5595                           	psect	text34
  5596  0F7F                     __ptext34:	
  5597 ;; *************** function _InitialisePorts *****************
  5598 ;; Defined at:
  5599 ;;		line 11 in file "IO_Controls.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5613 ;;      Params:         0       0       0       0
  5614 ;;      Locals:         0       0       0       0
  5615 ;;      Temps:          0       0       0       0
  5616 ;;      Totals:         0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    2
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_initPIC
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _InitialisePorts
  5629  0F7F                     _InitialisePorts:	
  5630                           
  5631                           ;IO_Controls.c: 13: OPTION_REG = 0b11000000;
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in _InitialisePorts: [wreg+status,2]
  5635  0F7F  30C0               	movlw	192
  5636  0F80  0021               	movlb	1	; select bank1
  5637  0F81  0095               	movwf	21	;volatile
  5638                           
  5639                           ;IO_Controls.c: 23: portA.portAByte = 0;
  5640  0F82  01F4               	clrf	_portA
  5641                           
  5642                           ;IO_Controls.c: 24: LATA = 0;
  5643  0F83  0022               	movlb	2	; select bank2
  5644  0F84  018C               	clrf	12	;volatile
  5645                           
  5646                           ;IO_Controls.c: 26: TRISA = 0b00011110;
  5647  0F85  301E               	movlw	30
  5648  0F86  0021               	movlb	1	; select bank1
  5649  0F87  008C               	movwf	12	;volatile
  5650                           
  5651                           ;IO_Controls.c: 34: ANSELA = 0b00000000;
  5652  0F88  0023               	movlb	3	; select bank3
  5653  0F89  018C               	clrf	12	;volatile
  5654                           
  5655                           ;IO_Controls.c: 36: IOCAPbits.IOCAP4 = 1;
  5656  0F8A  0027               	movlb	7	; select bank7
  5657  0F8B  1611               	bsf	17,4	;volatile
  5658                           
  5659                           ;IO_Controls.c: 39: portC.portCByte = 0;
  5660  0F8C  01F3               	clrf	_portC
  5661                           
  5662                           ;IO_Controls.c: 40: LATC = 0;
  5663  0F8D  0022               	movlb	2	; select bank2
  5664  0F8E  018E               	clrf	14	;volatile
  5665                           
  5666                           ;IO_Controls.c: 41: TRISC = 0b00001000;
  5667  0F8F  3008               	movlw	8
  5668  0F90  0021               	movlb	1	; select bank1
  5669  0F91  008E               	movwf	14	;volatile
  5670                           
  5671                           ;IO_Controls.c: 43: ANSELC = 0b00001000;
  5672  0F92  3008               	movlw	8
  5673  0F93  0023               	movlb	3	; select bank3
  5674  0F94  008E               	movwf	14	;volatile
  5675  0F95  0008               	return
  5676  0F96                     __end_of_InitialisePorts:	
  5677                           ;IO_Controls.c: 48: return;
  5678                           
  5679                           
  5680                           	psect	text35
  5681  0F69                     __ptext35:	
  5682 ;; *************** function _InitialiseADC *****************
  5683 ;; Defined at:
  5684 ;;		line 15 in file "ADC.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;		None
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5698 ;;      Params:         0       0       0       0
  5699 ;;      Locals:         0       0       0       0
  5700 ;;      Temps:          0       0       0       0
  5701 ;;      Totals:         0       0       0       0
  5702 ;;Total ram usage:        0 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    2
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_initPIC
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           
  5713                           ;psect for function _InitialiseADC
  5714  0F69                     _InitialiseADC:	
  5715                           
  5716                           ;ADC.c: 17: ADCON0bits.CHS = 0b0111;
  5717                           
  5718                           ;incstack = 0
  5719                           ; Regs used in _InitialiseADC: [wreg+status,2+status,0]
  5720  0F69  0021               	movlb	1	; select bank1
  5721  0F6A  081D               	movf	29,w	;volatile
  5722  0F6B  3983               	andlw	-125
  5723  0F6C  381C               	iorlw	28
  5724  0F6D  009D               	movwf	29	;volatile
  5725                           
  5726                           ;ADC.c: 19: ADFM = 1;
  5727  0F6E  179E               	bsf	30,7	;volatile
  5728                           
  5729                           ;ADC.c: 20: ADCON1bits.ADCS = 0b000;
  5730  0F6F  308F               	movlw	-113
  5731  0F70  059E               	andwf	30,f	;volatile
  5732                           
  5733                           ;ADC.c: 22: ADCON1bits.ADPREF = 0b011;
  5734  0F71  3003               	movlw	3
  5735  0F72  049E               	iorwf	30,f	;volatile
  5736                           
  5737                           ;ADC.c: 24: FVRCON = 0b11000011;
  5738  0F73  30C3               	movlw	195
  5739  0F74  0022               	movlb	2	; select bank2
  5740  0F75  0097               	movwf	23	;volatile
  5741                           
  5742                           ;ADC.c: 26: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5743  0F76  3003               	movlw	3
  5744  0F77                     u3737:	
  5745  0F77  0B89               	decfsz	9,f
  5746  0F78  2F77               	goto	u3737
  5747  0F79  0000               	nop
  5748                           
  5749                           ;ADC.c: 27: ADIE=0;
  5750  0F7A  0021               	movlb	1	; select bank1
  5751  0F7B  1311               	bcf	17,6	;volatile
  5752                           
  5753                           ;ADC.c: 28: ADON=0;
  5754  0F7C  101D               	bcf	29,0	;volatile
  5755                           
  5756                           ;ADC.c: 29: GO_nDONE=0;
  5757  0F7D  109D               	bcf	29,1	;volatile
  5758  0F7E  0008               	return
  5759  0F7F                     __end_of_InitialiseADC:	
  5760                           ;ADC.c: 30: return;
  5761                           
  5762                           
  5763                           	psect	text36
  5764  0EBC                     __ptext36:	
  5765 ;; *************** function _Init_TMR1 *****************
  5766 ;; Defined at:
  5767 ;;		line 17 in file "Timer.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;		None
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;		None
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		wreg, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5781 ;;      Params:         0       0       0       0
  5782 ;;      Locals:         0       0       0       0
  5783 ;;      Temps:          0       0       0       0
  5784 ;;      Totals:         0       0       0       0
  5785 ;;Total ram usage:        0 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    2
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_initPIC
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           
  5796                           ;psect for function _Init_TMR1
  5797  0EBC                     _Init_TMR1:	
  5798                           
  5799                           ;Timer.c: 20: T1CON = 0b00000000;
  5800                           
  5801                           ;incstack = 0
  5802                           ; Regs used in _Init_TMR1: [wreg+status,2+status,0]
  5803  0EBC  0020               	movlb	0	; select bank0
  5804  0EBD  0198               	clrf	24	;volatile
  5805                           
  5806                           ;Timer.c: 21: T1CONbits.TMR1CS = 0b00;
  5807  0EBE  303F               	movlw	-193
  5808  0EBF  0598               	andwf	24,f	;volatile
  5809                           
  5810                           ;Timer.c: 22: T1CONbits.T1CKPS = 0b01;
  5811  0EC0  0818               	movf	24,w	;volatile
  5812  0EC1  39CF               	andlw	-49
  5813  0EC2  3810               	iorlw	16
  5814  0EC3  0098               	movwf	24	;volatile
  5815                           
  5816                           ;Timer.c: 24: T1GCON = 0b01000000;
  5817  0EC4  3040               	movlw	64
  5818  0EC5  0099               	movwf	25	;volatile
  5819                           
  5820                           ;Timer.c: 26: INTCON = 0b10000000;
  5821  0EC6  3080               	movlw	128
  5822  0EC7  008B               	movwf	11	;volatile
  5823  0EC8  0008               	return
  5824  0EC9                     __end_of_Init_TMR1:	
  5825                           ;Timer.c: 28: return;
  5826                           
  5827                           
  5828                           	psect	text37
  5829  0F96                     __ptext37:	
  5830 ;; *************** function _InitUSART *****************
  5831 ;; Defined at:
  5832 ;;		line 15 in file "USART.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5846 ;;      Params:         0       0       0       0
  5847 ;;      Locals:         0       0       0       0
  5848 ;;      Temps:          0       0       0       0
  5849 ;;      Totals:         0       0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    2
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_initPIC
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           
  5861                           ;psect for function _InitUSART
  5862  0F96                     _InitUSART:	
  5863                           
  5864                           ;USART.c: 18: PIE1bits.TXIE = 0;
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _InitUSART: [wreg+status,2]
  5868  0F96  0021               	movlb	1	; select bank1
  5869  0F97  1211               	bcf	17,4	;volatile
  5870                           
  5871                           ;USART.c: 19: RCREG = 0;
  5872  0F98  0023               	movlb	3	; select bank3
  5873  0F99  0199               	clrf	25	;volatile
  5874                           
  5875                           ;USART.c: 21: RCSTAbits.RX9 = 0;
  5876  0F9A  131D               	bcf	29,6	;volatile
  5877                           
  5878                           ;USART.c: 22: RCSTAbits.CREN = 1;
  5879  0F9B  161D               	bsf	29,4	;volatile
  5880                           
  5881                           ;USART.c: 25: TXSTAbits.TX9 = 0;
  5882  0F9C  131E               	bcf	30,6	;volatile
  5883                           
  5884                           ;USART.c: 26: TXSTAbits.TXEN = 1;
  5885  0F9D  169E               	bsf	30,5	;volatile
  5886                           
  5887                           ;USART.c: 29: TXSTAbits.SYNC = 0;
  5888  0F9E  121E               	bcf	30,4	;volatile
  5889                           
  5890                           ;USART.c: 30: TXSTAbits.BRGH = 1;
  5891  0F9F  151E               	bsf	30,2	;volatile
  5892                           
  5893                           ;USART.c: 31: BAUDCONbits.BRG16 = 0;
  5894  0FA0  119F               	bcf	31,3	;volatile
  5895                           
  5896                           ;USART.c: 32: SPBRG = 23;
  5897  0FA1  3017               	movlw	23
  5898  0FA2  009B               	movwf	27	;volatile
  5899                           
  5900                           ;USART.c: 34: TRISAbits.TRISA1 = 1;
  5901  0FA3  0021               	movlb	1	; select bank1
  5902  0FA4  148C               	bsf	12,1	;volatile
  5903                           
  5904                           ;USART.c: 35: ANSELAbits.ANSA1 = 0;
  5905  0FA5  0023               	movlb	3	; select bank3
  5906  0FA6  108C               	bcf	12,1	;volatile
  5907                           
  5908                           ;USART.c: 37: TRISAbits.TRISA0 = 0;
  5909  0FA7  0021               	movlb	1	; select bank1
  5910  0FA8  100C               	bcf	12,0	;volatile
  5911                           
  5912                           ;USART.c: 38: ANSELAbits.ANSA1 = 0;
  5913  0FA9  0023               	movlb	3	; select bank3
  5914  0FAA  108C               	bcf	12,1	;volatile
  5915                           
  5916                           ;USART.c: 40: APFCON0bits.RXDTSEL = 1;
  5917  0FAB  0022               	movlb	2	; select bank2
  5918  0FAC  179D               	bsf	29,7	;volatile
  5919                           
  5920                           ;USART.c: 41: APFCON0bits.TXCKSEL = 1;
  5921  0FAD  151D               	bsf	29,2	;volatile
  5922  0FAE  0008               	return
  5923  0FAF                     __end_of_InitUSART:	
  5924                           ;USART.c: 45: return;
  5925                           
  5926                           
  5927                           	psect	intentry
  5928  0004                     __pintentry:	
  5929 ;; *************** function _ISR *****************
  5930 ;; Defined at:
  5931 ;;		line 348 in file "newmain.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5945 ;;      Params:         0       0       0       0
  5946 ;;      Locals:         0       0       0       0
  5947 ;;      Temps:          1       0       0       0
  5948 ;;      Totals:         1       0       0       0
  5949 ;;Total ram usage:        1 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    1
  5952 ;; This function calls:
  5953 ;;		_UART_RX_String
  5954 ;;		i1_Fail_LED
  5955 ;;		i1_PassLED
  5956 ;;		i1_Timer1
  5957 ;; This function is called by:
  5958 ;;		Interrupt level 1
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962  0004                     _ISR:	
  5963                           
  5964                           ;incstack = 0
  5965  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5966                           
  5967                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5968  0005  3180               	pagesel	$
  5969  0006  0020               	movlb	0	; select bank0
  5970  0007  087F               	movf	127,w
  5971  0008  00F9               	movwf	??_ISR
  5972                           
  5973                           ;newmain.c: 352: if((INTCONbits.INTF == 1) && (INTCONbits.INTE == 1)){
  5974  0009  188B               	btfsc	11,1	;volatile
  5975  000A  1E0B               	btfss	11,4	;volatile
  5976  000B  282B               	goto	i1l198
  5977                           
  5978                           ;newmain.c: 354: if((PORTAbits.RA2 == 1)){
  5979  000C  1D0C               	btfss	12,2	;volatile
  5980  000D  2829               	goto	i1l199
  5981                           
  5982                           ;newmain.c: 356: if((ADC_Test == 1) && (tmr1StartFlag == 0)){
  5983  000E  0370               	decf	_ADC_Test,w	;volatile
  5984  000F  0471               	iorwf	_ADC_Test+1,w	;volatile
  5985  0010  1D03               	btfss	3,2
  5986  0011  2824               	goto	i1l2676
  5987  0012  0866               	movf	_tmr1StartFlag,w	;volatile
  5988  0013  0467               	iorwf	_tmr1StartFlag+1,w	;volatile
  5989  0014  1D03               	btfss	3,2
  5990  0015  2824               	goto	i1l2676
  5991                           
  5992                           ;newmain.c: 358: TMR1ON = 1;
  5993  0016  1418               	bsf	24,0	;volatile
  5994                           
  5995                           ;newmain.c: 359: tmr1StartFlag++;
  5996  0017  3001               	movlw	1
  5997  0018  07E6               	addwf	_tmr1StartFlag,f	;volatile
  5998  0019  3000               	movlw	0
  5999  001A  3DE7               	addwfc	_tmr1StartFlag+1,f	;volatile
  6000                           
  6001                           ;newmain.c: 360: Fail_LED(0);
  6002  001B  3000               	movlw	0
  6003  001C  318E  26E4  3180   	fcall	i1_Fail_LED
  6004                           
  6005                           ;newmain.c: 361: PassLED(1);
  6006  001F  3001               	movlw	1
  6007  0020  318E  26F2  3180   	fcall	i1_PassLED
  6008                           
  6009                           ;newmain.c: 362: }
  6010  0023  2829               	goto	i1l199
  6011  0024                     i1l2676:	
  6012                           
  6013                           ;newmain.c: 363: else if(PosCycle == 1){
  6014  0024  0020               	movlb	0	; select bank0
  6015  0025  0360               	decf	_PosCycle,w	;volatile
  6016  0026  0461               	iorwf	_PosCycle+1,w	;volatile
  6017  0027  1903               	btfsc	3,2
  6018                           
  6019                           ;newmain.c: 365: TMR1ON = 1;
  6020  0028  1418               	bsf	24,0	;volatile
  6021  0029                     i1l199:	
  6022                           
  6023                           ;newmain.c: 366: }
  6024                           ;newmain.c: 367: }
  6025                           ;newmain.c: 368: INTCONbits.INTF = 0;
  6026  0029  108B               	bcf	11,1	;volatile
  6027                           
  6028                           ;newmain.c: 369: }
  6029  002A  286D               	goto	i1l215
  6030  002B                     i1l198:	
  6031                           
  6032                           ;newmain.c: 373: else if(( IOCAFbits.IOCAF4 == 1 ) && (INTCONbits.IOCIE == 1)){
  6033  002B  0027               	movlb	7	; select bank7
  6034  002C  1A13               	btfsc	19,4	;volatile
  6035  002D  1D8B               	btfss	11,3	;volatile
  6036  002E  2857               	goto	i1l204
  6037                           
  6038                           ;newmain.c: 375: if((PORTAbits.RA4 == 1)){
  6039  002F  0020               	movlb	0	; select bank0
  6040  0030  1E0C               	btfss	12,4	;volatile
  6041  0031  2854               	goto	i1l205
  6042                           
  6043                           ;newmain.c: 377: if((ADC_Test == 1) && (tmr1StartFlag == 1)){
  6044  0032  0370               	decf	_ADC_Test,w	;volatile
  6045  0033  0471               	iorwf	_ADC_Test+1,w	;volatile
  6046  0034  1D03               	btfss	3,2
  6047  0035  2850               	goto	i1l2696
  6048  0036  0366               	decf	_tmr1StartFlag,w	;volatile
  6049  0037  0467               	iorwf	_tmr1StartFlag+1,w	;volatile
  6050  0038  1D03               	btfss	3,2
  6051  0039  2850               	goto	i1l2696
  6052                           
  6053                           ;newmain.c: 378: tmr1Val = Timer1();
  6054  003A  318F  27C8  3180   	fcall	i1_Timer1
  6055  003D  0875               	movf	?i1_Timer1,w
  6056  003E  0021               	movlb	1	; select bank1
  6057  003F  00A4               	movwf	_tmr1Val^(0+128)
  6058  0040  0876               	movf	?i1_Timer1+1,w
  6059  0041  00A5               	movwf	(_tmr1Val^(0+128)+1)
  6060  0042  01A6               	clrf	(_tmr1Val^(0+128)+2)
  6061  0043  01A7               	clrf	(_tmr1Val^(0+128)+3)
  6062                           
  6063                           ;newmain.c: 379: Fail_LED(1);
  6064  0044  3001               	movlw	1
  6065  0045  318E  26E4  3180   	fcall	i1_Fail_LED
  6066                           
  6067                           ;newmain.c: 380: PassLED(0);
  6068  0048  3000               	movlw	0
  6069  0049  318E  26F2  3180   	fcall	i1_PassLED
  6070                           
  6071                           ;newmain.c: 381: tmr1StartFlag = 0;
  6072  004C  0020               	movlb	0	; select bank0
  6073  004D  01E6               	clrf	_tmr1StartFlag	;volatile
  6074  004E  01E7               	clrf	_tmr1StartFlag+1	;volatile
  6075                           
  6076                           ;newmain.c: 382: }
  6077  004F  2854               	goto	i1l205
  6078  0050                     i1l2696:	
  6079                           
  6080                           ;newmain.c: 383: else if(NegCycle == 1){
  6081  0050  035E               	decf	_NegCycle,w	;volatile
  6082  0051  045F               	iorwf	_NegCycle+1,w	;volatile
  6083  0052  1903               	btfsc	3,2
  6084                           
  6085                           ;newmain.c: 385: TMR1ON = 1;
  6086  0053  1418               	bsf	24,0	;volatile
  6087  0054                     i1l205:	
  6088                           
  6089                           ;newmain.c: 386: }
  6090                           ;newmain.c: 388: }
  6091                           ;newmain.c: 390: IOCAFbits.IOCAF4 = 0;
  6092  0054  0027               	movlb	7	; select bank7
  6093  0055  1213               	bcf	19,4	;volatile
  6094                           
  6095                           ;newmain.c: 391: }
  6096  0056  286D               	goto	i1l215
  6097  0057                     i1l204:	
  6098                           
  6099                           ;newmain.c: 394: else if (PIR1bits.RCIF){
  6100  0057  0020               	movlb	0	; select bank0
  6101  0058  1E91               	btfss	17,5	;volatile
  6102  0059  286D               	goto	i1l215
  6103                           
  6104                           ;newmain.c: 395: rxFlag = 1;
  6105  005A  3001               	movlw	1
  6106  005B  0021               	movlb	1	; select bank1
  6107  005C  00AC               	movwf	_rxFlag^(0+128)
  6108  005D  3000               	movlw	0
  6109  005E  00AD               	movwf	(_rxFlag^(0+128)+1)
  6110                           
  6111                           ;newmain.c: 396: if((RCSTAbits.OERR == 1) || (RCSTAbits.FERR == 1)){
  6112  005F  0023               	movlb	3	; select bank3
  6113  0060  189D               	btfsc	29,1	;volatile
  6114  0061  2864               	goto	i1l213
  6115  0062  1D1D               	btfss	29,2	;volatile
  6116  0063  286B               	goto	i1l2708
  6117  0064                     i1l213:	
  6118                           
  6119                           ;newmain.c: 399: RCSTAbits.CREN = 0; RCSTAbits.CREN = 1;
  6120  0064  121D               	bcf	29,4	;volatile
  6121  0065  161D               	bsf	29,4	;volatile
  6122                           
  6123                           ;newmain.c: 400: Fail_LED(1);
  6124  0066  3001               	movlw	1
  6125  0067  318E  26E4  3180   	fcall	i1_Fail_LED
  6126                           
  6127                           ;newmain.c: 401: }
  6128  006A  286D               	goto	i1l215
  6129  006B                     i1l2708:	
  6130                           
  6131                           ;newmain.c: 402: else{
  6132                           ;newmain.c: 404: UART_RX_String();
  6133  006B  318E  26D6         	fcall	_UART_RX_String
  6134  006D                     i1l215:	
  6135                           ;newmain.c: 405: }
  6136                           ;newmain.c: 407: }
  6137                           ;newmain.c: 409: return;
  6138                           
  6139  006D  0879               	movf	??_ISR,w
  6140  006E  0020               	movlb	0	; select bank0
  6141  006F  00FF               	movwf	127
  6142  0070  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6143  0071  0009               	retfie
  6144  0072                     __end_of_ISR:	
  6145                           
  6146                           	psect	text39
  6147  0FC8                     __ptext39:	
  6148 ;; *************** function i1_Timer1 *****************
  6149 ;; Defined at:
  6150 ;;		line 31 in file "Timer.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  2    0[COMMON] unsigned int 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6164 ;;      Params:         2       0       0       0
  6165 ;;      Locals:         0       0       0       0
  6166 ;;      Temps:          2       0       0       0
  6167 ;;      Totals:         4       0       0       0
  6168 ;;Total ram usage:        4 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_ISR
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           
  6178                           ;psect for function i1_Timer1
  6179  0FC8                     i1_Timer1:	
  6180                           
  6181                           ;Timer.c: 33: TMR1ON = 0;
  6182                           
  6183                           ;incstack = 0
  6184                           ; Regs used in i1_Timer1: [wreg+status,2]
  6185  0FC8  0020               	movlb	0	; select bank0
  6186  0FC9  1018               	bcf	24,0	;volatile
  6187                           
  6188                           ;Timer.c: 35: temp_time = TMR1H;
  6189  0FCA  0817               	movf	23,w	;volatile
  6190  0FCB  00F7               	movwf	??i1_Timer1
  6191  0FCC  01F8               	clrf	??i1_Timer1+1
  6192  0FCD  0877               	movf	??i1_Timer1,w
  6193  0FCE  00DC               	movwf	_temp_time
  6194  0FCF  0878               	movf	??i1_Timer1+1,w
  6195  0FD0  00DD               	movwf	_temp_time+1
  6196                           
  6197                           ;Timer.c: 36: temp_time <<= 8;
  6198  0FD1  3008               	movlw	8
  6199  0FD2                     u237_25:	
  6200  0FD2  35DC               	lslf	_temp_time,f
  6201  0FD3  0DDD               	rlf	_temp_time+1,f
  6202  0FD4  0B89               	decfsz	9,f
  6203  0FD5  2FD2               	goto	u237_25
  6204                           
  6205                           ;Timer.c: 37: temp_time += TMR1L;
  6206  0FD6  0816               	movf	22,w	;volatile
  6207  0FD7  00F7               	movwf	??i1_Timer1
  6208  0FD8  01F8               	clrf	??i1_Timer1+1
  6209  0FD9  0877               	movf	??i1_Timer1,w
  6210  0FDA  07DC               	addwf	_temp_time,f
  6211  0FDB  0878               	movf	??i1_Timer1+1,w
  6212  0FDC  3DDD               	addwfc	_temp_time+1,f
  6213                           
  6214                           ;Timer.c: 39: TMR1L = 0x00;
  6215  0FDD  0196               	clrf	22	;volatile
  6216                           
  6217                           ;Timer.c: 40: TMR1H = 0x00;
  6218  0FDE  0197               	clrf	23	;volatile
  6219                           
  6220                           ;Timer.c: 42: return temp_time;
  6221  0FDF  085D               	movf	_temp_time+1,w
  6222  0FE0  00F6               	movwf	?i1_Timer1+1
  6223  0FE1  085C               	movf	_temp_time,w
  6224  0FE2  00F5               	movwf	?i1_Timer1
  6225  0FE3  0008               	return
  6226  0FE4                     __end_ofi1_Timer1:	
  6227                           
  6228                           	psect	text40
  6229  0EF2                     __ptext40:	
  6230 ;; *************** function i1_PassLED *****************
  6231 ;; Defined at:
  6232 ;;		line 141 in file "IO_Controls.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  OnOff           1    wreg     unsigned char 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  OnOff           1    1[COMMON] unsigned char 
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		wreg, status,2
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6246 ;;      Params:         0       0       0       0
  6247 ;;      Locals:         1       0       0       0
  6248 ;;      Temps:          1       0       0       0
  6249 ;;      Totals:         2       0       0       0
  6250 ;;Total ram usage:        2 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_ISR
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function i1_PassLED
  6261  0EF2                     i1_PassLED:	
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in i1_PassLED: [wreg+status,2]
  6265                           ;i1PassLED@OnOff stored from wreg
  6266  0EF2  00F6               	movwf	i1PassLED@OnOff
  6267                           
  6268                           ;IO_Controls.c: 143: portA.portAByte = PORTA;
  6269  0EF3  0020               	movlb	0	; select bank0
  6270  0EF4  080C               	movf	12,w	;volatile
  6271  0EF5  00F5               	movwf	??i1_PassLED
  6272  0EF6  0875               	movf	??i1_PassLED,w
  6273  0EF7  00F4               	movwf	_portA
  6274                           
  6275                           ;IO_Controls.c: 144: portA.bits.PassLED = OnOff;
  6276  0EF8  0876               	movf	i1PassLED@OnOff,w
  6277  0EF9  3901               	andlw	1
  6278  0EFA  12F4               	bcf	_portA,5
  6279  0EFB  1D03               	skipz
  6280  0EFC  16F4               	bsf	_portA,5
  6281                           
  6282                           ;IO_Controls.c: 145: PORTA=portA.portAByte;
  6283  0EFD  0874               	movf	_portA,w
  6284  0EFE  008C               	movwf	12	;volatile
  6285  0EFF  0008               	return
  6286  0F00                     __end_ofi1_PassLED:	
  6287                           ;IO_Controls.c: 146: return;
  6288                           
  6289                           
  6290                           	psect	text41
  6291  0EE4                     __ptext41:	
  6292 ;; *************** function i1_Fail_LED *****************
  6293 ;; Defined at:
  6294 ;;		line 119 in file "IO_Controls.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  OnOff           1    wreg     unsigned char 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  OnOff           1    1[COMMON] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6308 ;;      Params:         0       0       0       0
  6309 ;;      Locals:         1       0       0       0
  6310 ;;      Temps:          1       0       0       0
  6311 ;;      Totals:         2       0       0       0
  6312 ;;Total ram usage:        2 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_ISR
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function i1_Fail_LED
  6323  0EE4                     i1_Fail_LED:	
  6324                           
  6325                           ;incstack = 0
  6326                           ; Regs used in i1_Fail_LED: [wreg+status,2]
  6327                           ;i1Fail_LED@OnOff stored from wreg
  6328  0EE4  00F6               	movwf	i1Fail_LED@OnOff
  6329                           
  6330                           ;IO_Controls.c: 121: portC.portCByte = PORTC;
  6331  0EE5  0020               	movlb	0	; select bank0
  6332  0EE6  080E               	movf	14,w	;volatile
  6333  0EE7  00F5               	movwf	??i1_Fail_LED
  6334  0EE8  0875               	movf	??i1_Fail_LED,w
  6335  0EE9  00F3               	movwf	_portC
  6336                           
  6337                           ;IO_Controls.c: 122: portC.bits.Fail_LED = OnOff;
  6338  0EEA  0876               	movf	i1Fail_LED@OnOff,w
  6339  0EEB  3901               	andlw	1
  6340  0EEC  12F3               	bcf	_portC,5
  6341  0EED  1D03               	skipz
  6342  0EEE  16F3               	bsf	_portC,5
  6343                           
  6344                           ;IO_Controls.c: 123: PORTC=portC.portCByte;
  6345  0EEF  0873               	movf	_portC,w
  6346  0EF0  008E               	movwf	14	;volatile
  6347  0EF1  0008               	return
  6348  0EF2                     __end_ofi1_Fail_LED:	
  6349                           ;IO_Controls.c: 124: return;
  6350                           
  6351                           
  6352                           	psect	text42
  6353  0ED6                     __ptext42:	
  6354 ;; *************** function _UART_RX_String *****************
  6355 ;; Defined at:
  6356 ;;		line 80 in file "USART.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      void 
  6363 ;; Registers used:
  6364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6370 ;;      Params:         0       0       0       0
  6371 ;;      Locals:         0       0       0       0
  6372 ;;      Temps:          1       0       0       0
  6373 ;;      Totals:         1       0       0       0
  6374 ;;Total ram usage:        1 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_ISR
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function _UART_RX_String
  6385  0ED6                     _UART_RX_String:	
  6386                           
  6387                           ;USART.c: 84: *(rxArray+ptr)=RCREG;
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in _UART_RX_String: [wreg+fsr1l+fsr1h+status,2+status,0]
  6391  0ED6  0023               	movlb	3	; select bank3
  6392  0ED7  0819               	movf	25,w	;volatile
  6393  0ED8  00F5               	movwf	??_UART_RX_String
  6394  0ED9  0872               	movf	_ptr,w
  6395  0EDA  3EB8               	addlw	(low (_rxArray| 0))& (0+255)
  6396  0EDB  0086               	movwf	6
  6397  0EDC  0187               	clrf	7
  6398  0EDD  0875               	movf	??_UART_RX_String,w
  6399  0EDE  0081               	movwf	1
  6400                           
  6401                           ;USART.c: 85: ptr++;
  6402  0EDF  3001               	movlw	1
  6403  0EE0  00F5               	movwf	??_UART_RX_String
  6404  0EE1  0875               	movf	??_UART_RX_String,w
  6405  0EE2  07F2               	addwf	_ptr,f
  6406  0EE3  0008               	return
  6407  0EE4                     __end_of_UART_RX_String:	
  6408  007E                     btemp	set	126	;btemp
  6409  007E                     int$flags	set	126
  6410  007E                     wtemp0	set	126


Data Sizes:
    Strings     4
    Constant    10
    Data        0
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     56      80
    BANK1            80      3      47
    BANK2            80      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> rxArray(BANK1[20]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART_TX_String@string	PTR unsigned char  size(1) Largest target is 20
		 -> rxArray(BANK1[20]), 

    UART_TX@data	PTR unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_Timer1

Critical Paths under _main in BANK0

    _main->_verifyACSignal
    _verifyACSignal->___fttol
    _setupTestParameters->___lldiv
    _beginHighCurrentTest->_Timer1Read
    _atoi->___wmul
    ___lldiv->___lmul
    _UART_TX_String->_UART_TX
    _printf->___lwmod
    ___lwmod->___lwdiv
    _fabs->___lltoft
    ___lltoft->___lldiv
    ___fttol->_fabs
    _pi3Connect->_empty_RX_BUFF

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10047
                                              0 BANK1      3     3      0
                         _ToggleGLED
                            _initPIC
                         _pi3Connect
                     _verifyACSignal
 ---------------------------------------------------------------------------------
 (1) _verifyACSignal                                       7     7      0    9365
                                             49 BANK0      7     7      0
                     _ADC_OPTO_Relay
                            _ReadADC
                             _Timer1
                         _ToggleGLED
                            _UART_TX
                            ___fttol
                            ___lldiv
                           ___lltoft
                      _empty_RX_BUFF
                               _fabs
                             _printf
                _setupTestParameters
 ---------------------------------------------------------------------------------
 (2) _setupTestParameters                                  3     3      0    3107
                                             26 BANK0      3     3      0
                            _PassLED
                            _UART_TX
                     _UART_TX_String
                            ___lldiv
                             ___lmul
                               _atoi
               _beginHighCurrentTest
                      _empty_RX_BUFF
 ---------------------------------------------------------------------------------
 (3) _beginHighCurrentTest                                 6     6      0     130
                                              4 BANK0      6     6      0
                     _ADC_OPTO_Relay
                                _SCR
                          _SCR_Relay
                          _TMR1Reset
                         _Timer1Read
 ---------------------------------------------------------------------------------
 (4) _Timer1Read                                           4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _TMR1Reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SCR_Relay                                            2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _SCR                                                  2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_OPTO_Relay                                       2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     789
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     444
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     549
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_TX_String                                       6     6      0     612
                                              2 BANK0      6     6      0
                            _UART_TX
 ---------------------------------------------------------------------------------
 (3) _PassLED                                              2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    18      6    1452
                                             14 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _fabs                                                 3     0      3     664
                                             32 BANK0      3     0      3
                             ___ftge
                            ___ftneg
                            ___lldiv (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     352
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2463
                                             26 BANK0      6     2      4
                           ___ftpack
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2284
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             35 BANK0     14    10      4
                            ___lldiv (ARG)
                           ___lltoft (ARG)
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (2) _ToggleGLED                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Timer1                                               4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _pi3Connect                                           3     3      0     614
                                              3 BANK0      3     3      0
                           _Fail_LED
                            _UART_TX
                      _empty_RX_BUFF
 ---------------------------------------------------------------------------------
 (3) _empty_RX_BUFF                                        3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _UART_TX                                              2     0      2     416
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Fail_LED                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initPIC                                              0     0      0       0
                          _InitUSART
                          _Init_TMR1
                      _InitialiseADC
                    _InitialisePorts
 ---------------------------------------------------------------------------------
 (2) _InitialisePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitialiseADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0      44
                                              4 COMMON     1     1      0
                     _UART_RX_String
                         i1_Fail_LED
                          i1_PassLED
                           i1_Timer1
 ---------------------------------------------------------------------------------
 (6) i1_Timer1                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) i1_PassLED                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) i1_Fail_LED                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _UART_RX_String                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ToggleGLED
   _initPIC
     _InitUSART
     _Init_TMR1
     _InitialiseADC
     _InitialisePorts
   _pi3Connect
     _Fail_LED
     _UART_TX
     _empty_RX_BUFF
   _verifyACSignal
     _ADC_OPTO_Relay
     _ReadADC
     _Timer1
     _ToggleGLED
     _UART_TX
     ___fttol
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___lldiv (ARG)
           ___lmul (ARG)
       _fabs (ARG)
         ___ftge
         ___ftneg
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lltoft (ARG)
           ___ftpack
           ___lldiv (ARG)
             ___lmul (ARG)
     ___lldiv
       ___lmul (ARG)
     ___lltoft
       ___ftpack
       ___lldiv (ARG)
         ___lmul (ARG)
     _empty_RX_BUFF
     _fabs
       ___ftge
       ___ftneg
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lltoft (ARG)
         ___ftpack
         ___lldiv (ARG)
           ___lmul (ARG)
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
     _setupTestParameters
       _PassLED
       _UART_TX
       _UART_TX_String
         _UART_TX
       ___lldiv
         ___lmul (ARG)
       ___lmul
       _atoi
         ___wmul
         _isdigit
       _beginHighCurrentTest
         _ADC_OPTO_Relay
         _SCR
         _SCR_Relay
         _TMR1Reset
         _Timer1Read
       _empty_RX_BUFF

 _ISR (ROOT)
   _UART_RX_String
   i1_Fail_LED
   i1_PassLED
   i1_Timer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      89       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     38      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      89      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 03 06:46:19 2018

              i1Fail_LED@OnOff 0076                    __CFG_CP$OFF 0000            ___wmul@multiplicand 0022  
                          l151 00C0                            l136 0F58                            l162 0134  
                          l316 0EB4                            l247 071F                            l191 040A  
                          l292 0EA8                            l460 03A1                            l384 0ED2  
                          l544 07E4                            l731 0564                            l732 056C  
                          l724 0551                            l815 0499                   __CFG_CPD$OFF 0000  
                          _ISR 0004                            _SCR 0F2A                            _PoW 006C  
                          _ptr 0072                   __CFG_BORV$LO 0000                            wreg 0009  
                 __CFG_LVP$OFF 0000                           ?_ISR 0075                           ?_SCR 0075  
                         l3000 069E                           l3010 06B9                           l3006 06B0  
                         l3022 06F5                           l3024 0701                           l3032 0716  
                         l3042 0ED3                           l3202 035F                           l3300 0490  
                         l3028 070D                           l3212 036C                           l3302 049C  
                         l3206 0367                           l3214 02EF                           l3224 0229  
                         l3306 04AA                           l3314 074B                           l3226 0235  
                         l3402 0121                           l3410 00CB                           l3316 075B  
                         l3180 0324                           l3236 0254                           l3420 018B  
                         l3404 0126                           l3190 033A                           l3174 030B  
                         l3248 0278                           l3440 01DE                           l3346 065B  
                         l3274 0445                           l3426 01A0                           l3348 066B  
                         l3292 0475                           l3196 0340                           l2812 04BC  
                         l3428 01A5                           l3294 0483                           l2830 04DE  
                         l2814 04B5                           l3366 0097                           l2912 052E  
                         l2808 0799                           l2840 0519                           l2832 04E2  
                         l2824 04D7                           l2816 04C1                           l3456 0215  
                         l3448 01F9                           l3368 00A3                           l2922 0556  
                         l2914 0538                           l2834 0509                           l2850 03B5  
                         l3394 00EF                           l2924 055E                           l2916 053D  
                         l2908 0527                           l2940 062A                           l2756 07DE  
                         l2860 03D4                           l3476 0603                           l3468 05E7  
                         l2854 03BF                           l2792 0793                           l2944 0640  
                         l2776 0F53                           l2864 03E4                           l2786 077E  
                         l2970 0594                           l2874 03D6                           l2980 05C2  
                         l2972 05A2                           l2892 06C7                           l2876 041C  
                         l2984 05CD                           l2896 06D1                           l2998 0692  
                         _ADIE 048E                           _ADFM 04F7                           _ADON 04E8  
                         STR_1 0801                           _LATA 010C                           u3015 05A3  
                         _LATC 010E                           u3105 06B1                           u3025 05B7  
                         u3035 05C3                           u3205 072E                           u3215 0FEE  
                         u3135 06F8                           u3065 0695                           u3155 0707  
                         u3085 069F                           u3165 070E                           u2605 07EA  
                         u3415 0491                           u3095 06A9                           u3265 0355  
                         u3355 044C                           u2645 077C                           u3445 0750  
                         u2805 06D9                           u3605 01F7                           u2655 0791  
                         u2575 0FB8                           u3615 0213                           u3385 0476  
                         u3625 05E5                           u2595 07E5                           u2755 03FC  
                         u3707 025E                           u3635 0601                           u2925 0573  
                         u2845 0533                           u2765 03E0                           u3717 0282  
                         u3727 0679                           u3647 05EE                           u3737 0F77  
                         u2865 054C                           u3657 060A                           u2795 06D2  
                         u3667 00AD                           u2885 0559                           u3677 01B8  
                         u3687 0200                           u3697 0240                           u2995 0597  
                         _TRMT 0CF1                           _TXIF 008C                   __CFG_WRT$OFF 0000  
              __end_of_UART_TX 0EB2                           _fabs 07B8                           _atoi 04B3  
                         _main 05D6                   ___ftpack@arg 0020                   ___ftpack@exp 0023  
                         _time 00A8                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 0072                  __CFG_IESO$OFF 0000         __size_of_empty_RX_BUFF 0025  
       __size_of_InitialiseADC 0016                __end_of_ReadADC 0746                __end_of_PassLED 0F1C  
                        ??_ISR 0079                          ??_SCR 0020                   ___fttol@exp1 0050  
                 ___fttol@lval 004C  __size_of_beginHighCurrentTest 008A                    ?i1_Fail_LED 0075  
                        ?_fabs 0040                          ?_atoi 0026                          ?_main 0075  
                __CFG_WDTE$OFF 0000                __end_of___ftneg 0EA8                __end_of___lldiv 05D6  
                        _T1CON 0018                __end_of___fttol 04B3                __end_of___lwdiv 06BE  
                        i1l204 0057                          i1l213 0064                          i1l205 0054  
                        i1l215 006D                __end_of___lwmod 071B                          i1l198 002B  
                        i1l199 0029                          _RCREG 0199                          _TMR1H 0017  
                        _TMR1L 0016                          _SPBRG 019B                          _PORTA 000C  
                        _PORTC 000E                          _TRISA 008C                          _TRISC 008E  
                        _TXREG 019A            ___lmul@multiplicand 0024                  __CFG_PWRTE$ON 0000  
                 ___lltoft@exp 003F                 __CFG_FCMEN$OFF 0000             __size_of_SCR_Relay 000E  
           __size_of_TMR1Reset 0005                __end_of_initPIC 0F69                __end_of_dpowers 0801  
                        fabs@d 0040                __end_of_isdigit 0F55             __size_ofi1_PassLED 000E  
             __end_ofi1_Timer1 0FE4                  ___ftpack@sign 0024                          _portA 0074  
                        _portC 0073                          atoi@a 002B                          atoi@s 002D  
                        _putch 0EB2                          main@i 00CD                          status 0003  
             __end_of_Fail_LED 0F0E                          wtemp0 007E                 __CFG_MCLRE$OFF 0000  
              __initialization 0074                   __end_of_fabs 07DB                   __end_of_atoi 051E  
                 __end_of_main 0613                         ??_fabs 0043                         ??_atoi 0028  
                       ??_main 00CC                  ___fttol@sign1 004B                 __CFG_PLLEN$OFF 0000  
                _empty_RX_BUFF 0770                  _InitialiseADC 0F69                      ??_UART_TX 0022  
                   _Tmr1Val_Ms 00A0                         _ADRESH 009C                         _ADRESL 009B  
                       _ANSELA 018C                         ?_putch 0075                         _ANSELC 018E  
             __end_of___ftpack 0583                         _T1GCON 0019                         _HFIOFR 04D4  
             __end_of___lltoft 0770                         i1l2708 006B                         i1l2676 0024  
                       i1l2696 0050            pi3Connect@handshake 0025             __size_of_InitUSART 0019  
                       _INTCON 000B                         _FVRCON 0117                         u237_25 0FD2  
                       _OSCCON 0099        __size_of_ADC_OPTO_Relay 000E             __size_of_Init_TMR1 000D  
      __size_of_UART_RX_String 000E                         _TMR1ON 00C0                         _SCR_On 00AE  
                    ??_ReadADC 0022            __size_ofi1_Fail_LED 000E                 empty_RX_BUFF@i 0021  
      __size_of_UART_TX_String 0023                      ??_PassLED 0020                     _Timer1Read 0FAF  
                       _Timer1 0FE4              __end_of_SCR_Relay 0F46                         ___ftge 0613  
                       ___lmul 06BE              __end_of_TMR1Reset 0E99                         ___wmul 07DB  
               __CFG_STVREN$ON 0000                      ??___ftneg 0023                      ??___lldiv 0034  
                    ??___fttol 0047              __end_ofi1_PassLED 0F00                      ??___lwdiv 0024  
                    ??___lwmod 002C                         _cycles 00AA                         _rxFlag 00AC  
                       _rxByte 006A                         _txByte 006B                         _printf 02EA  
                   _ToggleGLED 0EC9                      ??_initPIC 0020                 ?_empty_RX_BUFF 0075  
               ?_InitialiseADC 0075                      ??_isdigit 0020                         putch@c 0020  
                 PassLED@OnOff 0021               ??_verifyACSignal 0051        __end_of__initialization 0088  
                   ___ftge@ff1 0020                     ___ftge@ff2 0023                     ___ftneg@f1 0020  
                   ___fttol@f1 0043                 __pcstackCOMMON 0075       __size_of_InitialisePorts 0017  
                   ___lltoft@c 003A                  __end_of_putch 0EBC                      ?i1_Timer1 0075  
            __end_of_InitUSART 0FAF              __end_of_Init_TMR1 0EC9                      ?_Fail_LED 0075  
                   _pi3Connect 064F   __size_of_setupTestParameters 00CE                        ??_putch 0020  
                   __pbssBANK0 0058                     __pbssBANK1 00A0                 i1PassLED@OnOff 0076  
        beginHighCurrentTest@i 0028                    ?_Timer1Read 0020                        ?_Timer1 0020  
                   __pmaintext 05D6                        ?___ftge 0020                     _aveTmr1Val 0058  
                      ?___lmul 0020                        ?___wmul 0020                     __pintentry 0004  
               ___lmul@product 0028                     ??i1_Timer1 0077                      ?___ftpack 0020  
                 ??i1_Fail_LED 0075                        ?_printf 002E                ??_empty_RX_BUFF 0020  
                  ?_ToggleGLED 0075                      ?___lltoft 003A                ??_InitialiseADC 0020  
                   ??_Fail_LED 0020                        _UART_TX 0EA8   __end_of_beginHighCurrentTest 042C  
               _ADC_OPTO_Relay 0F1C                 _UART_RX_String 0ED6                        _ReadADC 071B  
               _UART_TX_String 0795                        _PassLED 0F0E             __end_ofi1_Fail_LED 0EF2  
              __size_of_Timer1 001C                        _adcData 00B6                __size_of___ftge 003C  
              __size_of___lmul 0030                    UART_TX@data 0020                        ___ftneg 0E9F  
                      ___lldiv 0583                __size_of___wmul 001C                        ___fttol 042C  
                      ___lwdiv 0689                        ___lwmod 06EE                     ??___ftpack 0025  
                   ??___lltoft 003E                        __ptext1 008C                        __ptext2 021C  
                      __ptext3 03A2                        __ptext4 0FAF                        __ptext5 0E94  
                      __ptext6 0F38                        __ptext7 0F2A                        __ptext8 0F1C  
                      __ptext9 04B3                __size_of_printf 00B8                   __size_of_ISR 006E  
                 __size_of_SCR 000E              ??_InitialisePorts 0020                      _T1CONbits 0018  
                      _initPIC 0F55                        _dpowers 07F7                        _isdigit 0F46  
                  ?_pi3Connect 0075                        _tmr1Val 00A4                      _IOCAFbits 0393  
                      _rxArray 00B8           UART_TX_String@string 0027                      _IOCAPbits 0391  
          __size_of_Timer1Read 0019                 SCR_Relay@OnOff 0021         __end_of_ADC_OPTO_Relay 0F2A  
       __end_of_UART_RX_String 0EE4                        clrloop0 0E9A           end_of_initialization 0088  
       __end_of_UART_TX_String 07B8            __size_of_ToggleGLED 000D                ___lldiv@divisor 002C  
              ___lldiv@counter 0039                      _RCSTAbits 019D                        printf@c 003D  
                      printf@f 002E                      _SCR_Relay 0F38                      _TMR1Reset 0E94  
                    _PORTAbits 000C                      i1_PassLED 0EF2               __CFG_FOSC$INTOSC 0000  
                    _TRISAbits 008C                ?_ADC_OPTO_Relay 0075                ?_UART_RX_String 0075  
              ?_UART_TX_String 0075                      _TXSTAbits 019E            __size_of_pi3Connect 003A  
               __end_of_Timer1 1000            _setupTestParameters 021C                 __end_of___ftge 064F  
               __end_of___lmul 06EE                 __end_of___wmul 07F7                    _BAUDCONbits 019F  
         _beginHighCurrentTest 03A2                     ?_SCR_Relay 0075                     ?_TMR1Reset 0075  
              verifyACSignal@i 0055                     ?i1_PassLED 0075              __size_ofi1_Timer1 001C  
               __end_of_printf 03A2                      _InitUSART 0F96            start_initialization 0074  
                    _Init_TMR1 0EBC                    __end_of_ISR 0072                    __end_of_SCR 0F38  
                _tmr1StartFlag 0066              __size_of_Fail_LED 000E           ?_setupTestParameters 0075  
                  _APFCON0bits 011D                   ??_Timer1Read 0022                       ??_Timer1 0022  
                     ??___ftge 0026                       ??___lmul 0028       verifyACSignal@handshake2 0057  
                     ??___wmul 0024          ?_beginHighCurrentTest 0075                   ??_ToggleGLED 0020  
                     ??_printf 0034              __size_of___ftpack 0065                     ?_InitUSART 0075  
            __size_of___lltoft 002A                      _adcSample 0068                    __pbssCOMMON 0070  
                    ___latbits 0001            ADC_OPTO_Relay@OnOff 0021                     ?_Init_TMR1 0075  
                __pcstackBANK0 0020                  __pcstackBANK1 00CC                       ?_UART_TX 0020  
              UART_TX_String@i 0025                   _isdigit$1122 0020          ??_setupTestParameters 003A  
           __end_of_Timer1Read 0FC8                       ?_ReadADC 0020                       ?_PassLED 0075  
           __end_of_ToggleGLED 0ED6                       SCR@OnOff 0021               ___lwdiv@dividend 0022  
              _InitialisePorts 0F7F        __size_of_verifyACSignal 0190                       ?___ftneg 0020  
                     ?___lldiv 002C                       ?___fttol 0043                       ?___lwdiv 0020  
                     ?___lwmod 0028                    ??_SCR_Relay 0020                    ??_TMR1Reset 0020  
                  ??i1_PassLED 0075              _previousADCsample 00B4                       ?_initPIC 0075  
        __end_of_empty_RX_BUFF 0795          __end_of_InitialiseADC 0F7F                   ??_pi3Connect 0023  
                     ?_isdigit 0075                       _ADC_Test 0070               ___lwdiv@quotient 0026  
               __size_of_putch 000A                 ___wmul@product 0024                      _tmr1Start 0062  
setupTestParameters@handshake3 003C                      clear_ram0 0E99                      _sampleVal 00B2  
                     _PIE1bits 0091                       _PIR1bits 0011                       _GO_nDONE 04E9  
           __end_of_pi3Connect 0689                      _temp_time 005C         ??_beginHighCurrentTest 0024  
                     i1_Timer1 0FC8                     _ADCON0bits 009D                     _ADCON1bits 009E  
            ___wmul@multiplier 0020                     printf@flag 0039               ??_ADC_OPTO_Relay 0020  
             ??_UART_RX_String 0075                       _Fail_LED 0F00                     printf@prec 003A  
                  ??_InitUSART 0020                    ??_Init_TMR1 0020               ??_UART_TX_String 0022  
            ___lmul@multiplier 0020               __size_of_UART_TX 000A                       _NegCycle 005E  
      __end_of_InitialisePorts 0F96               __size_of_ReadADC 002B                       _PosCycle 0060  
             __size_of_PassLED 000E               __size_of___ftneg 0009               __size_of___lldiv 0053  
             __size_of___fttol 0087               __size_of___lwdiv 0035               __size_of___lwmod 002D  
                     ___ftpack 051E                       ___lltoft 0746                     _ANSELAbits 018C  
             __size_of_initPIC 0014               __size_of_isdigit 000F                ___lwdiv@divisor 0020  
              ___lwdiv@counter 0025                       __ptext10 0F46                       __ptext11 07DB  
                     __ptext20 07B8                       __ptext12 06BE                       __ptext21 0E9F  
                     __ptext13 0583                       __ptext30 0770                       __ptext22 0613  
                     __ptext14 0795                       __ptext31 0EA8                       __ptext23 0746  
                     __ptext15 0F0E                       __ptext40 0EF2                       __ptext32 0F00  
                     __ptext24 051E                       __ptext16 02EA                       __ptext41 0EE4  
                     __ptext33 0F55                       __ptext25 042C                       __ptext17 0EB2  
                     __ptext42 0ED6                       __ptext34 0F7F                       __ptext26 0EC9  
                     __ptext18 06EE                       __ptext35 0F69                       __ptext27 0FE4  
                     __ptext19 0689                       __ptext36 0EBC                       __ptext28 071B  
                     __ptext37 0F96                       __ptext29 064F                       __ptext39 0FC8  
                     _mainTest 00B0                  __size_of_fabs 0023                  __size_of_atoi 006B  
                __size_of_main 003D                  Fail_LED@OnOff 0021                 _verifyACSignal 008C  
                     int$flags 007E                       atoi@sign 002A                      printf@val 003B  
                  _tmr1Samples 0064                     _INTCONbits 000B                       isdigit@c 0021  
                     intlevel1 0000               ___lwmod@dividend 002A               ?_InitialisePorts 0075  
             ___lldiv@dividend 0030              __CFG_CLKOUTEN$OFF 0000         __end_of_verifyACSignal 021C  
                     printf@ap 0038                  __pstringtext1 07F7                  __pstringtext2 0000  
                   i1_Fail_LED 0EE4                     _OPTION_REG 0095    __end_of_setupTestParameters 02EA  
             ___lldiv@quotient 0035                ___lwmod@divisor 0028                ___lwmod@counter 002D  
              ?_verifyACSignal 0075  
